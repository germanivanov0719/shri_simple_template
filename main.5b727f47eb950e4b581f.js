/*! For license information please see main.5b727f47eb950e4b581f.js.LICENSE.txt */
(self.webpackChunkunit_demo_cra=self.webpackChunkunit_demo_cra||[]).push([[0],[(e,t,n)=>{"use strict";e.exports=n(133)},(e,t,n)=>{var r=n(37),o="object"==typeof self&&self&&self.Object===Object&&self,a=r||o||Function("return this")();e.exports=a},e=>{var t=Array.isArray;e.exports=t},(e,t,n)=>{var r=n(56),o=n(61);e.exports=function(e,t){var n=o(e,t);return r(n)?n:void 0}},(e,t,n)=>{var r=n(8),o=n(57),a=n(58),l=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":l&&l in Object(e)?o(e):a(e)}},e=>{e.exports=function(e){return null!=e&&"object"==typeof e}},(e,t,n)=>{var r=n(46),o=n(47),a=n(48),l=n(49),i=n(50);function u(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}u.prototype.clear=r,u.prototype.delete=o,u.prototype.get=a,u.prototype.has=l,u.prototype.set=i,e.exports=u},(e,t,n)=>{var r=n(36);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},(e,t,n)=>{var r=n(1).Symbol;e.exports=r},(e,t,n)=>{var r=n(3)(Object,"create");e.exports=r},(e,t,n)=>{var r=n(70);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},(e,t,n)=>{var r=n(19);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},(e,t,n)=>{var r=n(3)(n(1),"Map");e.exports=r},e=>{e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},(e,t,n)=>{var r=n(62),o=n(69),a=n(71),l=n(72),i=n(73);function u(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}u.prototype.clear=r,u.prototype.delete=o,u.prototype.get=a,u.prototype.has=l,u.prototype.set=i,e.exports=u},(e,t,n)=>{var r=n(91),o=n(97),a=n(17);e.exports=function(e){return a(e)?r(e):o(e)}},e=>{e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},(e,t,n)=>{var r=n(26),o=n(16);e.exports=function(e){return null!=e&&o(e.length)&&!r(e)}},(e,t,n)=>{var r=n(2),o=n(19),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,l=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!o(e))||l.test(e)||!a.test(e)||null!=t&&e in Object(t)}},(e,t,n)=>{var r=n(4),o=n(5);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==r(e)}},(e,t,n)=>{e=n.nmd(e);var r=n(1),o=n(94),a=t&&!t.nodeType&&t,l=a&&e&&!e.nodeType&&e,i=l&&l.exports===a?r.Buffer:void 0,u=(i?i.isBuffer:void 0)||o;e.exports=u},(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(132)},e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var l,i,u=o(e),c=1;c<arguments.length;c++){for(var s in l=Object(arguments[c]))n.call(l,s)&&(u[s]=l[s]);if(t){i=t(l);for(var f=0;f<i.length;f++)r.call(l,i[f])&&(u[i[f]]=l[i[f]])}}return u}},(e,t,n)=>{"use strict";var r=n(35),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?l:i[e.$$typeof]||o}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var i=u(t),v=u(n),m=0;m<l.length;++m){var y=l[m];if(!(a[y]||r&&r[y]||v&&v[y]||i&&i[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},e=>{e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,o=Array(r);++n<r;)o[n]=t(e[n],n,e);return o}},(e,t,n)=>{var r=n(6),o=n(51),a=n(52),l=n(53),i=n(54),u=n(55);function c(e){var t=this.__data__=new r(e);this.size=t.size}c.prototype.clear=o,c.prototype.delete=a,c.prototype.get=l,c.prototype.has=i,c.prototype.set=u,e.exports=c},(e,t,n)=>{var r=n(4),o=n(13);e.exports=function(e){if(!o(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},(e,t,n)=>{var r=n(74),o=n(5);e.exports=function e(t,n,a,l,i){return t===n||(null==t||null==n||!o(t)&&!o(n)?t!=t&&n!=n:r(t,n,a,l,e,i))}},(e,t,n)=>{var r=n(75),o=n(78),a=n(79);e.exports=function(e,t,n,l,i,u){var c=1&n,s=e.length,f=t.length;if(s!=f&&!(c&&f>s))return!1;var d=u.get(e),p=u.get(t);if(d&&p)return d==t&&p==e;var h=-1,v=!0,m=2&n?new r:void 0;for(u.set(e,t),u.set(t,e);++h<s;){var y=e[h],g=t[h];if(l)var b=c?l(g,y,h,t,e,u):l(y,g,h,e,t,u);if(void 0!==b){if(b)continue;v=!1;break}if(m){if(!o(t,(function(e,t){if(!a(m,t)&&(y===e||i(y,e,n,l,u)))return m.push(t)}))){v=!1;break}}else if(y!==g&&!i(y,g,n,l,u)){v=!1;break}}return u.delete(e),u.delete(t),v}},(e,t,n)=>{var r=n(93),o=n(5),a=Object.prototype,l=a.hasOwnProperty,i=a.propertyIsEnumerable,u=r(function(){return arguments}())?r:function(e){return o(e)&&l.call(e,"callee")&&!i.call(e,"callee")};e.exports=u},e=>{var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var r=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==r||"symbol"!=r&&t.test(e))&&e>-1&&e%1==0&&e<n}},(e,t,n)=>{var r=n(95),o=n(96),a=n(41),l=a&&a.isTypedArray,i=l?o(l):r;e.exports=i},(e,t,n)=>{var r=n(33),o=n(11);e.exports=function(e,t){for(var n=0,a=(t=r(t,e)).length;null!=e&&n<a;)e=e[o(t[n++])];return n&&n==a?e:void 0}},(e,t,n)=>{var r=n(2),o=n(18),a=n(109),l=n(112);e.exports=function(e,t){return r(e)?e:o(e,t)?[e]:a(l(e))}},(e,t)=>{"use strict";var n,r,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},o=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var v=!1,m=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();b=e+g;try{m(!0,e)?k.postMessage(null):(v=!1,m=null)}catch(e){throw k.postMessage(null),e}}else v=!1},n=function(e){m=e,v||(v=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},o=function(){p(y),y=-1}}function x(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function E(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,l=e[a],i=a+1,u=e[i];if(void 0!==l&&0>_(l,n))void 0!==u&&0>_(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[a]=n,r=a);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],P=[],O=1,T=null,N=3,L=!1,j=!1,z=!1;function R(e){for(var t=E(P);null!==t;){if(null===t.callback)S(P);else{if(!(t.startTime<=e))break;S(P),t.sortIndex=t.expirationTime,x(C,t)}t=E(P)}}function M(e){if(z=!1,R(e),!j)if(null!==E(C))j=!0,n(I);else{var t=E(P);null!==t&&r(M,t.startTime-e)}}function I(e,n){j=!1,z&&(z=!1,o()),L=!0;var a=N;try{for(R(n),T=E(C);null!==T&&(!(T.expirationTime>n)||e&&!t.unstable_shouldYield());){var l=T.callback;if("function"==typeof l){T.callback=null,N=T.priorityLevel;var i=l(T.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?T.callback=i:T===E(C)&&S(C),R(n)}else S(C);T=E(C)}if(null!==T)var u=!0;else{var c=E(P);null!==c&&r(M,c.startTime-n),u=!1}return u}finally{T=null,N=a,L=!1}}var A=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){j||L||(j=!0,n(I))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return E(C)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var n=N;N=t;try{return e()}finally{N=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=A,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=N;N=e;try{return t()}finally{N=n}},t.unstable_scheduleCallback=function(e,a,l){var i=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?i+l:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:O++,callback:a,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>i?(e.sortIndex=l,x(P,e),null===E(C)&&e===E(P)&&(z?o():z=!0,r(M,l-i))):(e.sortIndex=u,x(C,e),j||L||(j=!0,n(I))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var n=N;N=t;try{return e.apply(this,arguments)}finally{N=n}}}},(e,t,n)=>{"use strict";e.exports=n(135)},e=>{e.exports=function(e,t){return e===t||e!=e&&t!=t}},(e,t,n)=>{var r="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g;e.exports=r},e=>{var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},(e,t,n)=>{var r=n(13);e.exports=function(e){return e==e&&!r(e)}},e=>{e.exports=function(e,t){return function(n){return null!=n&&n[e]===t&&(void 0!==t||e in Object(n))}}},(e,t,n)=>{e=n.nmd(e);var r=n(37),o=t&&!t.nodeType&&t,a=o&&e&&!e.nodeType&&e,l=a&&a.exports===o&&r.process,i=function(){try{return a&&a.require&&a.require("util").types||l&&l.binding&&l.binding("util")}catch(e){}}();e.exports=i},(e,t,n)=>{var r=n(24),o=n(43),a=n(121),l=n(2);e.exports=function(e,t){return(l(e)?r:a)(e,o(t,3))}},(e,t,n)=>{var r=n(44),o=n(107),a=n(117),l=n(2),i=n(118);e.exports=function(e){return"function"==typeof e?e:null==e?a:"object"==typeof e?l(e)?o(e[0],e[1]):r(e):i(e)}},(e,t,n)=>{var r=n(45),o=n(106),a=n(40);e.exports=function(e){var t=o(e);return 1==t.length&&t[0][2]?a(t[0][0],t[0][1]):function(n){return n===e||r(n,e,t)}}},(e,t,n)=>{var r=n(25),o=n(27);e.exports=function(e,t,n,a){var l=n.length,i=l,u=!a;if(null==e)return!i;for(e=Object(e);l--;){var c=n[l];if(u&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++l<i;){var s=(c=n[l])[0],f=e[s],d=c[1];if(u&&c[2]){if(void 0===f&&!(s in e))return!1}else{var p=new r;if(a)var h=a(f,d,s,e,t,p);if(!(void 0===h?o(d,f,3,a,p):h))return!1}}return!0}},e=>{e.exports=function(){this.__data__=[],this.size=0}},(e,t,n)=>{var r=n(7),o=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0||(n==t.length-1?t.pop():o.call(t,n,1),--this.size,0))}},(e,t,n)=>{var r=n(7);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},(e,t,n)=>{var r=n(7);e.exports=function(e){return r(this.__data__,e)>-1}},(e,t,n)=>{var r=n(7);e.exports=function(e,t){var n=this.__data__,o=r(n,e);return o<0?(++this.size,n.push([e,t])):n[o][1]=t,this}},(e,t,n)=>{var r=n(6);e.exports=function(){this.__data__=new r,this.size=0}},e=>{e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},e=>{e.exports=function(e){return this.__data__.get(e)}},e=>{e.exports=function(e){return this.__data__.has(e)}},(e,t,n)=>{var r=n(6),o=n(12),a=n(14);e.exports=function(e,t){var n=this.__data__;if(n instanceof r){var l=n.__data__;if(!o||l.length<199)return l.push([e,t]),this.size=++n.size,this;n=this.__data__=new a(l)}return n.set(e,t),this.size=n.size,this}},(e,t,n)=>{var r=n(26),o=n(59),a=n(13),l=n(38),i=/^\[object .+?Constructor\]$/,u=Function.prototype,c=Object.prototype,s=u.toString,f=c.hasOwnProperty,d=RegExp("^"+s.call(f).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!a(e)||o(e))&&(r(e)?d:i).test(l(e))}},(e,t,n)=>{var r=n(8),o=Object.prototype,a=o.hasOwnProperty,l=o.toString,i=r?r.toStringTag:void 0;e.exports=function(e){var t=a.call(e,i),n=e[i];try{e[i]=void 0;var r=!0}catch(e){}var o=l.call(e);return r&&(t?e[i]=n:delete e[i]),o}},e=>{var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},(e,t,n)=>{var r,o=n(60),a=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!a&&a in e}},(e,t,n)=>{var r=n(1)["__core-js_shared__"];e.exports=r},e=>{e.exports=function(e,t){return null==e?void 0:e[t]}},(e,t,n)=>{var r=n(63),o=n(6),a=n(12);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(a||o),string:new r}}},(e,t,n)=>{var r=n(64),o=n(65),a=n(66),l=n(67),i=n(68);function u(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}u.prototype.clear=r,u.prototype.delete=o,u.prototype.get=a,u.prototype.has=l,u.prototype.set=i,e.exports=u},(e,t,n)=>{var r=n(9);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},e=>{e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},(e,t,n)=>{var r=n(9),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return o.call(t,e)?t[e]:void 0}},(e,t,n)=>{var r=n(9),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:o.call(t,e)}},(e,t,n)=>{var r=n(9);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},(e,t,n)=>{var r=n(10);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},e=>{e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},(e,t,n)=>{var r=n(10);e.exports=function(e){return r(this,e).get(e)}},(e,t,n)=>{var r=n(10);e.exports=function(e){return r(this,e).has(e)}},(e,t,n)=>{var r=n(10);e.exports=function(e,t){var n=r(this,e),o=n.size;return n.set(e,t),this.size+=n.size==o?0:1,this}},(e,t,n)=>{var r=n(25),o=n(28),a=n(80),l=n(84),i=n(101),u=n(2),c=n(20),s=n(31),f="[object Arguments]",d="[object Array]",p="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,v,m,y){var g=u(e),b=u(t),w=g?d:i(e),k=b?d:i(t),x=(w=w==f?p:w)==p,E=(k=k==f?p:k)==p,S=w==k;if(S&&c(e)){if(!c(t))return!1;g=!0,x=!1}if(S&&!x)return y||(y=new r),g||s(e)?o(e,t,n,v,m,y):a(e,t,w,n,v,m,y);if(!(1&n)){var _=x&&h.call(e,"__wrapped__"),C=E&&h.call(t,"__wrapped__");if(_||C){var P=_?e.value():e,O=C?t.value():t;return y||(y=new r),m(P,O,n,v,y)}}return!!S&&(y||(y=new r),l(e,t,n,v,m,y))}},(e,t,n)=>{var r=n(14),o=n(76),a=n(77);function l(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new r;++t<n;)this.add(e[t])}l.prototype.add=l.prototype.push=o,l.prototype.has=a,e.exports=l},e=>{e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},e=>{e.exports=function(e){return this.__data__.has(e)}},e=>{e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}},e=>{e.exports=function(e,t){return e.has(t)}},(e,t,n)=>{var r=n(8),o=n(81),a=n(36),l=n(28),i=n(82),u=n(83),c=r?r.prototype:void 0,s=c?c.valueOf:void 0;e.exports=function(e,t,n,r,c,f,d){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!f(new o(e),new o(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var p=i;case"[object Set]":var h=1&r;if(p||(p=u),e.size!=t.size&&!h)return!1;var v=d.get(e);if(v)return v==t;r|=2,d.set(e,t);var m=l(p(e),p(t),r,c,f,d);return d.delete(e),m;case"[object Symbol]":if(s)return s.call(e)==s.call(t)}return!1}},(e,t,n)=>{var r=n(1).Uint8Array;e.exports=r},e=>{e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}},e=>{e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},(e,t,n)=>{var r=n(85),o=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,a,l,i){var u=1&n,c=r(e),s=c.length;if(s!=r(t).length&&!u)return!1;for(var f=s;f--;){var d=c[f];if(!(u?d in t:o.call(t,d)))return!1}var p=i.get(e),h=i.get(t);if(p&&h)return p==t&&h==e;var v=!0;i.set(e,t),i.set(t,e);for(var m=u;++f<s;){var y=e[d=c[f]],g=t[d];if(a)var b=u?a(g,y,d,t,e,i):a(y,g,d,e,t,i);if(!(void 0===b?y===g||l(y,g,n,a,i):b)){v=!1;break}m||(m="constructor"==d)}if(v&&!m){var w=e.constructor,k=t.constructor;w==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof w&&w instanceof w&&"function"==typeof k&&k instanceof k||(v=!1)}return i.delete(e),i.delete(t),v}},(e,t,n)=>{var r=n(86),o=n(88),a=n(15);e.exports=function(e){return r(e,a,o)}},(e,t,n)=>{var r=n(87),o=n(2);e.exports=function(e,t,n){var a=t(e);return o(e)?a:r(a,n(e))}},e=>{e.exports=function(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e}},(e,t,n)=>{var r=n(89),o=n(90),a=Object.prototype.propertyIsEnumerable,l=Object.getOwnPropertySymbols,i=l?function(e){return null==e?[]:(e=Object(e),r(l(e),(function(t){return a.call(e,t)})))}:o;e.exports=i},e=>{e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,o=0,a=[];++n<r;){var l=e[n];t(l,n,e)&&(a[o++]=l)}return a}},e=>{e.exports=function(){return[]}},(e,t,n)=>{var r=n(92),o=n(29),a=n(2),l=n(20),i=n(30),u=n(31),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=a(e),s=!n&&o(e),f=!n&&!s&&l(e),d=!n&&!s&&!f&&u(e),p=n||s||f||d,h=p?r(e.length,String):[],v=h.length;for(var m in e)!t&&!c.call(e,m)||p&&("length"==m||f&&("offset"==m||"parent"==m)||d&&("buffer"==m||"byteLength"==m||"byteOffset"==m)||i(m,v))||h.push(m);return h}},e=>{e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},(e,t,n)=>{var r=n(4),o=n(5);e.exports=function(e){return o(e)&&"[object Arguments]"==r(e)}},e=>{e.exports=function(){return!1}},(e,t,n)=>{var r=n(4),o=n(16),a=n(5),l={};l["[object Float32Array]"]=l["[object Float64Array]"]=l["[object Int8Array]"]=l["[object Int16Array]"]=l["[object Int32Array]"]=l["[object Uint8Array]"]=l["[object Uint8ClampedArray]"]=l["[object Uint16Array]"]=l["[object Uint32Array]"]=!0,l["[object Arguments]"]=l["[object Array]"]=l["[object ArrayBuffer]"]=l["[object Boolean]"]=l["[object DataView]"]=l["[object Date]"]=l["[object Error]"]=l["[object Function]"]=l["[object Map]"]=l["[object Number]"]=l["[object Object]"]=l["[object RegExp]"]=l["[object Set]"]=l["[object String]"]=l["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&o(e.length)&&!!l[r(e)]}},e=>{e.exports=function(e){return function(t){return e(t)}}},(e,t,n)=>{var r=n(98),o=n(99),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return o(e);var t=[];for(var n in Object(e))a.call(e,n)&&"constructor"!=n&&t.push(n);return t}},e=>{var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},(e,t,n)=>{var r=n(100)(Object.keys,Object);e.exports=r},e=>{e.exports=function(e,t){return function(n){return e(t(n))}}},(e,t,n)=>{var r=n(102),o=n(12),a=n(103),l=n(104),i=n(105),u=n(4),c=n(38),s="[object Map]",f="[object Promise]",d="[object Set]",p="[object WeakMap]",h="[object DataView]",v=c(r),m=c(o),y=c(a),g=c(l),b=c(i),w=u;(r&&w(new r(new ArrayBuffer(1)))!=h||o&&w(new o)!=s||a&&w(a.resolve())!=f||l&&w(new l)!=d||i&&w(new i)!=p)&&(w=function(e){var t=u(e),n="[object Object]"==t?e.constructor:void 0,r=n?c(n):"";if(r)switch(r){case v:return h;case m:return s;case y:return f;case g:return d;case b:return p}return t}),e.exports=w},(e,t,n)=>{var r=n(3)(n(1),"DataView");e.exports=r},(e,t,n)=>{var r=n(3)(n(1),"Promise");e.exports=r},(e,t,n)=>{var r=n(3)(n(1),"Set");e.exports=r},(e,t,n)=>{var r=n(3)(n(1),"WeakMap");e.exports=r},(e,t,n)=>{var r=n(39),o=n(15);e.exports=function(e){for(var t=o(e),n=t.length;n--;){var a=t[n],l=e[a];t[n]=[a,l,r(l)]}return t}},(e,t,n)=>{var r=n(27),o=n(108),a=n(114),l=n(18),i=n(39),u=n(40),c=n(11);e.exports=function(e,t){return l(e)&&i(t)?u(c(e),t):function(n){var l=o(n,e);return void 0===l&&l===t?a(n,e):r(t,l,3)}}},(e,t,n)=>{var r=n(32);e.exports=function(e,t,n){var o=null==e?void 0:r(e,t);return void 0===o?n:o}},(e,t,n)=>{var r=n(110),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,l=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(o,(function(e,n,r,o){t.push(r?o.replace(a,"$1"):n||e)})),t}));e.exports=l},(e,t,n)=>{var r=n(111);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},(e,t,n)=>{var r=n(14);function o(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,o=t?t.apply(this,r):r[0],a=n.cache;if(a.has(o))return a.get(o);var l=e.apply(this,r);return n.cache=a.set(o,l)||a,l};return n.cache=new(o.Cache||r),n}o.Cache=r,e.exports=o},(e,t,n)=>{var r=n(113);e.exports=function(e){return null==e?"":r(e)}},(e,t,n)=>{var r=n(8),o=n(24),a=n(2),l=n(19),i=r?r.prototype:void 0,u=i?i.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(a(t))return o(t,e)+"";if(l(t))return u?u.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},(e,t,n)=>{var r=n(115),o=n(116);e.exports=function(e,t){return null!=e&&o(e,t,r)}},e=>{e.exports=function(e,t){return null!=e&&t in Object(e)}},(e,t,n)=>{var r=n(33),o=n(29),a=n(2),l=n(30),i=n(16),u=n(11);e.exports=function(e,t,n){for(var c=-1,s=(t=r(t,e)).length,f=!1;++c<s;){var d=u(t[c]);if(!(f=null!=e&&n(e,d)))break;e=e[d]}return f||++c!=s?f:!!(s=null==e?0:e.length)&&i(s)&&l(d,s)&&(a(e)||o(e))}},e=>{e.exports=function(e){return e}},(e,t,n)=>{var r=n(119),o=n(120),a=n(18),l=n(11);e.exports=function(e){return a(e)?r(l(e)):o(e)}},e=>{e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},(e,t,n)=>{var r=n(32);e.exports=function(e){return function(t){return r(t,e)}}},(e,t,n)=>{var r=n(122),o=n(17);e.exports=function(e,t){var n=-1,a=o(e)?Array(e.length):[];return r(e,(function(e,r,o){a[++n]=t(e,r,o)})),a}},(e,t,n)=>{var r=n(123),o=n(126)(r);e.exports=o},(e,t,n)=>{var r=n(124),o=n(15);e.exports=function(e,t){return e&&r(e,t,o)}},(e,t,n)=>{var r=n(125)();e.exports=r},e=>{e.exports=function(e){return function(t,n,r){for(var o=-1,a=Object(t),l=r(t),i=l.length;i--;){var u=l[e?i:++o];if(!1===n(a[u],u,a))break}return t}}},(e,t,n)=>{var r=n(17);e.exports=function(e,t){return function(n,o){if(null==n)return n;if(!r(n))return e(n,o);for(var a=n.length,l=t?a:-1,i=Object(n);(t?l--:++l<a)&&!1!==o(i[l],l,i););return n}}},(e,t,n)=>{var r=n(128);e.exports=function e(t,n,o){return r(n)||(o=n||o,n=[]),o=o||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(t,n):r(t)?function(t,n,r){for(var o=[],a=0;a<t.length;a++)o.push(e(t[a],n,r).source);return s(new RegExp("(?:"+o.join("|")+")",f(r)),n)}(t,n,o):function(e,t,n){return d(a(e,n),t,n)}(t,n,o)},e.exports.parse=a,e.exports.compile=function(e,t){return i(a(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,l=0,i="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(l,p),l=p+f.length,d)i+=d[1];else{var h=e[l],v=n[2],m=n[3],y=n[4],g=n[5],b=n[6],w=n[7];i&&(r.push(i),i="");var k=null!=v&&null!=h&&h!==v,x="+"===b||"*"===b,E="?"===b||"*"===b,S=n[2]||s,_=y||g;r.push({name:m||a++,prefix:v||"",delimiter:S,optional:E,repeat:x,partial:k,asterisk:!!w,pattern:_?c(_):w?".*":"[^"+u(S)+"]+?"})}}return l<e.length&&(i+=e.substr(l)),i&&r.push(i),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var a="",i=t||{},u=(o||{}).pretty?l:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=i[s.name];if(null==d){if(s.optional){s.partial&&(a+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");a+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');a+=s.prefix+f}}else a+=s}return a}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,l="",i=0;i<e.length;i++){var c=e[i];if("string"==typeof c)l+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),l+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),v=l.slice(-h.length)===h;return o||(l=(v?l.slice(0,-h.length):l)+"(?:"+h+"(?=$))?"),l+=a?"$":o&&v?"":"(?="+h+"|$)",s(new RegExp("^"+l,f(n)),t)}},e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},(e,t,n)=>{"use strict";var r=n(130);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},(e,t,n)=>{"use strict";var r=n(21),o=n(0),a=o.createContext(null),l=function(e){e()},i=function(){return l},u={notify:function(){},get:function(){return[]}};function c(e,t){var n,r=u;function o(){l.onStateChange&&l.onStateChange()}function a(){n||(n=t?t.addNestedSub(o):e.subscribe(o),r=function(){var e=i(),t=null,n=null;return{clear:function(){t=null,n=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],n=t;n;)e.push(n),n=n.next;return e},subscribe:function(e){var r=!0,o=n={callback:e,next:null,prev:n};return o.prev?o.prev.next=o:t=o,function(){r&&null!==t&&(r=!1,o.next?o.next.prev=o.prev:n=o.prev,o.prev?o.prev.next=o.next:t=o.next)}}}}())}var l={addNestedSub:function(e){return a(),r.subscribe(e)},notifyNestedSubs:function(){r.notify()},handleChangeWrapper:o,isSubscribed:function(){return Boolean(n)},trySubscribe:a,tryUnsubscribe:function(){n&&(n(),n=void 0,r.clear(),r=u)},getListeners:function(){return r}};return l}var s="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?o.useLayoutEffect:o.useEffect;const f=function(e){var t=e.store,n=e.context,r=e.children,l=(0,o.useMemo)((function(){var e=c(t);return{store:t,subscription:e}}),[t]),i=(0,o.useMemo)((function(){return t.getState()}),[t]);s((function(){var e=l.subscription;return e.onStateChange=e.notifyNestedSubs,e.trySubscribe(),i!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[l,i]);var u=n||a;return o.createElement(u.Provider,{value:l},r)};function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},d.apply(this,arguments)}function p(){return(0,o.useContext)(a)}function h(e){void 0===e&&(e=a);var t=e===a?p:function(){return(0,o.useContext)(e)};return function(){return t().store}}n(23),n(35);var v=h();function m(e){void 0===e&&(e=a);var t=e===a?v:h(e);return function(){return t().dispatch}}var y=m(),g=function(e,t){return e===t};function b(e){void 0===e&&(e=a);var t=e===a?p:function(){return(0,o.useContext)(e)};return function(e,n){void 0===n&&(n=g);var r=t(),a=function(e,t,n,r){var a,l=(0,o.useReducer)((function(e){return e+1}),0)[1],i=(0,o.useMemo)((function(){return c(n,r)}),[n,r]),u=(0,o.useRef)(),f=(0,o.useRef)(),d=(0,o.useRef)(),p=(0,o.useRef)(),h=n.getState();try{if(e!==f.current||h!==d.current||u.current){var v=e(h);a=void 0!==p.current&&t(v,p.current)?p.current:v}else a=p.current}catch(e){throw u.current&&(e.message+="\nThe error may be correlated with this previous error:\n"+u.current.stack+"\n\n"),e}return s((function(){f.current=e,d.current=h,p.current=a,u.current=void 0})),s((function(){function e(){try{var e=n.getState();if(e===d.current)return;var r=f.current(e);if(t(r,p.current))return;p.current=r,d.current=e}catch(e){u.current=e}l()}return i.onStateChange=e,i.trySubscribe(),e(),function(){return i.tryUnsubscribe()}}),[n,i]),a}(e,n,r.store,r.subscription);return(0,o.useDebugValue)(a),a}}var w,k=b();function x(e,t){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},x(e,t)}function E(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,x(e,t)}w=r.unstable_batchedUpdates,l=w;var S=n(136),_=n.n(S);function C(e){return"/"===e.charAt(0)}function P(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}function O(e,t){if(!e)throw new Error("Invariant failed")}function T(e){return"/"===e.charAt(0)?e:"/"+e}function N(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function L(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function j(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function z(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e),o.state=t):(void 0===(o=d({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],a=e&&C(e),l=t&&C(t),i=a||l;if(e&&C(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var f=o[s];"."===f?P(o,s):".."===f?(P(o,s),c++):c&&(P(o,s),c--)}if(!i)for(;c--;c)o.unshift("..");!i||""===o[0]||o[0]&&C(o[0])||o.unshift("");var d=o.join("/");return n&&"/"!==d.substr(-1)&&(d+="/"),d}(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function R(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var a="function"==typeof e?e(t,n):e;"string"==typeof a?"function"==typeof r?r(a,o):o(!0):o(!1!==a)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var M=!("undefined"==typeof window||!window.document||!window.document.createElement);function I(e,t){t(window.confirm(e))}var A="popstate",D="hashchange";function F(){try{return window.history.state||{}}catch(e){return{}}}function U(e){void 0===e&&(e={}),M||O(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,l=a.forceRefresh,i=void 0!==l&&l,u=a.getUserConfirmation,c=void 0===u?I:u,s=a.keyLength,f=void 0===s?6:s,p=e.basename?L(T(e.basename)):"";function h(e){var t=e||{},n=t.key,r=t.state,o=window.location,a=o.pathname+o.search+o.hash;return p&&(a=N(a,p)),z(a,r,n)}function v(){return Math.random().toString(36).substr(2,f)}var m=R();function y(e){d($,e),$.length=n.length,m.notifyListeners($.location,$.action)}function g(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||k(h(e.state))}function b(){k(h(F()))}var w=!1;function k(e){w?(w=!1,y()):m.confirmTransitionTo(e,"POP",c,(function(t){t?y({action:"POP",location:e}):function(e){var t=$.location,n=E.indexOf(t.key);-1===n&&(n=0);var r=E.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(w=!0,_(o))}(e)}))}var x=h(F()),E=[x.key];function S(e){return p+j(e)}function _(e){n.go(e)}var C=0;function P(e){1===(C+=e)&&1===e?(window.addEventListener(A,g),o&&window.addEventListener(D,b)):0===C&&(window.removeEventListener(A,g),o&&window.removeEventListener(D,b))}var U=!1,$={length:n.length,action:"POP",location:x,createHref:S,push:function(e,t){var o="PUSH",a=z(e,t,v(),$.location);m.confirmTransitionTo(a,o,c,(function(e){if(e){var t=S(a),l=a.key,u=a.state;if(r)if(n.pushState({key:l,state:u},null,t),i)window.location.href=t;else{var c=E.indexOf($.location.key),s=E.slice(0,c+1);s.push(a.key),E=s,y({action:o,location:a})}else window.location.href=t}}))},replace:function(e,t){var o="REPLACE",a=z(e,t,v(),$.location);m.confirmTransitionTo(a,o,c,(function(e){if(e){var t=S(a),l=a.key,u=a.state;if(r)if(n.replaceState({key:l,state:u},null,t),i)window.location.replace(t);else{var c=E.indexOf($.location.key);-1!==c&&(E[c]=a.key),y({action:o,location:a})}else window.location.replace(t)}}))},go:_,goBack:function(){_(-1)},goForward:function(){_(1)},block:function(e){void 0===e&&(e=!1);var t=m.setPrompt(e);return U||(P(1),U=!0),function(){return U&&(U=!1,P(-1)),t()}},listen:function(e){var t=m.appendListener(e);return P(1),function(){P(-1),t()}}};return $}var $=n(127),V=n.n($);function B(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var W=1073741823,H="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function Q(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var q=o.createContext||function(e,t){var n,r,a,l="__create-react-context-"+((H[a="__global_unique_id__"]=(H[a]||0)+1)+"__"),i=function(e){function n(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).emitter=Q(t.props.value),t}E(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[l]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((a=r)===(l=o)?0!==a||1/a==1/l:a!=a&&l!=l)?n=0:(n="function"==typeof t?t(r,o):W,0!=(n|=0)&&this.emitter.set(e.value,n))}var a,l},r.render=function(){return this.props.children},n}(o.Component);i.childContextTypes=((n={})[l]=_().object.isRequired,n);var u=function(t){function n(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).observedBits=void 0,e.state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}E(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?W:t},r.componentDidMount=function(){this.context[l]&&this.context[l].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?W:e},r.componentWillUnmount=function(){this.context[l]&&this.context[l].off(this.onUpdate)},r.getValue=function(){return this.context[l]?this.context[l].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(o.Component);return u.contextTypes=((r={})[l]=_().object,r),{Provider:i,Consumer:u}},K=function(e){var t=q();return t.displayName=e,t},Y=K("Router-History"),X=K("Router"),G=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._pendingLocation=e}))),n}E(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){var e=this;this._isMounted=!0,this.unlisten&&this.unlisten(),this.props.staticContext||(this.unlisten=this.props.history.listen((function(t){e._isMounted&&e.setState({location:t})}))),this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},n.render=function(){return o.createElement(X.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.createElement(Y.Provider,{children:this.props.children||null,value:this.props.history}))},t}(o.Component);o.Component,o.Component;var J={},Z=0;function ee(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,a=void 0!==o&&o,l=n.strict,i=void 0!==l&&l,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=J[n]||(J[n]={});if(r[e])return r[e];var o=[],a={regexp:V()(e,o,t),keys:o};return Z<1e4&&(r[e]=a,Z++),a}(n,{end:a,strict:i,sensitive:c}),o=r.regexp,l=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return a&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:l.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var te=function(e){function t(){return e.apply(this,arguments)||this}return E(t,e),t.prototype.render=function(){var e=this;return o.createElement(X.Consumer,null,(function(t){t||O(!1);var n=e.props.location||t.location,r=d({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?ee(n.pathname,e.props):t.match}),a=e.props,l=a.children,i=a.component,u=a.render;return Array.isArray(l)&&function(e){return 0===o.Children.count(e)}(l)&&(l=null),o.createElement(X.Provider,{value:r},r.match?l?"function"==typeof l?l(r):l:i?o.createElement(i,r):u?u(r):null:"function"==typeof l?l(r):null)}))},t}(o.Component);o.Component;var ne=function(e){function t(){return e.apply(this,arguments)||this}return E(t,e),t.prototype.render=function(){var e=this;return o.createElement(X.Consumer,null,(function(t){t||O(!1);var n,r,a=e.props.location||t.location;return o.Children.forEach(e.props.children,(function(e){if(null==r&&o.isValidElement(e)){n=e;var l=e.props.path||e.props.from;r=l?ee(a.pathname,d({},e.props,{path:l})):t.match}})),r?o.cloneElement(n,{location:a,computedMatch:r}):null}))},t}(o.Component);o.useContext;var re=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=U(t.props),t}return E(t,e),t.prototype.render=function(){return o.createElement(G,{history:this.history,children:this.props.children})},t}(o.Component);o.Component;var oe=function(e,t){return"function"==typeof e?e(t):e},ae=function(e,t){return"string"==typeof e?z(e,null,null,t):e},le=function(e){return e},ie=o.forwardRef;void 0===ie&&(ie=le);var ue=ie((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,l=B(e,["innerRef","navigate","onClick"]),i=l.target,u=d({},l,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=le!==ie&&t||n,o.createElement("a",u)})),ce=ie((function(e,t){var n=e.component,r=void 0===n?ue:n,a=e.replace,l=e.to,i=e.innerRef,u=B(e,["component","replace","to","innerRef"]);return o.createElement(X.Consumer,null,(function(e){e||O(!1);var n=e.history,c=ae(oe(l,e.location),e.location),s=c?n.createHref(c):"",f=d({},u,{href:s,navigate:function(){var t=oe(l,e.location),r=j(e.location)===j(ae(t));(a||r?n.replace:n.push)(t)}});return le!==ie?f.ref=t||i:f.innerRef=i,o.createElement(r,f)}))})),se=function(e){return e},fe=o.forwardRef;void 0===fe&&(fe=se),fe((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,a=e.activeClassName,l=void 0===a?"active":a,i=e.activeStyle,u=e.className,c=e.exact,s=e.isActive,f=e.location,p=e.sensitive,h=e.strict,v=e.style,m=e.to,y=e.innerRef,g=B(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.createElement(X.Consumer,null,(function(e){e||O(!1);var n=f||e.location,a=ae(oe(m,n),n),b=a.pathname,w=b&&b.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=w?ee(n.pathname,{path:w,exact:c,sensitive:p,strict:h}):null,x=!!(s?s(k,n):k),E="function"==typeof u?u(x):u,S="function"==typeof v?v(x):v;x&&(E=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(E,l),S=d({},S,i));var _=d({"aria-current":x&&r||null,className:E,style:S,to:a},g);return se!==fe?_.ref=t||y:_.innerRef=y,o.createElement(ce,_)}))}));const de=function(){return o.createElement(o.Fragment,null,o.createElement("h1",{"data-testid":"page-title"},"About"),o.createElement("p",null,"This is an example application."))};var pe=n(42),he=n.n(pe);function ve(e){return"Minified Redux error #"+e+"; visit https://redux.js.org/Errors?code="+e+" for the full message or use the non-minified dev environment for full errors. "}var me="function"==typeof Symbol&&Symbol.observable||"@@observable",ye=function(){return Math.random().toString(36).substring(7).split("").join(".")},ge={INIT:"@@redux/INIT"+ye(),REPLACE:"@@redux/REPLACE"+ye(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+ye()}};function be(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function we(e){return function(e){if(Array.isArray(e))return ke(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return ke(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ke(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ke(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function xe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ee(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?xe(Object(n),!0).forEach((function(t){Se(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):xe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Se(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var _e={items:["Позавтракать","Сходить в магазин","Покормить кота"],done:{},text:""};const Ce={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let Pe;const Oe=new Uint8Array(16);function Te(){if(!Pe&&(Pe="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Pe))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Pe(Oe)}const Ne=[];for(let e=0;e<256;++e)Ne.push((e+256).toString(16).slice(1));const Le=function(e,t,n){if(Ce.randomUUID&&!t&&!e)return Ce.randomUUID();const r=(e=e||{}).random||(e.rng||Te)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=r[e];return t}return function(e,t=0){return(Ne[e[t+0]]+Ne[e[t+1]]+Ne[e[t+2]]+Ne[e[t+3]]+"-"+Ne[e[t+4]]+Ne[e[t+5]]+"-"+Ne[e[t+6]]+Ne[e[t+7]]+"-"+Ne[e[t+8]]+Ne[e[t+9]]+"-"+Ne[e[t+10]]+Ne[e[t+11]]+Ne[e[t+12]]+Ne[e[t+13]]+Ne[e[t+14]]+Ne[e[t+15]]).toLowerCase()}(r)},je=function(e){var t=e.index,n=y(),r=k((function(e){return e.items[t]})),a=k((function(e){return e.done[t]})),l=(0,o.useCallback)((function(){return n(function(e,t){return{type:"SET_DONE",index:e,done:t}}(t,!a))}),[t,a,n]);return o.createElement("div",{"data-testid":Le(),className:"EPk3EXERT5xyM_B8zf0P"},o.createElement("div",{"data-testid":"list-item",className:a?"done":""},o.createElement("input",{type:"checkbox",checked:a,onChange:l}),r))},ze=function(){var e=y(),t=k((function(e){return e.items})),n=k((function(e){return e.text})),r=(0,o.useCallback)((function(t){var n=t.target;e(function(e){return{type:"SET_TEXT",text:e}}(n.value))}),[e]),a=(0,o.useCallback)((function(){e(function(e){return{type:"ADD_ITEM",text:e}}(n))}),[e,n]);return o.createElement("div",null,o.createElement("div",null,o.createElement("input",{"data-testid":"input-add",value:n,onChange:r}),o.createElement("button",{type:"button","data-testid":"button-add",disabled:!n,onClick:a},"Добавить")),o.createElement("div",{"data-testid":"list",className:"list"},he()(t,(function(e,t){return o.createElement(je,{key:t,index:t})}))))},Re=function(){return o.createElement(o.Fragment,null,o.createElement("h1",{"data-testid":"page-title"},"Home"),o.createElement("p",null,"This is the list."),o.createElement(ze,null))},Me=function(){return o.createElement("div",null,o.createElement("nav",null,o.createElement(ce,{"data-testid":"link-home",to:"/"},"Home"),o.createElement(ce,{to:"/about"},"About")),o.createElement(ne,null,o.createElement(te,{path:"/about"},o.createElement(de,null)),o.createElement(te,{path:"/"},o.createElement(Re,null))))};var Ie=function e(t,n,r){var o;if("function"==typeof n&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw new Error(ve(0));if("function"==typeof n&&void 0===r&&(r=n,n=void 0),void 0!==r){if("function"!=typeof r)throw new Error(ve(1));return r(e)(t,n)}if("function"!=typeof t)throw new Error(ve(2));var a=t,l=n,i=[],u=i,c=!1;function s(){u===i&&(u=i.slice())}function f(){if(c)throw new Error(ve(3));return l}function d(e){if("function"!=typeof e)throw new Error(ve(4));if(c)throw new Error(ve(5));var t=!0;return s(),u.push(e),function(){if(t){if(c)throw new Error(ve(6));t=!1,s();var n=u.indexOf(e);u.splice(n,1),i=null}}}function p(e){if(!be(e))throw new Error(ve(7));if(void 0===e.type)throw new Error(ve(8));if(c)throw new Error(ve(9));try{c=!0,l=a(l,e)}finally{c=!1}for(var t=i=u,n=0;n<t.length;n++)(0,t[n])();return e}function h(e){if("function"!=typeof e)throw new Error(ve(10));a=e,p({type:ge.REPLACE})}function v(){var e,t=d;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new Error(ve(11));function n(){e.next&&e.next(f())}return n(),{unsubscribe:t(n)}}})[me]=function(){return this},e}return p({type:ge.INIT}),(o={dispatch:p,subscribe:d,getState:f,replaceReducer:h})[me]=v,o}((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_e,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADD_ITEM":return Ee(Ee({},e),{},{text:"",items:[].concat(we(e.items),[t.text])});case"SET_TEXT":return Ee(Ee({},e),{},{text:t.text});case"SET_DONE":return Ee(Ee({},e),{},{done:Ee(Ee({},e.done),{},Se({},t.index,t.done))});default:return e}}));r.render(o.createElement(re,null,o.createElement(f,{store:Ie},o.createElement(Me,null))),document.getElementById("root"))},(e,t,n)=>{"use strict";var r=n(0),o=n(22),a=n(134);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},v={};function m(e,t,n,r,o,a,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=l}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=y.hasOwnProperty(t)?y[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(v,e)||!p.call(h,e)&&(d.test(e)?v[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=60103,E=60106,S=60107,_=60108,C=60114,P=60109,O=60110,T=60112,N=60113,L=60120,j=60115,z=60116,R=60121,M=60128,I=60129,A=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var F=Symbol.for;x=F("react.element"),E=F("react.portal"),S=F("react.fragment"),_=F("react.strict_mode"),C=F("react.profiler"),P=F("react.provider"),O=F("react.context"),T=F("react.forward_ref"),N=F("react.suspense"),L=F("react.suspense_list"),j=F("react.memo"),z=F("react.lazy"),R=F("react.block"),F("react.scope"),M=F("react.opaque.id"),I=F("react.debug_trace_mode"),A=F("react.offscreen"),D=F("react.legacy_hidden")}var U,$="function"==typeof Symbol&&Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=$&&e[$]||e["@@iterator"])?e:null}function B(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var W=!1;function H(e,t){if(!e||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=r.stack.split("\n"),l=o.length-1,i=a.length-1;1<=l&&0<=i&&o[l]!==a[i];)i--;for(;1<=l&&0<=i;l--,i--)if(o[l]!==a[i]){if(1!==l||1!==i)do{if(l--,0>--i||o[l]!==a[i])return"\n"+o[l].replace(" at new "," at ")}while(1<=l&&0<=i);break}}}finally{W=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function Q(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case E:return"Portal";case C:return"Profiler";case _:return"StrictMode";case N:return"Suspense";case L:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case j:return q(e.type);case R:return q(e._render);case z:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function J(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&J(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function le(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,ve,me=(ve=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ve(e,t)}))}:ve);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var xe=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ee(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function Se(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Pe=null,Oe=null;function Te(e){if(e=no(e)){if("function"!=typeof Ce)throw Error(l(280));var t=e.stateNode;t&&(t=oo(t),Ce(e.stateNode,e.type,t))}}function Ne(e){Pe?Oe?Oe.push(e):Oe=[e]:Pe=e}function Le(){if(Pe){var e=Pe,t=Oe;if(Oe=Pe=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function je(e,t){return e(t)}function ze(e,t,n,r,o){return e(t,n,r,o)}function Re(){}var Me=je,Ie=!1,Ae=!1;function De(){null===Pe&&null===Oe||(Re(),Le())}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var r=oo(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var Ue=!1;if(f)try{var $e={};Object.defineProperty($e,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",$e,$e),window.removeEventListener("test",$e,$e)}catch(ve){Ue=!1}function Ve(e,t,n,r,o,a,l,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Be=!1,We=null,He=!1,Qe=null,qe={onError:function(e){Be=!0,We=e}};function Ke(e,t,n,r,o,a,l,i,u){Be=!1,We=null,Ve.apply(qe,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ge(e){if(Ye(e)!==e)throw Error(l(188))}function Je(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){n=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===n)return Ge(o),e;if(a===r)return Ge(o),t;a=a.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=a;else{for(var i=!1,u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i){for(u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,ot=!1,at=[],lt=null,it=null,ut=null,ct=new Map,st=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function vt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e=pt(t,n,r,o,a),null!==t&&null!==(t=no(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function mt(e){var t=to(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Xe(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=no(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){yt(e)&&n.delete(t)}function bt(){for(ot=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=no(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==lt&&yt(lt)&&(lt=null),null!==it&&yt(it)&&(it=null),null!==ut&&yt(ut)&&(ut=null),ct.forEach(gt),st.forEach(gt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<at.length){wt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==lt&&wt(lt,e),null!==it&&wt(it,e),null!==ut&&wt(ut,e),ct.forEach(t),st.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)mt(n),null===n.blockedOn&&ft.shift()}function xt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Et={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionend:xt("Transition","TransitionEnd")},St={},_t={};function Ct(e){if(St[e])return St[e];if(!Et[e])return e;var t,n=Et[e];for(t in n)if(n.hasOwnProperty(t)&&t in _t)return St[e]=n[t];return e}f&&(_t=document.createElement("div").style,"AnimationEvent"in window||(delete Et.animationend.animation,delete Et.animationiteration.animation,delete Et.animationstart.animation),"TransitionEvent"in window||delete Et.transitionend.transition);var Pt=Ct("animationend"),Ot=Ct("animationiteration"),Tt=Ct("animationstart"),Nt=Ct("transitionend"),Lt=new Map,jt=new Map,zt=["abort","abort",Pt,"animationEnd",Ot,"animationIteration",Tt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Nt,"transitionEnd","waiting","waiting"];function Rt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),jt.set(r,t),Lt.set(r,o),c(o,[r])}}(0,a.unstable_now)();var Mt=8;function It(e){if(0!=(1&e))return Mt=15,1;if(0!=(2&e))return Mt=14,2;if(0!=(4&e))return Mt=13,4;var t=24&e;return 0!==t?(Mt=12,t):0!=(32&e)?(Mt=11,32):0!=(t=192&e)?(Mt=10,t):0!=(256&e)?(Mt=9,256):0!=(t=3584&e)?(Mt=8,t):0!=(4096&e)?(Mt=7,4096):0!=(t=4186112&e)?(Mt=6,t):0!=(t=62914560&e)?(Mt=5,t):67108864&e?(Mt=4,67108864):0!=(134217728&e)?(Mt=3,134217728):0!=(t=805306368&e)?(Mt=2,t):0!=(1073741824&e)?(Mt=1,1073741824):(Mt=8,e)}function At(e,t){var n=e.pendingLanes;if(0===n)return Mt=0;var r=0,o=0,a=e.expiredLanes,l=e.suspendedLanes,i=e.pingedLanes;if(0!==a)r=a,o=Mt=15;else if(0!=(a=134217727&n)){var u=a&~l;0!==u?(r=It(u),o=Mt):0!=(i&=a)&&(r=It(i),o=Mt)}else 0!=(a=n&~l)?(r=It(a),o=Mt):0!==i&&(r=It(i),o=Mt);if(0===r)return 0;if(r=n&((0>(r=31-Bt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&l)){if(It(t),o<=Mt)return t;Mt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-Bt(t)),r|=e[n],t&=~o;return r}function Dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?Ft(10,t):e;case 10:return 0===(e=Ut(192&~t))?Ft(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&0===(e=Ut(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(l(358,e))}function Ut(e){return e&-e}function $t(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Vt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Bt(t)]=n}var Bt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/Ht|0)|0},Wt=Math.log,Ht=Math.LN2,Qt=a.unstable_UserBlockingPriority,qt=a.unstable_runWithPriority,Kt=!0;function Yt(e,t,n,r){Ie||Re();var o=Gt,a=Ie;Ie=!0;try{ze(o,e,t,n,r)}finally{(Ie=a)||De()}}function Xt(e,t,n,r){qt(Qt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){var o;if(Kt)if((o=0==(4&t))&&0<at.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),at.push(e);else{var a=Jt(e,t,n,r);if(null===a)o&&ht(e,r);else{if(o){if(-1<dt.indexOf(e))return e=pt(a,e,t,n,r),void at.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return lt=vt(lt,e,t,n,r,o),!0;case"dragenter":return it=vt(it,e,t,n,r,o),!0;case"mouseover":return ut=vt(ut,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return ct.set(a,vt(ct.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,st.set(a,vt(st.get(a)||null,e,t,n,r,o)),!0}return!1}(a,e,t,n,r))return;ht(e,r)}Rr(e,t,r,null,n)}}}function Jt(e,t,n,r){var o=_e(r);if(null!==(o=to(o))){var a=Ye(o);if(null===a)o=null;else{var l=a.tag;if(13===l){if(null!==(o=Xe(a)))return o;o=null}else if(3===l){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Rr(e,t,r,o,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,o="value"in Zt?Zt.value:Zt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[a-t];t++);return tn=o.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function on(){return!0}function an(){return!1}function ln(e){function t(t,n,r,o,a){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(o):o[l]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?on:an,this.isPropagationStopped=an,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=on)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=on)},persist:function(){},isPersistent:on}),t}var un,cn,sn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=o({},fn,{view:0,detail:0}),hn=ln(pn),vn=o({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Pn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(un=e.screenX-sn.screenX,cn=e.screenY-sn.screenY):cn=un=0,sn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),mn=ln(vn),yn=ln(o({},vn,{dataTransfer:0})),gn=ln(o({},pn,{relatedTarget:0})),bn=ln(o({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=o({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),kn=ln(wn),xn=ln(o({},fn,{data:0})),En={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},_n={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=_n[e])&&!!t[e]}function Pn(){return Cn}var On=o({},pn,{key:function(e){if(e.key){var t=En[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Pn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tn=ln(On),Nn=ln(o({},vn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ln=ln(o({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Pn})),jn=ln(o({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),zn=o({},vn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=ln(zn),Mn=[9,13,27,32],In=f&&"CompositionEvent"in window,An=null;f&&"documentMode"in document&&(An=document.documentMode);var Dn=f&&"TextEvent"in window&&!An,Fn=f&&(!In||An&&8<An&&11>=An),Un=String.fromCharCode(32),$n=!1;function Vn(e,t){switch(e){case"keyup":return-1!==Mn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Wn=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function qn(e,t,n,r){Ne(r),0<(t=Ir(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Kn=null,Yn=null;function Xn(e){Or(e,0)}function Gn(e){if(G(ro(e)))return e}function Jn(e,t){if("change"===e)return t}var Zn=!1;if(f){var er;if(f){var tr="oninput"in document;if(!tr){var nr=document.createElement("div");nr.setAttribute("oninput","return;"),tr="function"==typeof nr.oninput}er=tr}else er=!1;Zn=er&&(!document.documentMode||9<document.documentMode)}function rr(){Kn&&(Kn.detachEvent("onpropertychange",or),Yn=Kn=null)}function or(e){if("value"===e.propertyName&&Gn(Yn)){var t=[];if(qn(t,Yn,e,_e(e)),e=Xn,Ie)e(t);else{Ie=!0;try{je(e,t)}finally{Ie=!1,De()}}}}function ar(e,t,n){"focusin"===e?(rr(),Yn=n,(Kn=t).attachEvent("onpropertychange",or)):"focusout"===e&&rr()}function lr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Gn(Yn)}function ir(e,t){if("click"===e)return Gn(t)}function ur(e,t){if("input"===e||"change"===e)return Gn(t)}var cr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},sr=Object.prototype.hasOwnProperty;function fr(e,t){if(cr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!sr.call(t,n[r])||!cr(e[n[r]],t[n[r]]))return!1;return!0}function dr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pr(e,t){var n,r=dr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dr(r)}}function hr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?hr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function vr(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=J((e=t.contentWindow).document)}return t}function mr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var yr=f&&"documentMode"in document&&11>=document.documentMode,gr=null,br=null,wr=null,kr=!1;function xr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;kr||null==gr||gr!==J(r)||(r="selectionStart"in(r=gr)&&mr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},wr&&fr(wr,r)||(wr=r,0<(r=Ir(br,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}Rt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Rt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Rt(zt,2);for(var Er="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Sr=0;Sr<Er.length;Sr++)jt.set(Er[Sr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var _r="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Cr=new Set("cancel close invalid load scroll toggle".split(" ").concat(_r));function Pr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,a,i,u,c){if(Ke.apply(this,arguments),Be){if(!Be)throw Error(l(198));var s=We;Be=!1,We=null,He||(He=!0,Qe=s)}}(r,t,void 0,e),e.currentTarget=null}function Or(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==a&&o.isPropagationStopped())break e;Pr(o,i,c),a=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,c=i.currentTarget,i=i.listener,u!==a&&o.isPropagationStopped())break e;Pr(o,i,c),a=u}}}if(He)throw e=Qe,He=!1,Qe=null,e}function Tr(e,t){var n=ao(t),r=e+"__bubble";n.has(r)||(zr(t,e,2,!1),n.add(r))}var Nr="_reactListening"+Math.random().toString(36).slice(2);function Lr(e){e[Nr]||(e[Nr]=!0,i.forEach((function(t){Cr.has(t)||jr(t,!1,e,null),jr(t,!0,e,null)})))}function jr(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=n;if("selectionchange"===e&&9!==n.nodeType&&(a=n.ownerDocument),null!==r&&!t&&Cr.has(e)){if("scroll"!==e)return;o|=2,a=r}var l=ao(a),i=e+"__"+(t?"capture":"bubble");l.has(i)||(t&&(o|=4),zr(a,e,o,t),l.add(i))}function zr(e,t,n,r){var o=jt.get(t);switch(void 0===o?2:o){case 0:o=Yt;break;case 1:o=Xt;break;default:o=Gt}n=o.bind(null,t,n,e),o=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Rr(e,t,n,r,o){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===o||8===i.nodeType&&i.parentNode===o)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;l=l.return}for(;null!==i;){if(null===(l=to(i)))return;if(5===(u=l.tag)||6===u){r=a=l;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Ae)return e();Ae=!0;try{Me(e,t,n)}finally{Ae=!1,De()}}((function(){var r=a,o=_e(n),l=[];e:{var i=Lt.get(e);if(void 0!==i){var u=dn,c=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Tn;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Ln;break;case Pt:case Ot:case Tt:u=bn;break;case Nt:u=jn;break;case"scroll":u=hn;break;case"wheel":u=Rn;break;case"copy":case"cut":case"paste":u=kn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Nn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var v=(p=h).stateNode;if(5===p.tag&&null!==v&&(p=v,null!==d&&null!=(v=Fe(h,d))&&s.push(Mr(h,v,p))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,o),l.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!to(c)&&!c[Zr])&&(u||i)&&(i=o.window===o?o:(i=o.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?to(c):null)&&(c!==(f=Ye(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=mn,v="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Nn,v="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:ro(u),p=null==c?i:ro(c),(i=new s(v,h+"leave",u,n,o)).target=f,i.relatedTarget=p,v=null,to(o)===r&&((s=new s(d,h+"enter",c,n,o)).target=p,s.relatedTarget=f,v=s),f=v,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Ar(p))h++;for(p=0,v=d;v;v=Ar(v))p++;for(;0<h-p;)s=Ar(s),h--;for(;0<p-h;)d=Ar(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Ar(s),d=Ar(d)}s=null}else s=null;null!==u&&Dr(l,i,u,s,!1),null!==c&&null!==f&&Dr(l,f,c,s,!0)}if("select"===(u=(i=r?ro(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var m=Jn;else if(Qn(i))if(Zn)m=ur;else{m=lr;var y=ar}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(m=ir);switch(m&&(m=m(e,r))?qn(l,m,n,o):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&oe(i,"number",i.value)),y=r?ro(r):window,e){case"focusin":(Qn(y)||"true"===y.contentEditable)&&(gr=y,br=r,wr=null);break;case"focusout":wr=br=gr=null;break;case"mousedown":kr=!0;break;case"contextmenu":case"mouseup":case"dragend":kr=!1,xr(l,n,o);break;case"selectionchange":if(yr)break;case"keydown":case"keyup":xr(l,n,o)}var g;if(In)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Wn?Vn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Fn&&"ko"!==n.locale&&(Wn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Wn&&(g=nn()):(en="value"in(Zt=o)?Zt.value:Zt.textContent,Wn=!0)),0<(y=Ir(r,b)).length&&(b=new xn(b,e,null,n,o),l.push({event:b,listeners:y}),(g||null!==(g=Bn(n)))&&(b.data=g))),(g=Dn?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:($n=!0,Un);case"textInput":return(e=t.data)===Un&&$n?null:e;default:return null}}(e,n):function(e,t){if(Wn)return"compositionend"===e||!In&&Vn(e,t)?(e=nn(),tn=en=Zt=null,Wn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Ir(r,"onBeforeInput")).length&&(o=new xn("onBeforeInput","beforeinput",null,n,o),l.push({event:o,listeners:r}),o.data=g)}Or(l,t)}))}function Mr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ir(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Fe(e,n))&&r.unshift(Mr(e,a,o)),null!=(a=Fe(e,t))&&r.push(Mr(e,a,o))),e=e.return}return r}function Ar(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Dr(e,t,n,r,o){for(var a=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,o?null!=(u=Fe(n,a))&&l.unshift(Mr(n,u,i)):o||null!=(u=Fe(n,a))&&l.push(Mr(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}function Fr(){}var Ur=null,$r=null;function Vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Br(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Wr="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function Qr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function qr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Kr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Yr=0,Xr=Math.random().toString(36).slice(2),Gr="__reactFiber$"+Xr,Jr="__reactProps$"+Xr,Zr="__reactContainer$"+Xr,eo="__reactEvents$"+Xr;function to(e){var t=e[Gr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Zr]||n[Gr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Kr(e);null!==e;){if(n=e[Gr])return n;e=Kr(e)}return t}n=(e=n).parentNode}return null}function no(e){return!(e=e[Gr]||e[Zr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ro(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function oo(e){return e[Jr]||null}function ao(e){var t=e[eo];return void 0===t&&(t=e[eo]=new Set),t}var lo=[],io=-1;function uo(e){return{current:e}}function co(e){0>io||(e.current=lo[io],lo[io]=null,io--)}function so(e,t){io++,lo[io]=e.current,e.current=t}var fo={},po=uo(fo),ho=uo(!1),vo=fo;function mo(e,t){var n=e.type.contextTypes;if(!n)return fo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function yo(e){return null!=e.childContextTypes}function go(){co(ho),co(po)}function bo(e,t,n){if(po.current!==fo)throw Error(l(168));so(po,t),so(ho,n)}function wo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(l(108,q(t)||"Unknown",a));return o({},n,r)}function ko(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||fo,vo=po.current,so(po,e),so(ho,ho.current),!0}function xo(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=wo(e,t,vo),r.__reactInternalMemoizedMergedChildContext=e,co(ho),co(po),so(po,e)):co(ho),so(ho,n)}var Eo=null,So=null,_o=a.unstable_runWithPriority,Co=a.unstable_scheduleCallback,Po=a.unstable_cancelCallback,Oo=a.unstable_shouldYield,To=a.unstable_requestPaint,No=a.unstable_now,Lo=a.unstable_getCurrentPriorityLevel,jo=a.unstable_ImmediatePriority,zo=a.unstable_UserBlockingPriority,Ro=a.unstable_NormalPriority,Mo=a.unstable_LowPriority,Io=a.unstable_IdlePriority,Ao={},Do=void 0!==To?To:function(){},Fo=null,Uo=null,$o=!1,Vo=No(),Bo=1e4>Vo?No:function(){return No()-Vo};function Wo(){switch(Lo()){case jo:return 99;case zo:return 98;case Ro:return 97;case Mo:return 96;case Io:return 95;default:throw Error(l(332))}}function Ho(e){switch(e){case 99:return jo;case 98:return zo;case 97:return Ro;case 96:return Mo;case 95:return Io;default:throw Error(l(332))}}function Qo(e,t){return e=Ho(e),_o(e,t)}function qo(e,t,n){return e=Ho(e),Co(e,t,n)}function Ko(){if(null!==Uo){var e=Uo;Uo=null,Po(e)}Yo()}function Yo(){if(!$o&&null!==Fo){$o=!0;var e=0;try{var t=Fo;Qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fo=null}catch(t){throw null!==Fo&&(Fo=Fo.slice(e+1)),Co(jo,Ko),t}finally{$o=!1}}}var Xo=k.ReactCurrentBatchConfig;function Go(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Jo=uo(null),Zo=null,ea=null,ta=null;function na(){ta=ea=Zo=null}function ra(e){var t=Jo.current;co(Jo),e.type._context._currentValue=t}function oa(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function aa(e,t){Zo=e,ta=ea=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Il=!0),e.firstContext=null)}function la(e,t){if(ta!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ta=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ea){if(null===Zo)throw Error(l(308));ea=t,Zo.dependencies={lanes:0,firstContext:t,responders:null}}else ea=ea.next=t;return e._currentValue}var ia=!1;function ua(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ca(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function sa(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function fa(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function da(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=l:a=a.next=l,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function pa(e,t,n,r){var a=e.updateQueue;ia=!1;var l=a.firstBaseUpdate,i=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?l=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==l){for(d=a.baseState,i=0,f=s=c=null;;){u=l.lane;var p=l.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,v=l;switch(u=t,p=n,v.tag){case 1:if("function"==typeof(h=v.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=v.payload)?h.call(p,d,u):h))break e;d=o({},d,u);break e;case 2:ia=!0}}null!==l.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[l]:u.push(l))}else p={eventTime:p,lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(l=l.next)){if(null===(u=a.shared.pending))break;l=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=f,Di|=i,e.lanes=i,e.memoizedState=d}}function ha(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(l(191,o));o.call(r)}}}var va=(new r.Component).refs;function ma(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ya={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=cu(),o=su(e),a=sa(r,o);a.payload=t,null!=n&&(a.callback=n),fa(e,a),fu(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=cu(),o=su(e),a=sa(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),fa(e,a),fu(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=cu(),r=su(e),o=sa(n,r);o.tag=2,null!=t&&(o.callback=t),fa(e,o),fu(e,r,n)}};function ga(e,t,n,r,o,a,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,l):!(t.prototype&&t.prototype.isPureReactComponent&&fr(n,r)&&fr(o,a))}function ba(e,t,n){var r=!1,o=fo,a=t.contextType;return"object"==typeof a&&null!==a?a=la(a):(o=yo(t)?vo:po.current,a=(r=null!=(r=t.contextTypes))?mo(e,o):fo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ya,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function wa(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ya.enqueueReplaceState(t,t.state,null)}function ka(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=va,ua(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=la(a):(a=yo(t)?vo:po.current,o.context=mo(e,a)),pa(e,n,o,r),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(ma(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ya.enqueueReplaceState(o,o.state,null),pa(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var xa=Array.isArray;function Ea(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===va&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Sa(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function _a(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Bu(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=qu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ea(e,t,n),r.return=e,r):((r=Wu(n.type,n.key,n.props,null,e.mode,r)).ref=Ea(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ku(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=qu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case x:return(n=Wu(t.type,t.key,t.props,null,e.mode,n)).ref=Ea(e,null,t),n.return=e,n;case E:return(t=Ku(t,e.mode,n)).return=e,t}if(xa(t)||V(t))return(t=Hu(t,e.mode,n,null)).return=e,t;Sa(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case x:return n.key===o?n.type===S?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case E:return n.key===o?s(e,t,n,r):null}if(xa(n)||V(n))return null!==o?null:f(e,t,n,r,null);Sa(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case x:return e=e.get(null===r.key?n:r.key)||null,r.type===S?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case E:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(xa(r)||V(r))return f(t,e=e.get(n)||null,r,o,null);Sa(t,r)}return null}function v(o,l,i,u){for(var c=null,s=null,f=l,v=l=0,m=null;null!==f&&v<i.length;v++){f.index>v?(m=f,f=null):m=f.sibling;var y=p(o,f,i[v],u);if(null===y){null===f&&(f=m);break}e&&f&&null===y.alternate&&t(o,f),l=a(y,l,v),null===s?c=y:s.sibling=y,s=y,f=m}if(v===i.length)return n(o,f),c;if(null===f){for(;v<i.length;v++)null!==(f=d(o,i[v],u))&&(l=a(f,l,v),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);v<i.length;v++)null!==(m=h(f,o,v,i[v],u))&&(e&&null!==m.alternate&&f.delete(null===m.key?v:m.key),l=a(m,l,v),null===s?c=m:s.sibling=m,s=m);return e&&f.forEach((function(e){return t(o,e)})),c}function m(o,i,u,c){var s=V(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,v=i,m=i=0,y=null,g=u.next();null!==v&&!g.done;m++,g=u.next()){v.index>m?(y=v,v=null):y=v.sibling;var b=p(o,v,g.value,c);if(null===b){null===v&&(v=y);break}e&&v&&null===b.alternate&&t(o,v),i=a(b,i,m),null===f?s=b:f.sibling=b,f=b,v=y}if(g.done)return n(o,v),s;if(null===v){for(;!g.done;m++,g=u.next())null!==(g=d(o,g.value,c))&&(i=a(g,i,m),null===f?s=g:f.sibling=g,f=g);return s}for(v=r(o,v);!g.done;m++,g=u.next())null!==(g=h(v,o,m,g.value,c))&&(e&&null!==g.alternate&&v.delete(null===g.key?m:g.key),i=a(g,i,m),null===f?s=g:f.sibling=g,f=g);return e&&v.forEach((function(e){return t(o,e)})),s}return function(e,r,a,u){var c="object"==typeof a&&null!==a&&a.type===S&&null===a.key;c&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case x:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){if(7===c.tag){if(a.type===S){n(e,c.sibling),(r=o(c,a.props.children)).return=e,e=r;break e}}else if(c.elementType===a.type){n(e,c.sibling),(r=o(c,a.props)).ref=Ea(e,c,a),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}a.type===S?((r=Hu(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=Wu(a.type,a.key,a.props,null,e.mode,u)).ref=Ea(e,r,a),u.return=e,e=u)}return i(e);case E:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Ku(a,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=qu(a,e.mode,u)).return=e,e=r),i(e);if(xa(a))return v(e,r,a,u);if(V(a))return m(e,r,a,u);if(s&&Sa(e,a),void 0===a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(l(152,q(e.type)||"Component"))}return n(e,r)}}var Ca=_a(!0),Pa=_a(!1),Oa={},Ta=uo(Oa),Na=uo(Oa),La=uo(Oa);function ja(e){if(e===Oa)throw Error(l(174));return e}function za(e,t){switch(so(La,t),so(Na,e),so(Ta,Oa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}co(Ta),so(Ta,t)}function Ra(){co(Ta),co(Na),co(La)}function Ma(e){ja(La.current);var t=ja(Ta.current),n=pe(t,e.type);t!==n&&(so(Na,e),so(Ta,n))}function Ia(e){Na.current===e&&(co(Ta),co(Na))}var Aa=uo(0);function Da(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Fa=null,Ua=null,$a=!1;function Va(e,t){var n=$u(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ba(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Wa(e){if($a){var t=Ua;if(t){var n=t;if(!Ba(e,t)){if(!(t=qr(n.nextSibling))||!Ba(e,t))return e.flags=-1025&e.flags|2,$a=!1,void(Fa=e);Va(Fa,n)}Fa=e,Ua=qr(t.firstChild)}else e.flags=-1025&e.flags|2,$a=!1,Fa=e}}function Ha(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Fa=e}function Qa(e){if(e!==Fa)return!1;if(!$a)return Ha(e),$a=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Br(t,e.memoizedProps))for(t=Ua;t;)Va(e,t),t=qr(t.nextSibling);if(Ha(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ua=qr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ua=null}}else Ua=Fa?qr(e.stateNode.nextSibling):null;return!0}function qa(){Ua=Fa=null,$a=!1}var Ka=[];function Ya(){for(var e=0;e<Ka.length;e++)Ka[e]._workInProgressVersionPrimary=null;Ka.length=0}var Xa=k.ReactCurrentDispatcher,Ga=k.ReactCurrentBatchConfig,Ja=0,Za=null,el=null,tl=null,nl=!1,rl=!1;function ol(){throw Error(l(321))}function al(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!cr(e[n],t[n]))return!1;return!0}function ll(e,t,n,r,o,a){if(Ja=a,Za=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Xa.current=null===e||null===e.memoizedState?jl:zl,e=n(r,o),rl){a=0;do{if(rl=!1,!(25>a))throw Error(l(301));a+=1,tl=el=null,t.updateQueue=null,Xa.current=Rl,e=n(r,o)}while(rl)}if(Xa.current=Ll,t=null!==el&&null!==el.next,Ja=0,tl=el=Za=null,nl=!1,t)throw Error(l(300));return e}function il(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===tl?Za.memoizedState=tl=e:tl=tl.next=e,tl}function ul(){if(null===el){var e=Za.alternate;e=null!==e?e.memoizedState:null}else e=el.next;var t=null===tl?Za.memoizedState:tl.next;if(null!==t)tl=t,el=e;else{if(null===e)throw Error(l(310));e={memoizedState:(el=e).memoizedState,baseState:el.baseState,baseQueue:el.baseQueue,queue:el.queue,next:null},null===tl?Za.memoizedState=tl=e:tl=tl.next=e}return tl}function cl(e,t){return"function"==typeof t?t(e):t}function sl(e){var t=ul(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=el,o=r.baseQueue,a=n.pending;if(null!==a){if(null!==o){var i=o.next;o.next=a.next,a.next=i}r.baseQueue=o=a,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=i=a=null,c=o;do{var s=c.lane;if((Ja&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,a=r):u=u.next=f,Za.lanes|=s,Di|=s}c=c.next}while(null!==c&&c!==o);null===u?a=r:u.next=i,cr(r,t.memoizedState)||(Il=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function fl(e){var t=ul(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,a=t.memoizedState;if(null!==o){n.pending=null;var i=o=o.next;do{a=e(a,i.action),i=i.next}while(i!==o);cr(a,t.memoizedState)||(Il=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function dl(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Ja&e)===e)&&(t._workInProgressVersionPrimary=r,Ka.push(t))),e)return n(t._source);throw Ka.push(t),Error(l(350))}function pl(e,t,n,r){var o=Ni;if(null===o)throw Error(l(349));var a=t._getVersion,i=a(t._source),u=Xa.current,c=u.useState((function(){return dl(o,t,n)})),s=c[1],f=c[0];c=tl;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,v=d.source;d=d.subscribe;var m=Za;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=a(t._source);if(!cr(i,e)){e=n(t._source),cr(f,e)||(s(e),e=su(m),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,l=e;0<l;){var u=31-Bt(l),c=1<<u;r[u]|=e,l&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=su(m);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),cr(h,n)&&cr(v,t)&&cr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:cl,lastRenderedState:f}).dispatch=s=Nl.bind(null,Za,e),c.queue=e,c.baseQueue=null,f=dl(o,t,n),c.memoizedState=c.baseState=f),f}function hl(e,t,n){return pl(ul(),e,t,n)}function vl(e){var t=il();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:cl,lastRenderedState:e}).dispatch=Nl.bind(null,Za,e),[t.memoizedState,e]}function ml(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Za.updateQueue)?(t={lastEffect:null},Za.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function yl(e){return e={current:e},il().memoizedState=e}function gl(){return ul().memoizedState}function bl(e,t,n,r){var o=il();Za.flags|=e,o.memoizedState=ml(1|t,n,void 0,void 0===r?null:r)}function wl(e,t,n,r){var o=ul();r=void 0===r?null:r;var a=void 0;if(null!==el){var l=el.memoizedState;if(a=l.destroy,null!==r&&al(r,l.deps))return void ml(t,n,a,r)}Za.flags|=e,o.memoizedState=ml(1|t,n,a,r)}function kl(e,t){return bl(516,4,e,t)}function xl(e,t){return wl(516,4,e,t)}function El(e,t){return wl(4,2,e,t)}function Sl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function _l(e,t,n){return n=null!=n?n.concat([e]):null,wl(4,2,Sl.bind(null,t,e),n)}function Cl(){}function Pl(e,t){var n=ul();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&al(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ol(e,t){var n=ul();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&al(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Tl(e,t){var n=Wo();Qo(98>n?98:n,(function(){e(!0)})),Qo(97<n?97:n,(function(){var n=Ga.transition;Ga.transition=1;try{e(!1),t()}finally{Ga.transition=n}}))}function Nl(e,t,n){var r=cu(),o=su(e),a={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},l=t.pending;if(null===l?a.next=a:(a.next=l.next,l.next=a),t.pending=a,l=e.alternate,e===Za||null!==l&&l===Za)rl=nl=!0;else{if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=l(i,n);if(a.eagerReducer=l,a.eagerState=u,cr(u,i))return}catch(e){}fu(e,o,r)}}var Ll={readContext:la,useCallback:ol,useContext:ol,useEffect:ol,useImperativeHandle:ol,useLayoutEffect:ol,useMemo:ol,useReducer:ol,useRef:ol,useState:ol,useDebugValue:ol,useDeferredValue:ol,useTransition:ol,useMutableSource:ol,useOpaqueIdentifier:ol,unstable_isNewReconciler:!1},jl={readContext:la,useCallback:function(e,t){return il().memoizedState=[e,void 0===t?null:t],e},useContext:la,useEffect:kl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,bl(4,2,Sl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return bl(4,2,e,t)},useMemo:function(e,t){var n=il();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=il();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Nl.bind(null,Za,e),[r.memoizedState,e]},useRef:yl,useState:vl,useDebugValue:Cl,useDeferredValue:function(e){var t=vl(e),n=t[0],r=t[1];return kl((function(){var t=Ga.transition;Ga.transition=1;try{r(e)}finally{Ga.transition=t}}),[e]),n},useTransition:function(){var e=vl(!1),t=e[0];return yl(e=Tl.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=il();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},pl(r,e,t,n)},useOpaqueIdentifier:function(){if($a){var e=!1,t=function(e){return{$$typeof:M,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Yr++).toString(36))),Error(l(355))})),n=vl(t)[1];return 0==(2&Za.mode)&&(Za.flags|=516,ml(5,(function(){n("r:"+(Yr++).toString(36))}),void 0,null)),t}return vl(t="r:"+(Yr++).toString(36)),t},unstable_isNewReconciler:!1},zl={readContext:la,useCallback:Pl,useContext:la,useEffect:xl,useImperativeHandle:_l,useLayoutEffect:El,useMemo:Ol,useReducer:sl,useRef:gl,useState:function(){return sl(cl)},useDebugValue:Cl,useDeferredValue:function(e){var t=sl(cl),n=t[0],r=t[1];return xl((function(){var t=Ga.transition;Ga.transition=1;try{r(e)}finally{Ga.transition=t}}),[e]),n},useTransition:function(){var e=sl(cl)[0];return[gl().current,e]},useMutableSource:hl,useOpaqueIdentifier:function(){return sl(cl)[0]},unstable_isNewReconciler:!1},Rl={readContext:la,useCallback:Pl,useContext:la,useEffect:xl,useImperativeHandle:_l,useLayoutEffect:El,useMemo:Ol,useReducer:fl,useRef:gl,useState:function(){return fl(cl)},useDebugValue:Cl,useDeferredValue:function(e){var t=fl(cl),n=t[0],r=t[1];return xl((function(){var t=Ga.transition;Ga.transition=1;try{r(e)}finally{Ga.transition=t}}),[e]),n},useTransition:function(){var e=fl(cl)[0];return[gl().current,e]},useMutableSource:hl,useOpaqueIdentifier:function(){return fl(cl)[0]},unstable_isNewReconciler:!1},Ml=k.ReactCurrentOwner,Il=!1;function Al(e,t,n,r){t.child=null===e?Pa(t,null,n,r):Ca(t,e.child,n,r)}function Dl(e,t,n,r,o){n=n.render;var a=t.ref;return aa(t,o),r=ll(e,t,n,r,a,o),null===e||Il?(t.flags|=1,Al(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,ni(e,t,o))}function Fl(e,t,n,r,o,a){if(null===e){var l=n.type;return"function"!=typeof l||Vu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Wu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Ul(e,t,l,r,o,a))}return l=e.child,0==(o&a)&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:fr)(o,r)&&e.ref===t.ref)?ni(e,t,a):(t.flags|=1,(e=Bu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Ul(e,t,n,r,o,a){if(null!==e&&fr(e.memoizedProps,r)&&e.ref===t.ref){if(Il=!1,0==(a&o))return t.lanes=e.lanes,ni(e,t,a);0!=(16384&e.flags)&&(Il=!0)}return Bl(e,t,n,r,a)}function $l(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},bu(0,n);else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bu(0,e),null;t.memoizedState={baseLanes:0},bu(0,null!==a?a.baseLanes:n)}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,bu(0,r);return Al(e,t,o,n),t.child}function Vl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Bl(e,t,n,r,o){var a=yo(n)?vo:po.current;return a=mo(t,a),aa(t,o),n=ll(e,t,n,r,a,o),null===e||Il?(t.flags|=1,Al(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,ni(e,t,o))}function Wl(e,t,n,r,o){if(yo(n)){var a=!0;ko(t)}else a=!1;if(aa(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ba(t,n,r),ka(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?la(c):mo(t,c=yo(n)?vo:po.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==c)&&wa(t,l,r,c),ia=!1;var d=t.memoizedState;l.state=d,pa(t,r,l,o),u=t.memoizedState,i!==r||d!==u||ho.current||ia?("function"==typeof s&&(ma(t,n,s,r),u=t.memoizedState),(i=ia||ga(t,n,i,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4)):("function"==typeof l.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4),r=!1)}else{l=t.stateNode,ca(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:Go(t.type,i),l.props=c,f=t.pendingProps,d=l.context,u="object"==typeof(u=n.contextType)&&null!==u?la(u):mo(t,u=yo(n)?vo:po.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&wa(t,l,r,u),ia=!1,d=t.memoizedState,l.state=d,pa(t,r,l,o);var h=t.memoizedState;i!==f||d!==h||ho.current||ia?("function"==typeof p&&(ma(t,n,p,r),h=t.memoizedState),(c=ia||ga(t,n,c,r,d,h,u))?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Hl(e,t,n,r,a,o)}function Hl(e,t,n,r,o,a){Vl(e,t);var l=0!=(64&t.flags);if(!r&&!l)return o&&xo(t,n,!1),ni(e,t,a);r=t.stateNode,Ml.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=Ca(t,e.child,null,a),t.child=Ca(t,null,i,a)):Al(e,t,i,a),t.memoizedState=r.state,o&&xo(t,n,!0),t.child}function Ql(e){var t=e.stateNode;t.pendingContext?bo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&bo(0,t.context,!1),za(e,t.containerInfo)}var ql,Kl,Yl,Xl={dehydrated:null,retryLane:0};function Gl(e,t,n){var r,o=t.pendingProps,a=Aa.current,l=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(l=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),so(Aa,1&a),null===e?(void 0!==o.fallback&&Wa(t),e=o.children,a=o.fallback,l?(e=Jl(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Xl,e):"number"==typeof o.unstable_expectedLoadTime?(e=Jl(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Xl,t.lanes=33554432,e):((n=Qu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,l?(o=function(e,t,n,r,o){var a=t.mode,l=e.child;e=l.sibling;var i={mode:"hidden",children:n};return 0==(2&a)&&t.child!==l?((n=t.child).childLanes=0,n.pendingProps=i,null!==(l=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=l,l.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Bu(l,i),null!==e?r=Bu(e,r):(r=Hu(r,a,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),l=t.child,a=e.child.memoizedState,l.memoizedState=null===a?{baseLanes:n}:{baseLanes:a.baseLanes|n},l.childLanes=e.childLanes&~n,t.memoizedState=Xl,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=Bu(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function Jl(e,t,n,r){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=Qu(t,o,0,null),n=Hu(n,o,r,null),a.return=e,n.return=e,a.sibling=n,e.child=a,n}function Zl(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),oa(e.return,t)}function ei(e,t,n,r,o,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=o,l.lastEffect=a)}function ti(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Al(e,t,r.children,n),0!=(2&(r=Aa.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zl(e,n);else if(19===e.tag)Zl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(so(Aa,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Da(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),ei(t,!1,o,n,a,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Da(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}ei(t,!0,n,null,a,t.lastEffect);break;case"together":ei(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function ni(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Di|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Bu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Bu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ri(e,t){if(!$a)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function oi(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return yo(t.type)&&go(),null;case 3:return Ra(),co(ho),co(po),Ya(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Qa(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Ia(t);var a=ja(La.current);if(n=t.type,null!==e&&null!=t.stateNode)Kl(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=ja(Ta.current),Qa(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Gr]=t,r[Jr]=i,n){case"dialog":Tr("cancel",r),Tr("close",r);break;case"iframe":case"object":case"embed":Tr("load",r);break;case"video":case"audio":for(e=0;e<_r.length;e++)Tr(_r[e],r);break;case"source":Tr("error",r);break;case"img":case"image":case"link":Tr("error",r),Tr("load",r);break;case"details":Tr("toggle",r);break;case"input":ee(r,i),Tr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Tr("invalid",r);break;case"textarea":ue(r,i),Tr("invalid",r)}for(var c in Ee(n,i),e=null,i)i.hasOwnProperty(c)&&(a=i[c],"children"===c?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&Tr("scroll",r));switch(n){case"input":X(r),re(r,i,!0);break;case"textarea":X(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Fr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Gr]=t,e[Jr]=r,ql(e,t),t.stateNode=e,c=Se(n,r),n){case"dialog":Tr("cancel",e),Tr("close",e),a=r;break;case"iframe":case"object":case"embed":Tr("load",e),a=r;break;case"video":case"audio":for(a=0;a<_r.length;a++)Tr(_r[a],e);a=r;break;case"source":Tr("error",e),a=r;break;case"img":case"image":case"link":Tr("error",e),Tr("load",e),a=r;break;case"details":Tr("toggle",e),a=r;break;case"input":ee(e,r),a=Z(e,r),Tr("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=o({},r,{value:void 0}),Tr("invalid",e);break;case"textarea":ue(e,r),a=ie(e,r),Tr("invalid",e);break;default:a=r}Ee(n,a);var s=a;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&me(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Tr("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":X(e),re(e,r,!1);break;case"textarea":X(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?le(e,!!r.multiple,i,!1):null!=r.defaultValue&&le(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Fr)}Vr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Yl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=ja(La.current),ja(Ta.current),Qa(t)?(r=t.stateNode,n=t.memoizedProps,r[Gr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Gr]=t,t.stateNode=r)}return null;case 13:return co(Aa),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Qa(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Aa.current)?0===Mi&&(Mi=3):(0!==Mi&&3!==Mi||(Mi=4),null===Ni||0==(134217727&Di)&&0==(134217727&Fi)||vu(Ni,ji))),(r||n)&&(t.flags|=4),null);case 4:return Ra(),null===e&&Lr(t.stateNode.containerInfo),null;case 10:return ra(t),null;case 19:if(co(Aa),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)ri(r,!1);else{if(0!==Mi||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Da(e))){for(t.flags|=64,ri(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return so(Aa,1&Aa.current|2),t.child}e=e.sibling}null!==r.tail&&Bo()>Bi&&(t.flags|=64,i=!0,ri(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=Da(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ri(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!$a)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Bo()-r.renderingStartTime>Bi&&1073741824!==n&&(t.flags|=64,i=!0,ri(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Bo(),n.sibling=null,t=Aa.current,so(Aa,i?1&t|2:1&t),n):null;case 23:case 24:return wu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(l(156,t.tag))}function ai(e){switch(e.tag){case 1:yo(e.type)&&go();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ra(),co(ho),co(po),Ya(),0!=(64&(t=e.flags)))throw Error(l(285));return e.flags=-4097&t|64,e;case 5:return Ia(e),null;case 13:return co(Aa),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return co(Aa),null;case 4:return Ra(),null;case 10:return ra(e),null;case 23:case 24:return wu(),null;default:return null}}function li(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function ii(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}ql=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Kl=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,ja(Ta.current);var l,i=null;switch(n){case"input":a=Z(e,a),r=Z(e,r),i=[];break;case"option":a=ae(e,a),r=ae(e,r),i=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),i=[];break;case"textarea":a=ie(e,a),r=ie(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Fr)}for(f in Ee(n,r),n=null,a)if(!r.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(l in c)c.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=a?a[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Tr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===M?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Yl=function(e,t,n,r){n!==r&&(t.flags|=4)};var ui="function"==typeof WeakMap?WeakMap:Map;function ci(e,t,n){(n=sa(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){qi||(qi=!0,Ki=r),ii(0,t)},n}function si(e,t,n){(n=sa(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ii(0,t),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Yi?Yi=new Set([this]):Yi.add(this),ii(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var fi="function"==typeof WeakSet?WeakSet:Set;function di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Au(e,t)}else t.current=null}function pi(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Go(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Qr(t.stateNode.containerInfo))}throw Error(l(163))}function hi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(Ru(n,e),zu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Go(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&ha(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}ha(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Vr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))))}throw Error(l(163))}function vi(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function mi(e,t){if(So&&"function"==typeof So.onCommitFiberUnmount)try{So.onCommitFiberUnmount(Eo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))Ru(t,n);else{r=t;try{o()}catch(e){Au(r,e)}}n=n.next}while(n!==e)}break;case 1:if(di(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Au(t,e)}break;case 5:di(t);break;case 4:xi(e,t)}}function yi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function gi(e){return 5===e.tag||3===e.tag||4===e.tag}function bi(e){e:{for(var t=e.return;null!==t;){if(gi(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||gi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?wi(e,n,t):ki(e,n,t)}function wi(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Fr));else if(4!==r&&null!==(e=e.child))for(wi(e,t,n),e=e.sibling;null!==e;)wi(e,t,n),e=e.sibling}function ki(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ki(e,t,n),e=e.sibling;null!==e;)ki(e,t,n),e=e.sibling}function xi(e,t){for(var n,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(l(160));switch(n=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var i=e,u=o,c=u;;)if(mi(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=o.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(mi(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function Ei(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[Jr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Se(e,o),t=Se(e,r),o=0;o<a.length;o+=2){var i=a[o],u=a[o+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?me(n,u):"children"===i?ye(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?le(n,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?le(n,!!r.multiple,r.defaultValue,!0):le(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 13:return null!==t.memoizedState&&(Vi=Bo(),vi(t.child,!0)),void Si(t);case 19:return void Si(t);case 23:case 24:return void vi(t,null!==t.memoizedState)}throw Error(l(163))}function Si(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new fi),t.forEach((function(t){var r=Fu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function _i(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Ci=Math.ceil,Pi=k.ReactCurrentDispatcher,Oi=k.ReactCurrentOwner,Ti=0,Ni=null,Li=null,ji=0,zi=0,Ri=uo(0),Mi=0,Ii=null,Ai=0,Di=0,Fi=0,Ui=0,$i=null,Vi=0,Bi=1/0;function Wi(){Bi=Bo()+500}var Hi,Qi=null,qi=!1,Ki=null,Yi=null,Xi=!1,Gi=null,Ji=90,Zi=[],eu=[],tu=null,nu=0,ru=null,ou=-1,au=0,lu=0,iu=null,uu=!1;function cu(){return 0!=(48&Ti)?Bo():-1!==ou?ou:ou=Bo()}function su(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Wo()?1:2;if(0===au&&(au=Ai),0!==Xo.transition){0!==lu&&(lu=null!==$i?$i.pendingLanes:0),e=au;var t=4186112&~lu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Wo(),e=Ft(0!=(4&Ti)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),au)}function fu(e,t,n){if(50<nu)throw nu=0,ru=null,Error(l(185));if(null===(e=du(e,t)))return null;Vt(e,t,n),e===Ni&&(Fi|=t,4===Mi&&vu(e,ji));var r=Wo();1===t?0!=(8&Ti)&&0==(48&Ti)?mu(e):(pu(e,n),0===Ti&&(Wi(),Ko())):(0==(4&Ti)||98!==r&&99!==r||(null===tu?tu=new Set([e]):tu.add(e)),pu(e,n)),$i=e}function du(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function pu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Bt(i),c=1<<u,s=a[u];if(-1===s){if(0==(c&r)||0!=(c&o)){s=t,It(c);var f=Mt;a[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=At(e,e===Ni?ji:0),t=Mt,0===r)null!==n&&(n!==Ao&&Po(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ao&&Po(n)}15===t?(n=mu.bind(null,e),null===Fo?(Fo=[n],Uo=Co(jo,Yo)):Fo.push(n),n=Ao):14===t?n=qo(99,mu.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(l(358,e))}}(t),n=qo(n,hu.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function hu(e){if(ou=-1,lu=au=0,0!=(48&Ti))throw Error(l(327));var t=e.callbackNode;if(ju()&&e.callbackNode!==t)return null;var n=At(e,e===Ni?ji:0);if(0===n)return null;var r=n,o=Ti;Ti|=16;var a=Eu();for(Ni===e&&ji===r||(Wi(),ku(e,r));;)try{Cu();break}catch(t){xu(e,t)}if(na(),Pi.current=a,Ti=o,null!==Li?r=0:(Ni=null,ji=0,r=Mi),0!=(Ai&Fi))ku(e,0);else if(0!==r){if(2===r&&(Ti|=64,e.hydrate&&(e.hydrate=!1,Qr(e.containerInfo)),0!==(n=Dt(e))&&(r=Su(e,n))),1===r)throw t=Ii,ku(e,0),vu(e,n),pu(e,Bo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(l(345));case 2:case 5:Tu(e);break;case 3:if(vu(e,n),(62914560&n)===n&&10<(r=Vi+500-Bo())){if(0!==At(e,0))break;if(((o=e.suspendedLanes)&n)!==n){cu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Wr(Tu.bind(null,e),r);break}Tu(e);break;case 4:if(vu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var i=31-Bt(n);a=1<<i,(i=r[i])>o&&(o=i),n&=~a}if(n=o,10<(n=(120>(n=Bo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Ci(n/1960))-n)){e.timeoutHandle=Wr(Tu.bind(null,e),n);break}Tu(e);break;default:throw Error(l(329))}}return pu(e,Bo()),e.callbackNode===t?hu.bind(null,e):null}function vu(e,t){for(t&=~Ui,t&=~Fi,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Bt(t),r=1<<n;e[n]=-1,t&=~r}}function mu(e){if(0!=(48&Ti))throw Error(l(327));if(ju(),e===Ni&&0!=(e.expiredLanes&ji)){var t=ji,n=Su(e,t);0!=(Ai&Fi)&&(n=Su(e,t=At(e,t)))}else n=Su(e,t=At(e,0));if(0!==e.tag&&2===n&&(Ti|=64,e.hydrate&&(e.hydrate=!1,Qr(e.containerInfo)),0!==(t=Dt(e))&&(n=Su(e,t))),1===n)throw n=Ii,ku(e,0),vu(e,t),pu(e,Bo()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Tu(e),pu(e,Bo()),null}function yu(e,t){var n=Ti;Ti|=1;try{return e(t)}finally{0===(Ti=n)&&(Wi(),Ko())}}function gu(e,t){var n=Ti;Ti&=-2,Ti|=8;try{return e(t)}finally{0===(Ti=n)&&(Wi(),Ko())}}function bu(e,t){so(Ri,zi),zi|=t,Ai|=t}function wu(){zi=Ri.current,co(Ri)}function ku(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Hr(n)),null!==Li)for(n=Li.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&go();break;case 3:Ra(),co(ho),co(po),Ya();break;case 5:Ia(r);break;case 4:Ra();break;case 13:case 19:co(Aa);break;case 10:ra(r);break;case 23:case 24:wu()}n=n.return}Ni=e,Li=Bu(e.current,null),ji=zi=Ai=t,Mi=0,Ii=null,Ui=Fi=Di=0}function xu(e,t){for(;;){var n=Li;try{if(na(),Xa.current=Ll,nl){for(var r=Za.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}nl=!1}if(Ja=0,tl=el=Za=null,rl=!1,Oi.current=null,null===n||null===n.return){Mi=1,Ii=t,Li=null;break}e:{var a=e,l=n.return,i=n,u=t;if(t=ji,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Aa.current),d=l;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var v=d.memoizedProps;p=void 0!==v.fallback&&(!0!==v.unstable_avoidThisFallback||!f)}}if(p){var m=d.updateQueue;if(null===m){var y=new Set;y.add(c),d.updateQueue=y}else m.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=sa(-1,1);g.tag=2,fa(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new ui,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=Du.bind(null,a,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Mi&&(Mi=2),u=li(u,i),d=l;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,da(d,ci(0,a,t));break e;case 1:a=u;var k=d.type,x=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Yi||!Yi.has(x)))){d.flags|=4096,t&=-t,d.lanes|=t,da(d,si(d,a,t));break e}}d=d.return}while(null!==d)}Ou(n)}catch(e){t=e,Li===n&&null!==n&&(Li=n=n.return);continue}break}}function Eu(){var e=Pi.current;return Pi.current=Ll,null===e?Ll:e}function Su(e,t){var n=Ti;Ti|=16;var r=Eu();for(Ni===e&&ji===t||ku(e,t);;)try{_u();break}catch(t){xu(e,t)}if(na(),Ti=n,Pi.current=r,null!==Li)throw Error(l(261));return Ni=null,ji=0,Mi}function _u(){for(;null!==Li;)Pu(Li)}function Cu(){for(;null!==Li&&!Oo();)Pu(Li)}function Pu(e){var t=Hi(e.alternate,e,zi);e.memoizedProps=e.pendingProps,null===t?Ou(e):Li=t,Oi.current=null}function Ou(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=oi(n,t,zi)))return void(Li=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&zi)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ai(t)))return n.flags&=2047,void(Li=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Li=t);Li=t=e}while(null!==t);0===Mi&&(Mi=5)}function Tu(e){var t=Wo();return Qo(99,Nu.bind(null,e,t)),null}function Nu(e,t){do{ju()}while(null!==Gi);if(0!=(48&Ti))throw Error(l(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<a;){var c=31-Bt(a),s=1<<c;o[c]=0,i[c]=-1,u[c]=-1,a&=~s}if(null!==tu&&0==(24&r)&&tu.has(e)&&tu.delete(e),e===Ni&&(Li=Ni=null,ji=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=Ti,Ti|=32,Oi.current=null,Ur=Kt,mr(i=vr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,a=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,v=0,m=i,y=null;t:for(;;){for(var g;m!==u||0!==a&&3!==m.nodeType||(d=f+a),m!==c||0!==s&&3!==m.nodeType||(p=f+s),3===m.nodeType&&(f+=m.nodeValue.length),null!==(g=m.firstChild);)y=m,m=g;for(;;){if(m===i)break t;if(y===u&&++h===a&&(d=f),y===c&&++v===s&&(p=f),null!==(g=m.nextSibling))break;y=(m=y).parentNode}m=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;$r={focusedElem:i,selectionRange:u},Kt=!1,iu=null,uu=!1,Qi=r;do{try{Lu()}catch(e){if(null===Qi)throw Error(l(330));Au(Qi,e),Qi=Qi.nextEffect}}while(null!==Qi);iu=null,Qi=r;do{try{for(i=e;null!==Qi;){var b=Qi.flags;if(16&b&&ye(Qi.stateNode,""),128&b){var w=Qi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:bi(Qi),Qi.flags&=-3;break;case 6:bi(Qi),Qi.flags&=-3,Ei(Qi.alternate,Qi);break;case 1024:Qi.flags&=-1025;break;case 1028:Qi.flags&=-1025,Ei(Qi.alternate,Qi);break;case 4:Ei(Qi.alternate,Qi);break;case 8:xi(i,u=Qi);var x=u.alternate;yi(u),null!==x&&yi(x)}Qi=Qi.nextEffect}}catch(e){if(null===Qi)throw Error(l(330));Au(Qi,e),Qi=Qi.nextEffect}}while(null!==Qi);if(k=$r,w=vr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&hr(b.ownerDocument.documentElement,b)){null!==i&&mr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,x=Math.min(i.start,u),i=void 0===i.end?x:Math.min(i.end,u),!k.extend&&x>i&&(u=i,i=x,x=u),u=pr(b,x),a=pr(b,i),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),x>i?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!Ur,$r=Ur=null,e.current=n,Qi=r;do{try{for(b=e;null!==Qi;){var E=Qi.flags;if(36&E&&hi(b,Qi.alternate,Qi),128&E){w=void 0;var S=Qi.ref;if(null!==S){var _=Qi.stateNode;Qi.tag,w=_,"function"==typeof S?S(w):S.current=w}}Qi=Qi.nextEffect}}catch(e){if(null===Qi)throw Error(l(330));Au(Qi,e),Qi=Qi.nextEffect}}while(null!==Qi);Qi=null,Do(),Ti=o}else e.current=n;if(Xi)Xi=!1,Gi=e,Ji=t;else for(Qi=r;null!==Qi;)t=Qi.nextEffect,Qi.nextEffect=null,8&Qi.flags&&((E=Qi).sibling=null,E.stateNode=null),Qi=t;if(0===(r=e.pendingLanes)&&(Yi=null),1===r?e===ru?nu++:(nu=0,ru=e):nu=0,n=n.stateNode,So&&"function"==typeof So.onCommitFiberRoot)try{So.onCommitFiberRoot(Eo,n,void 0,64==(64&n.current.flags))}catch(e){}if(pu(e,Bo()),qi)throw qi=!1,e=Ki,Ki=null,e;return 0!=(8&Ti)||Ko(),null}function Lu(){for(;null!==Qi;){var e=Qi.alternate;uu||null===iu||(0!=(8&Qi.flags)?Ze(Qi,iu)&&(uu=!0):13===Qi.tag&&_i(e,Qi)&&Ze(Qi,iu)&&(uu=!0));var t=Qi.flags;0!=(256&t)&&pi(e,Qi),0==(512&t)||Xi||(Xi=!0,qo(97,(function(){return ju(),null}))),Qi=Qi.nextEffect}}function ju(){if(90!==Ji){var e=97<Ji?97:Ji;return Ji=90,Qo(e,Mu)}return!1}function zu(e,t){Zi.push(t,e),Xi||(Xi=!0,qo(97,(function(){return ju(),null})))}function Ru(e,t){eu.push(t,e),Xi||(Xi=!0,qo(97,(function(){return ju(),null})))}function Mu(){if(null===Gi)return!1;var e=Gi;if(Gi=null,0!=(48&Ti))throw Error(l(331));var t=Ti;Ti|=32;var n=eu;eu=[];for(var r=0;r<n.length;r+=2){var o=n[r],a=n[r+1],i=o.destroy;if(o.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===a)throw Error(l(330));Au(a,e)}}for(n=Zi,Zi=[],r=0;r<n.length;r+=2){o=n[r],a=n[r+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(l(330));Au(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ti=t,Ko(),!0}function Iu(e,t,n){fa(e,t=ci(0,t=li(n,t),1)),t=cu(),null!==(e=du(e,1))&&(Vt(e,1,t),pu(e,t))}function Au(e,t){if(3===e.tag)Iu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Iu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Yi||!Yi.has(r))){var o=si(n,e=li(t,e),1);if(fa(n,o),o=cu(),null!==(n=du(n,1)))Vt(n,1,o),pu(n,o);else if("function"==typeof r.componentDidCatch&&(null===Yi||!Yi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Du(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=cu(),e.pingedLanes|=e.suspendedLanes&n,Ni===e&&(ji&n)===n&&(4===Mi||3===Mi&&(62914560&ji)===ji&&500>Bo()-Vi?ku(e,0):Ui|=n),pu(e,t)}function Fu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Wo()?1:2:(0===au&&(au=Ai),0===(t=Ut(62914560&~au))&&(t=4194304))),n=cu(),null!==(e=du(e,t))&&(Vt(e,t,n),pu(e,n))}function Uu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function $u(e,t,n,r){return new Uu(e,t,n,r)}function Vu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bu(e,t){var n=e.alternate;return null===n?((n=$u(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Wu(e,t,n,r,o,a){var i=2;if(r=e,"function"==typeof e)Vu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case S:return Hu(n.children,o,a,t);case I:i=8,o|=16;break;case _:i=8,o|=1;break;case C:return(e=$u(12,n,t,8|o)).elementType=C,e.type=C,e.lanes=a,e;case N:return(e=$u(13,n,t,o)).type=N,e.elementType=N,e.lanes=a,e;case L:return(e=$u(19,n,t,o)).elementType=L,e.lanes=a,e;case A:return Qu(n,o,a,t);case D:return(e=$u(24,n,t,o)).elementType=D,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:i=10;break e;case O:i=9;break e;case T:i=11;break e;case j:i=14;break e;case z:i=16,r=null;break e;case R:i=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=$u(i,n,t,o)).elementType=e,t.type=r,t.lanes=a,t}function Hu(e,t,n,r){return(e=$u(7,e,r,t)).lanes=n,e}function Qu(e,t,n,r){return(e=$u(23,e,r,t)).elementType=A,e.lanes=n,e}function qu(e,t,n){return(e=$u(6,e,null,t)).lanes=n,e}function Ku(e,t,n){return(t=$u(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=$t(0),this.expirationTimes=$t(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=$t(0),this.mutableSourceEagerHydrationData=null}function Xu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Gu(e,t,n,r){var o=t.current,a=cu(),i=su(o);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(yo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(yo(c)){n=wo(n,c,u);break e}}n=u}else n=fo;return null===t.context?t.context=n:t.pendingContext=n,(t=sa(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),fa(o,t),fu(o,i,a),i}function Ju(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Zu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ec(e,t){Zu(e,t),(e=e.alternate)&&Zu(e,t)}function tc(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Yu(e,t,null!=n&&!0===n.hydrate),t=$u(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ua(t),e[Zr]=n.current,Lr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}function nc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,r,o){var a=n._reactRootContainer;if(a){var l=a._internalRoot;if("function"==typeof o){var i=o;o=function(){var e=Ju(l);i.call(e)}}Gu(t,l,e,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tc(e,0,t?{hydrate:!0}:void 0)}(n,r),l=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Ju(l);u.call(e)}}gu((function(){Gu(t,l,e,o)}))}return Ju(l)}function oc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(t))throw Error(l(200));return Xu(e,t,null,n)}Hi=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||ho.current)Il=!0;else{if(0==(n&r)){switch(Il=!1,t.tag){case 3:Ql(t),qa();break;case 5:Ma(t);break;case 1:yo(t.type)&&ko(t);break;case 4:za(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;so(Jo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Gl(e,t,n):(so(Aa,1&Aa.current),null!==(t=ni(e,t,n))?t.sibling:null);so(Aa,1&Aa.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return ti(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),so(Aa,Aa.current),r)break;return null;case 23:case 24:return t.lanes=0,$l(e,t,n)}return ni(e,t,n)}Il=0!=(16384&e.flags)}else Il=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=mo(t,po.current),aa(t,n),o=ll(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,yo(r)){var a=!0;ko(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ua(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&ma(t,r,i,e),o.updater=ya,t.stateNode=o,o._reactInternals=t,ka(t,r,e,n),t=Hl(null,t,r,!0,a,n)}else t.tag=0,Al(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"==typeof e)return Vu(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===j)return 14}return 2}(o),e=Go(o,e),a){case 0:t=Bl(null,t,o,e,n);break e;case 1:t=Wl(null,t,o,e,n);break e;case 11:t=Dl(null,t,o,e,n);break e;case 14:t=Fl(null,t,o,Go(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Bl(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 1:return r=t.type,o=t.pendingProps,Wl(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 3:if(Ql(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ca(e,t),pa(t,r,null,n),(r=t.memoizedState.element)===o)qa(),t=ni(e,t,n);else{if((a=(o=t.stateNode).hydrate)&&(Ua=qr(t.stateNode.containerInfo.firstChild),Fa=t,a=$a=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],Ka.push(a);for(n=Pa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Al(e,t,r,n),qa();t=t.child}return t;case 5:return Ma(t),null===e&&Wa(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,i=o.children,Br(r,o)?i=null:null!==a&&Br(r,a)&&(t.flags|=16),Vl(e,t),Al(e,t,i,n),t.child;case 6:return null===e&&Wa(t),null;case 13:return Gl(e,t,n);case 4:return za(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ca(t,null,r,n):Al(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Dl(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 7:return Al(e,t,t.pendingProps,n),t.child;case 8:case 12:return Al(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,i=t.memoizedProps,a=o.value;var u=t.type._context;if(so(Jo,u._currentValue),u._currentValue=a,null!==i)if(u=i.value,0==(a=cr(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(i.children===o.children&&!ho.current){t=ni(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&a)){1===u.tag&&((s=sa(-1,n&-n)).tag=2,fa(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),oa(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Al(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,aa(t,n),r=r(o=la(o,a.unstable_observedBits)),t.flags|=1,Al(e,t,r,n),t.child;case 14:return a=Go(o=t.type,t.pendingProps),Fl(e,t,o,a=Go(o.type,a),r,n);case 15:return Ul(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Go(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,yo(r)?(e=!0,ko(t)):e=!1,aa(t,n),ba(t,r,o),ka(t,r,o,n),Hl(null,t,r,!0,e,n);case 19:return ti(e,t,n);case 23:case 24:return $l(e,t,n)}throw Error(l(156,t.tag))},tc.prototype.render=function(e){Gu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Gu(null,e,null,(function(){t[Zr]=null}))},et=function(e){13===e.tag&&(fu(e,4,cu()),ec(e,4))},tt=function(e){13===e.tag&&(fu(e,67108864,cu()),ec(e,67108864))},nt=function(e){if(13===e.tag){var t=cu(),n=su(e);fu(e,n,t),ec(e,n)}},rt=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=oo(r);if(!o)throw Error(l(90));G(r),ne(r,o)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&le(e,!!n.multiple,t,!1)}},je=yu,ze=function(e,t,n,r,o){var a=Ti;Ti|=4;try{return Qo(98,e.bind(null,t,n,r,o))}finally{0===(Ti=a)&&(Wi(),Ko())}},Re=function(){0==(49&Ti)&&(function(){if(null!==tu){var e=tu;tu=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,pu(e,Bo())}))}Ko()}(),ju())},Me=function(e,t){var n=Ti;Ti|=2;try{return e(t)}finally{0===(Ti=n)&&(Wi(),Ko())}};var ac={Events:[no,ro,oo,Ne,Le,ju,{current:!1}]},lc={findFiberByHostInstance:to,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ic={bundleType:lc.bundleType,version:lc.version,rendererPackageName:lc.rendererPackageName,rendererConfig:lc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:lc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var uc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!uc.isDisabled&&uc.supportsFiber)try{Eo=uc.inject(ic),So=uc}catch(ve){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ac,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=Je(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ti;if(0!=(48&n))return e(t);Ti|=1;try{if(e)return Qo(99,e.bind(null,t))}finally{Ti=n,Ko()}},t.hydrate=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nc(e))throw Error(l(40));return!!e._reactRootContainer&&(gu((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Zr]=null}))})),!0)},t.unstable_batchedUpdates=yu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nc(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return rc(e,t,n,!1,r)},t.version="17.0.2"},(e,t,n)=>{"use strict";var r=n(22),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var l=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),l=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function m(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||h}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||h}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=m.prototype;var b=g.prototype=new y;b.constructor=g,r(b,m.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,n){var r,a={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)k.call(t,r)&&!x.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:l,ref:i,props:a,_owner:w.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var _=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return l=l(u=e),e=""===r?"."+C(u,0):r,Array.isArray(l)?(n="",null!=e&&(n=e.replace(_,"$&/")+"/"),P(l,t,n,"",(function(e){return e}))):null!=l&&(S(l)&&(l=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(_,"$&/")+"/")+e)),t.push(l)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+C(i=e[c],c);u+=P(i,t,n,s,l)}else if(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof s)for(e=s.call(e),c=0;!(i=e.next()).done;)u+=P(i=i.value,t,n,s=r+C(i,c++),l);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,n){if(null==e)return e;var r=[],o=0;return P(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function T(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var N={current:null};function L(){var e=N.current;if(null===e)throw Error(p(321));return e}var j={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:O,forEach:function(e,t,n){O(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=m,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var a=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!x.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:l,ref:i,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="17.0.2"},(e,t,n)=>{"use strict";e.exports=n(34)},(e,t)=>{"use strict";var n,r=Symbol.for("react.element"),o=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),u=Symbol.for("react.provider"),c=Symbol.for("react.context"),s=Symbol.for("react.server_context"),f=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),p=Symbol.for("react.suspense_list"),h=Symbol.for("react.memo"),v=Symbol.for("react.lazy"),m=Symbol.for("react.offscreen");function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case a:case i:case l:case d:case p:return e;default:switch(e=e&&e.$$typeof){case s:case c:case f:case v:case h:case u:return e;default:return t}}case o:return t}}}n=Symbol.for("react.module.reference"),t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=f,t.Fragment=a,t.Lazy=v,t.Memo=h,t.Portal=o,t.Profiler=i,t.StrictMode=l,t.Suspense=d,t.SuspenseList=p,t.isAsyncMode=function(){return!1},t.isConcurrentMode=function(){return!1},t.isContextConsumer=function(e){return y(e)===c},t.isContextProvider=function(e){return y(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return y(e)===f},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===v},t.isMemo=function(e){return y(e)===h},t.isPortal=function(e){return y(e)===o},t.isProfiler=function(e){return y(e)===i},t.isStrictMode=function(e){return y(e)===l},t.isSuspense=function(e){return y(e)===d},t.isSuspenseList=function(e){return y(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===i||e===l||e===d||e===p||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===h||e.$$typeof===u||e.$$typeof===c||e.$$typeof===f||e.$$typeof===n||void 0!==e.getModuleId)},t.typeOf=y},(e,t,n)=>{e.exports=n(129)()}],e=>{e(e.s=131)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPLFNBQVNnRixHQUFHLE9BQU9nQyxFQUFFaEMsS0FBS1IsQ0FBQyxFQUN2ZXZNLEVBQVFzMUQsU0FBUyxTQUFTdm9ELEdBQUcsT0FBT2dDLEVBQUVoQyxLQUFLeUIsQ0FBQyxFQUFFeE8sRUFBUXUxRCxXQUFXLFNBQVN4b0QsR0FBRyxPQUFPZ0MsRUFBRWhDLEtBQUtoQixDQUFDLEVBQUUvTCxFQUFRdzFELGFBQWEsU0FBU3pvRCxHQUFHLE9BQU9nQyxFQUFFaEMsS0FBSy9ELENBQUMsRUFBRWhKLEVBQVF5MUQsV0FBVyxTQUFTMW9ELEdBQUcsT0FBT2dDLEVBQUVoQyxLQUFLK0IsQ0FBQyxFQUFFOU8sRUFBUTAxRCxlQUFlLFNBQVMzb0QsR0FBRyxPQUFPZ0MsRUFBRWhDLEtBQUt0SCxDQUFDLEVBQ2xQekYsRUFBUTIxRCxtQkFBbUIsU0FBUzVvRCxHQUFHLE1BQU0saUJBQWtCQSxHQUFHLG1CQUFvQkEsR0FBR0EsSUFBSTBCLEdBQUcxQixJQUFJaEIsR0FBR2dCLElBQUkvRCxHQUFHK0QsSUFBSStCLEdBQUcvQixJQUFJdEgsR0FBR3NILElBQUlILEdBQUcsaUJBQWtCRyxHQUFHLE9BQU9BLElBQUlBLEVBQUUwdEIsV0FBV2h1QixHQUFHTSxFQUFFMHRCLFdBQVdsdUIsR0FBR1EsRUFBRTB0QixXQUFXenVCLEdBQUdlLEVBQUUwdEIsV0FBV3h1QixHQUFHYyxFQUFFMHRCLFdBQVdwdUIsR0FBR1UsRUFBRTB0QixXQUFXNXRCLFFBQUcsSUFBU0UsRUFBRTZvRCxZQUFrQixFQUFFNTFELEVBQVE2MUQsT0FBTzltRCxhQ0kvU2hQLEVBQU9DLFFBQVUsRUFBUSxJQUFSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fcm9vdC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FycmF5LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXROYXRpdmUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VHZXRUYWcuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3RMaWtlLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19MaXN0Q2FjaGUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc29jSW5kZXhPZi5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU3ltYm9sLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19uYXRpdmVDcmVhdGUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE1hcERhdGEuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RvS2V5LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXAuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3QuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcENhY2hlLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2tleXMuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNMZW5ndGguanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheUxpa2UuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzS2V5LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzU3ltYm9sLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQnVmZmVyLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheU1hcC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU3RhY2suanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzRXF1YWwuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQXJyYXlzLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJndW1lbnRzLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0luZGV4LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzVHlwZWRBcnJheS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY2FzdFBhdGguanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2VxLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19mcmVlR2xvYmFsLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL190b1NvdXJjZS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNTdHJpY3RDb21wYXJhYmxlLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXRjaGVzU3RyaWN0Q29tcGFyYWJsZS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbm9kZVV0aWwuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvbWFwLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXRlcmF0ZWUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VNYXRjaGVzLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNNYXRjaC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlQ2xlYXIuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZURlbGV0ZS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlR2V0LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVIYXMuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZVNldC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tDbGVhci5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tEZWxldGUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrR2V0LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdGFja0hhcy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tTZXQuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc05hdGl2ZS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0UmF3VGFnLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vYmplY3RUb1N0cmluZy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNNYXNrZWQuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcmVKc0RhdGEuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFZhbHVlLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUNsZWFyLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19IYXNoLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoQ2xlYXIuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hEZWxldGUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hHZXQuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hIYXMuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hTZXQuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlRGVsZXRlLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleWFibGUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlR2V0LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUhhcy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVTZXQuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsRGVlcC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU2V0Q2FjaGUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlQWRkLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zZXRDYWNoZUhhcy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlTb21lLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jYWNoZUhhcy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxCeVRhZy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fVWludDhBcnJheS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwVG9BcnJheS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc2V0VG9BcnJheS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZXF1YWxPYmplY3RzLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRBbGxLZXlzLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0QWxsS2V5cy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYXJyYXlQdXNoLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRTeW1ib2xzLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheUZpbHRlci5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9zdHViQXJyYXkuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5TGlrZUtleXMuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUaW1lcy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzQXJndW1lbnRzLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJGYWxzZS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUlzVHlwZWRBcnJheS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVVuYXJ5LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlS2V5cy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNQcm90b3R5cGUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUtleXMuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX292ZXJBcmcuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFRhZy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fRGF0YVZpZXcuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1Byb21pc2UuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1NldC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fV2Vha01hcC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TWF0Y2hEYXRhLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlTWF0Y2hlc1Byb3BlcnR5LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2dldC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RyaW5nVG9QYXRoLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tZW1vaXplQ2FwcGVkLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL21lbW9pemUuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvdG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUb1N0cmluZy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9oYXNJbi5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUhhc0luLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNQYXRoLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lkZW50aXR5LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL3Byb3BlcnR5LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlUHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VQcm9wZXJ0eURlZXAuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VNYXAuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VFYWNoLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRm9yT3duLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlRm9yLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jcmVhdGVCYXNlRm9yLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jcmVhdGVCYXNlRWFjaC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL0NvbnRleHQuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL1N1YnNjcmlwdGlvbi5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZVJlZHV4Q29udGV4dC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZVN0b3JlLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlRGlzcGF0Y2guanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NldFByb3RvdHlwZU9mLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2luZGV4LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvZXNtL3RpbnktaW52YXJpYW50LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXNtL3JlYWN0LXJvdXRlci5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXNtL3JlYWN0LXJvdXRlci1kb20uanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL3NyYy9wYWdlcy9BYm91dC5qc3giLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9yZWR1eC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vc3JjL3N0b3JlLmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL25hdGl2ZS5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanMiLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvc3RyaW5naWZ5LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzIiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9zcmMvY29tcG9uZW50cy9Ub2RvSXRlbS5qc3giLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL3NyYy9jb21wb25lbnRzL2luZGV4Lm1vZHVsZS5jc3M/MzIzYSIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vc3JjL2NvbXBvbmVudHMvVG9kb0xpc3QuanN4Iiwid2VicGFjazovL3VuaXQtZGVtby1jcmEvLi9zcmMvcGFnZXMvSG9tZS5qc3giLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL3NyYy9BcHBsaWNhdGlvbi5qc3giLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL3NyYy9pbmRleC5qc3giLCJ3ZWJwYWNrOi8vdW5pdC1kZW1vLWNyYS8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly91bml0LWRlbW8tY3JhLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJ2YXIgZnJlZUdsb2JhbCA9IHJlcXVpcmUoJy4vX2ZyZWVHbG9iYWwnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBzZWxmYC4gKi9cbnZhciBmcmVlU2VsZiA9IHR5cGVvZiBzZWxmID09ICdvYmplY3QnICYmIHNlbGYgJiYgc2VsZi5PYmplY3QgPT09IE9iamVjdCAmJiBzZWxmO1xuXG4vKiogVXNlZCBhcyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdC4gKi9cbnZhciByb290ID0gZnJlZUdsb2JhbCB8fCBmcmVlU2VsZiB8fCBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvb3Q7XG4iLCIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYW4gYEFycmF5YCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FycmF5KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5KGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzQXJyYXkoJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzQXJyYXkoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcblxubW9kdWxlLmV4cG9ydHMgPSBpc0FycmF5O1xuIiwidmFyIGJhc2VJc05hdGl2ZSA9IHJlcXVpcmUoJy4vX2Jhc2VJc05hdGl2ZScpLFxuICAgIGdldFZhbHVlID0gcmVxdWlyZSgnLi9fZ2V0VmFsdWUnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBuYXRpdmUgZnVuY3Rpb24gYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgbWV0aG9kIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBmdW5jdGlvbiBpZiBpdCdzIG5hdGl2ZSwgZWxzZSBgdW5kZWZpbmVkYC5cbiAqL1xuZnVuY3Rpb24gZ2V0TmF0aXZlKG9iamVjdCwga2V5KSB7XG4gIHZhciB2YWx1ZSA9IGdldFZhbHVlKG9iamVjdCwga2V5KTtcbiAgcmV0dXJuIGJhc2VJc05hdGl2ZSh2YWx1ZSkgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXROYXRpdmU7XG4iLCJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyksXG4gICAgZ2V0UmF3VGFnID0gcmVxdWlyZSgnLi9fZ2V0UmF3VGFnJyksXG4gICAgb2JqZWN0VG9TdHJpbmcgPSByZXF1aXJlKCcuL19vYmplY3RUb1N0cmluZycpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgbnVsbFRhZyA9ICdbb2JqZWN0IE51bGxdJyxcbiAgICB1bmRlZmluZWRUYWcgPSAnW29iamVjdCBVbmRlZmluZWRdJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3ltVG9TdHJpbmdUYWcgPSBTeW1ib2wgPyBTeW1ib2wudG9TdHJpbmdUYWcgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGdldFRhZ2Agd2l0aG91dCBmYWxsYmFja3MgZm9yIGJ1Z2d5IGVudmlyb25tZW50cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0VGFnKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWRUYWcgOiBudWxsVGFnO1xuICB9XG4gIHJldHVybiAoc3ltVG9TdHJpbmdUYWcgJiYgc3ltVG9TdHJpbmdUYWcgaW4gT2JqZWN0KHZhbHVlKSlcbiAgICA/IGdldFJhd1RhZyh2YWx1ZSlcbiAgICA6IG9iamVjdFRvU3RyaW5nKHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlR2V0VGFnO1xuIiwiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNPYmplY3RMaWtlO1xuIiwidmFyIGxpc3RDYWNoZUNsZWFyID0gcmVxdWlyZSgnLi9fbGlzdENhY2hlQ2xlYXInKSxcbiAgICBsaXN0Q2FjaGVEZWxldGUgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVEZWxldGUnKSxcbiAgICBsaXN0Q2FjaGVHZXQgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVHZXQnKSxcbiAgICBsaXN0Q2FjaGVIYXMgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVIYXMnKSxcbiAgICBsaXN0Q2FjaGVTZXQgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVTZXQnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGxpc3QgY2FjaGUgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBMaXN0Q2FjaGUoZW50cmllcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGVudHJpZXMgPT0gbnVsbCA/IDAgOiBlbnRyaWVzLmxlbmd0aDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgTGlzdENhY2hlYC5cbkxpc3RDYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBsaXN0Q2FjaGVDbGVhcjtcbkxpc3RDYWNoZS5wcm90b3R5cGVbJ2RlbGV0ZSddID0gbGlzdENhY2hlRGVsZXRlO1xuTGlzdENhY2hlLnByb3RvdHlwZS5nZXQgPSBsaXN0Q2FjaGVHZXQ7XG5MaXN0Q2FjaGUucHJvdG90eXBlLmhhcyA9IGxpc3RDYWNoZUhhcztcbkxpc3RDYWNoZS5wcm90b3R5cGUuc2V0ID0gbGlzdENhY2hlU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IExpc3RDYWNoZTtcbiIsInZhciBlcSA9IHJlcXVpcmUoJy4vZXEnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBpbmRleCBhdCB3aGljaCB0aGUgYGtleWAgaXMgZm91bmQgaW4gYGFycmF5YCBvZiBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHsqfSBrZXkgVGhlIGtleSB0byBzZWFyY2ggZm9yLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIG1hdGNoZWQgdmFsdWUsIGVsc2UgYC0xYC5cbiAqL1xuZnVuY3Rpb24gYXNzb2NJbmRleE9mKGFycmF5LCBrZXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgaWYgKGVxKGFycmF5W2xlbmd0aF1bMF0sIGtleSkpIHtcbiAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhc3NvY0luZGV4T2Y7XG4iLCJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cbm1vZHVsZS5leHBvcnRzID0gU3ltYm9sO1xuIiwidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgbmF0aXZlQ3JlYXRlID0gZ2V0TmF0aXZlKE9iamVjdCwgJ2NyZWF0ZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5hdGl2ZUNyZWF0ZTtcbiIsInZhciBpc0tleWFibGUgPSByZXF1aXJlKCcuL19pc0tleWFibGUnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBkYXRhIGZvciBgbWFwYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG1hcCBUaGUgbWFwIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUgcmVmZXJlbmNlIGtleS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtYXAgZGF0YS5cbiAqL1xuZnVuY3Rpb24gZ2V0TWFwRGF0YShtYXAsIGtleSkge1xuICB2YXIgZGF0YSA9IG1hcC5fX2RhdGFfXztcbiAgcmV0dXJuIGlzS2V5YWJsZShrZXkpXG4gICAgPyBkYXRhW3R5cGVvZiBrZXkgPT0gJ3N0cmluZycgPyAnc3RyaW5nJyA6ICdoYXNoJ11cbiAgICA6IGRhdGEubWFwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE1hcERhdGE7XG4iLCJ2YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIElORklOSVRZID0gMSAvIDA7XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIHN0cmluZyBrZXkgaWYgaXQncyBub3QgYSBzdHJpbmcgb3Igc3ltYm9sLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBpbnNwZWN0LlxuICogQHJldHVybnMge3N0cmluZ3xzeW1ib2x9IFJldHVybnMgdGhlIGtleS5cbiAqL1xuZnVuY3Rpb24gdG9LZXkodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJyB8fCBpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgdmFyIHJlc3VsdCA9ICh2YWx1ZSArICcnKTtcbiAgcmV0dXJuIChyZXN1bHQgPT0gJzAnICYmICgxIC8gdmFsdWUpID09IC1JTkZJTklUWSkgPyAnLTAnIDogcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvS2V5O1xuIiwidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBNYXAgPSBnZXROYXRpdmUocm9vdCwgJ01hcCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1hcDtcbiIsIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlXG4gKiBbbGFuZ3VhZ2UgdHlwZV0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtbGFuZ3VhZ2UtdHlwZXMpXG4gKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3Qoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzT2JqZWN0O1xuIiwidmFyIG1hcENhY2hlQ2xlYXIgPSByZXF1aXJlKCcuL19tYXBDYWNoZUNsZWFyJyksXG4gICAgbWFwQ2FjaGVEZWxldGUgPSByZXF1aXJlKCcuL19tYXBDYWNoZURlbGV0ZScpLFxuICAgIG1hcENhY2hlR2V0ID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVHZXQnKSxcbiAgICBtYXBDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX21hcENhY2hlSGFzJyksXG4gICAgbWFwQ2FjaGVTZXQgPSByZXF1aXJlKCcuL19tYXBDYWNoZVNldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBtYXAgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gTWFwQ2FjaGUoZW50cmllcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGVudHJpZXMgPT0gbnVsbCA/IDAgOiBlbnRyaWVzLmxlbmd0aDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgTWFwQ2FjaGVgLlxuTWFwQ2FjaGUucHJvdG90eXBlLmNsZWFyID0gbWFwQ2FjaGVDbGVhcjtcbk1hcENhY2hlLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBtYXBDYWNoZURlbGV0ZTtcbk1hcENhY2hlLnByb3RvdHlwZS5nZXQgPSBtYXBDYWNoZUdldDtcbk1hcENhY2hlLnByb3RvdHlwZS5oYXMgPSBtYXBDYWNoZUhhcztcbk1hcENhY2hlLnByb3RvdHlwZS5zZXQgPSBtYXBDYWNoZVNldDtcblxubW9kdWxlLmV4cG9ydHMgPSBNYXBDYWNoZTtcbiIsInZhciBhcnJheUxpa2VLZXlzID0gcmVxdWlyZSgnLi9fYXJyYXlMaWtlS2V5cycpLFxuICAgIGJhc2VLZXlzID0gcmVxdWlyZSgnLi9fYmFzZUtleXMnKSxcbiAgICBpc0FycmF5TGlrZSA9IHJlcXVpcmUoJy4vaXNBcnJheUxpa2UnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBvZiBgb2JqZWN0YC5cbiAqXG4gKiAqKk5vdGU6KiogTm9uLW9iamVjdCB2YWx1ZXMgYXJlIGNvZXJjZWQgdG8gb2JqZWN0cy4gU2VlIHRoZVxuICogW0VTIHNwZWNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5rZXlzKVxuICogZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBAc3RhdGljXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBtZW1iZXJPZiBfXG4gKiBAY2F0ZWdvcnkgT2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICogQGV4YW1wbGVcbiAqXG4gKiBmdW5jdGlvbiBGb28oKSB7XG4gKiAgIHRoaXMuYSA9IDE7XG4gKiAgIHRoaXMuYiA9IDI7XG4gKiB9XG4gKlxuICogRm9vLnByb3RvdHlwZS5jID0gMztcbiAqXG4gKiBfLmtleXMobmV3IEZvbyk7XG4gKiAvLyA9PiBbJ2EnLCAnYiddIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpXG4gKlxuICogXy5rZXlzKCdoaScpO1xuICogLy8gPT4gWycwJywgJzEnXVxuICovXG5mdW5jdGlvbiBrZXlzKG9iamVjdCkge1xuICByZXR1cm4gaXNBcnJheUxpa2Uob2JqZWN0KSA/IGFycmF5TGlrZUtleXMob2JqZWN0KSA6IGJhc2VLZXlzKG9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5cztcbiIsIi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE1BWF9TQUZFX0lOVEVHRVIgPSA5MDA3MTk5MjU0NzQwOTkxO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBsZW5ndGguXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGxvb3NlbHkgYmFzZWQgb25cbiAqIFtgVG9MZW5ndGhgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy10b2xlbmd0aCkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBsZW5ndGgsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0xlbmd0aCgzKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzTGVuZ3RoKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKEluZmluaXR5KTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0xlbmd0aCgnMycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNMZW5ndGgodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyAmJlxuICAgIHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPD0gTUFYX1NBRkVfSU5URUdFUjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0xlbmd0aDtcbiIsInZhciBpc0Z1bmN0aW9uID0gcmVxdWlyZSgnLi9pc0Z1bmN0aW9uJyksXG4gICAgaXNMZW5ndGggPSByZXF1aXJlKCcuL2lzTGVuZ3RoJyk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZS4gQSB2YWx1ZSBpcyBjb25zaWRlcmVkIGFycmF5LWxpa2UgaWYgaXQnc1xuICogbm90IGEgZnVuY3Rpb24gYW5kIGhhcyBhIGB2YWx1ZS5sZW5ndGhgIHRoYXQncyBhbiBpbnRlZ2VyIGdyZWF0ZXIgdGhhbiBvclxuICogZXF1YWwgdG8gYDBgIGFuZCBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gYE51bWJlci5NQVhfU0FGRV9JTlRFR0VSYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKGRvY3VtZW50LmJvZHkuY2hpbGRyZW4pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoJ2FiYycpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIGlzTGVuZ3RoKHZhbHVlLmxlbmd0aCkgJiYgIWlzRnVuY3Rpb24odmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQXJyYXlMaWtlO1xuIiwidmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXNTeW1ib2wnKTtcblxuLyoqIFVzZWQgdG8gbWF0Y2ggcHJvcGVydHkgbmFtZXMgd2l0aGluIHByb3BlcnR5IHBhdGhzLiAqL1xudmFyIHJlSXNEZWVwUHJvcCA9IC9cXC58XFxbKD86W15bXFxdXSp8KFtcIiddKSg/Oig/IVxcMSlbXlxcXFxdfFxcXFwuKSo/XFwxKVxcXS8sXG4gICAgcmVJc1BsYWluUHJvcCA9IC9eXFx3KiQvO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgcHJvcGVydHkgbmFtZSBhbmQgbm90IGEgcHJvcGVydHkgcGF0aC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdF0gVGhlIG9iamVjdCB0byBxdWVyeSBrZXlzIG9uLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBwcm9wZXJ0eSBuYW1lLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzS2V5KHZhbHVlLCBvYmplY3QpIHtcbiAgaWYgKGlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICBpZiAodHlwZSA9PSAnbnVtYmVyJyB8fCB0eXBlID09ICdzeW1ib2wnIHx8IHR5cGUgPT0gJ2Jvb2xlYW4nIHx8XG4gICAgICB2YWx1ZSA9PSBudWxsIHx8IGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiByZUlzUGxhaW5Qcm9wLnRlc3QodmFsdWUpIHx8ICFyZUlzRGVlcFByb3AudGVzdCh2YWx1ZSkgfHxcbiAgICAob2JqZWN0ICE9IG51bGwgJiYgdmFsdWUgaW4gT2JqZWN0KG9iamVjdCkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzS2V5O1xuIiwidmFyIGJhc2VHZXRUYWcgPSByZXF1aXJlKCcuL19iYXNlR2V0VGFnJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIHN5bWJvbFRhZyA9ICdbb2JqZWN0IFN5bWJvbF0nO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgU3ltYm9sYCBwcmltaXRpdmUgb3Igb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgc3ltYm9sLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNTeW1ib2woU3ltYm9sLml0ZXJhdG9yKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzU3ltYm9sKCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3ltYm9sKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gJ3N5bWJvbCcgfHxcbiAgICAoaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSBzeW1ib2xUYWcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzU3ltYm9sO1xuIiwidmFyIHJvb3QgPSByZXF1aXJlKCcuL19yb290JyksXG4gICAgc3R1YkZhbHNlID0gcmVxdWlyZSgnLi9zdHViRmFsc2UnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBCdWZmZXIgPSBtb2R1bGVFeHBvcnRzID8gcm9vdC5CdWZmZXIgOiB1bmRlZmluZWQ7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVJc0J1ZmZlciA9IEJ1ZmZlciA/IEJ1ZmZlci5pc0J1ZmZlciA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGJ1ZmZlci5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMy4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGJ1ZmZlciwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQnVmZmVyKG5ldyBCdWZmZXIoMikpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNCdWZmZXIobmV3IFVpbnQ4QXJyYXkoMikpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQnVmZmVyID0gbmF0aXZlSXNCdWZmZXIgfHwgc3R1YkZhbHNlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQnVmZmVyO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8ubWFwYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWVcbiAqIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBtYXBwZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGFycmF5TWFwKGFycmF5LCBpdGVyYXRlZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobGVuZ3RoKTtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHJlc3VsdFtpbmRleF0gPSBpdGVyYXRlZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhcnJheU1hcDtcbiIsInZhciBMaXN0Q2FjaGUgPSByZXF1aXJlKCcuL19MaXN0Q2FjaGUnKSxcbiAgICBzdGFja0NsZWFyID0gcmVxdWlyZSgnLi9fc3RhY2tDbGVhcicpLFxuICAgIHN0YWNrRGVsZXRlID0gcmVxdWlyZSgnLi9fc3RhY2tEZWxldGUnKSxcbiAgICBzdGFja0dldCA9IHJlcXVpcmUoJy4vX3N0YWNrR2V0JyksXG4gICAgc3RhY2tIYXMgPSByZXF1aXJlKCcuL19zdGFja0hhcycpLFxuICAgIHN0YWNrU2V0ID0gcmVxdWlyZSgnLi9fc3RhY2tTZXQnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc3RhY2sgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gU3RhY2soZW50cmllcykge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18gPSBuZXcgTGlzdENhY2hlKGVudHJpZXMpO1xuICB0aGlzLnNpemUgPSBkYXRhLnNpemU7XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBTdGFja2AuXG5TdGFjay5wcm90b3R5cGUuY2xlYXIgPSBzdGFja0NsZWFyO1xuU3RhY2sucHJvdG90eXBlWydkZWxldGUnXSA9IHN0YWNrRGVsZXRlO1xuU3RhY2sucHJvdG90eXBlLmdldCA9IHN0YWNrR2V0O1xuU3RhY2sucHJvdG90eXBlLmhhcyA9IHN0YWNrSGFzO1xuU3RhY2sucHJvdG90eXBlLnNldCA9IHN0YWNrU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0YWNrO1xuIiwidmFyIGJhc2VHZXRUYWcgPSByZXF1aXJlKCcuL19iYXNlR2V0VGFnJyksXG4gICAgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzT2JqZWN0Jyk7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBhc3luY1RhZyA9ICdbb2JqZWN0IEFzeW5jRnVuY3Rpb25dJyxcbiAgICBmdW5jVGFnID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICBnZW5UYWcgPSAnW29iamVjdCBHZW5lcmF0b3JGdW5jdGlvbl0nLFxuICAgIHByb3h5VGFnID0gJ1tvYmplY3QgUHJveHldJztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYEZ1bmN0aW9uYCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBmdW5jdGlvbiwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oXyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0Z1bmN0aW9uKC9hYmMvKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gVGhlIHVzZSBvZiBgT2JqZWN0I3RvU3RyaW5nYCBhdm9pZHMgaXNzdWVzIHdpdGggdGhlIGB0eXBlb2ZgIG9wZXJhdG9yXG4gIC8vIGluIFNhZmFyaSA5IHdoaWNoIHJldHVybnMgJ29iamVjdCcgZm9yIHR5cGVkIGFycmF5cyBhbmQgb3RoZXIgY29uc3RydWN0b3JzLlxuICB2YXIgdGFnID0gYmFzZUdldFRhZyh2YWx1ZSk7XG4gIHJldHVybiB0YWcgPT0gZnVuY1RhZyB8fCB0YWcgPT0gZ2VuVGFnIHx8IHRhZyA9PSBhc3luY1RhZyB8fCB0YWcgPT0gcHJveHlUYWc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNGdW5jdGlvbjtcbiIsInZhciBiYXNlSXNFcXVhbERlZXAgPSByZXF1aXJlKCcuL19iYXNlSXNFcXVhbERlZXAnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzRXF1YWxgIHdoaWNoIHN1cHBvcnRzIHBhcnRpYWwgY29tcGFyaXNvbnNcbiAqIGFuZCB0cmFja3MgdHJhdmVyc2VkIG9iamVjdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHtib29sZWFufSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLlxuICogIDEgLSBVbm9yZGVyZWQgY29tcGFyaXNvblxuICogIDIgLSBQYXJ0aWFsIGNvbXBhcmlzb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtPYmplY3R9IFtzdGFja10gVHJhY2tzIHRyYXZlcnNlZCBgdmFsdWVgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNFcXVhbCh2YWx1ZSwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKSB7XG4gIGlmICh2YWx1ZSA9PT0gb3RoZXIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAodmFsdWUgPT0gbnVsbCB8fCBvdGhlciA9PSBudWxsIHx8ICghaXNPYmplY3RMaWtlKHZhbHVlKSAmJiAhaXNPYmplY3RMaWtlKG90aGVyKSkpIHtcbiAgICByZXR1cm4gdmFsdWUgIT09IHZhbHVlICYmIG90aGVyICE9PSBvdGhlcjtcbiAgfVxuICByZXR1cm4gYmFzZUlzRXF1YWxEZWVwKHZhbHVlLCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgYmFzZUlzRXF1YWwsIHN0YWNrKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNFcXVhbDtcbiIsInZhciBTZXRDYWNoZSA9IHJlcXVpcmUoJy4vX1NldENhY2hlJyksXG4gICAgYXJyYXlTb21lID0gcmVxdWlyZSgnLi9fYXJyYXlTb21lJyksXG4gICAgY2FjaGVIYXMgPSByZXF1aXJlKCcuL19jYWNoZUhhcycpO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciB2YWx1ZSBjb21wYXJpc29ucy4gKi9cbnZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDEsXG4gICAgQ09NUEFSRV9VTk9SREVSRURfRkxBRyA9IDI7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbERlZXBgIGZvciBhcnJheXMgd2l0aCBzdXBwb3J0IGZvclxuICogcGFydGlhbCBkZWVwIGNvbXBhcmlzb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7QXJyYXl9IG90aGVyIFRoZSBvdGhlciBhcnJheSB0byBjb21wYXJlLlxuICogQHBhcmFtIHtudW1iZXJ9IGJpdG1hc2sgVGhlIGJpdG1hc2sgZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgIGZvciBtb3JlIGRldGFpbHMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuXG4gKiBAcGFyYW0ge09iamVjdH0gc3RhY2sgVHJhY2tzIHRyYXZlcnNlZCBgYXJyYXlgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGFycmF5cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBlcXVhbEFycmF5cyhhcnJheSwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRyxcbiAgICAgIGFyckxlbmd0aCA9IGFycmF5Lmxlbmd0aCxcbiAgICAgIG90aExlbmd0aCA9IG90aGVyLmxlbmd0aDtcblxuICBpZiAoYXJyTGVuZ3RoICE9IG90aExlbmd0aCAmJiAhKGlzUGFydGlhbCAmJiBvdGhMZW5ndGggPiBhcnJMZW5ndGgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIENoZWNrIHRoYXQgY3ljbGljIHZhbHVlcyBhcmUgZXF1YWwuXG4gIHZhciBhcnJTdGFja2VkID0gc3RhY2suZ2V0KGFycmF5KTtcbiAgdmFyIG90aFN0YWNrZWQgPSBzdGFjay5nZXQob3RoZXIpO1xuICBpZiAoYXJyU3RhY2tlZCAmJiBvdGhTdGFja2VkKSB7XG4gICAgcmV0dXJuIGFyclN0YWNrZWQgPT0gb3RoZXIgJiYgb3RoU3RhY2tlZCA9PSBhcnJheTtcbiAgfVxuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IHRydWUsXG4gICAgICBzZWVuID0gKGJpdG1hc2sgJiBDT01QQVJFX1VOT1JERVJFRF9GTEFHKSA/IG5ldyBTZXRDYWNoZSA6IHVuZGVmaW5lZDtcblxuICBzdGFjay5zZXQoYXJyYXksIG90aGVyKTtcbiAgc3RhY2suc2V0KG90aGVyLCBhcnJheSk7XG5cbiAgLy8gSWdub3JlIG5vbi1pbmRleCBwcm9wZXJ0aWVzLlxuICB3aGlsZSAoKytpbmRleCA8IGFyckxlbmd0aCkge1xuICAgIHZhciBhcnJWYWx1ZSA9IGFycmF5W2luZGV4XSxcbiAgICAgICAgb3RoVmFsdWUgPSBvdGhlcltpbmRleF07XG5cbiAgICBpZiAoY3VzdG9taXplcikge1xuICAgICAgdmFyIGNvbXBhcmVkID0gaXNQYXJ0aWFsXG4gICAgICAgID8gY3VzdG9taXplcihvdGhWYWx1ZSwgYXJyVmFsdWUsIGluZGV4LCBvdGhlciwgYXJyYXksIHN0YWNrKVxuICAgICAgICA6IGN1c3RvbWl6ZXIoYXJyVmFsdWUsIG90aFZhbHVlLCBpbmRleCwgYXJyYXksIG90aGVyLCBzdGFjayk7XG4gICAgfVxuICAgIGlmIChjb21wYXJlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpZiAoY29tcGFyZWQpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICAvLyBSZWN1cnNpdmVseSBjb21wYXJlIGFycmF5cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIGlmIChzZWVuKSB7XG4gICAgICBpZiAoIWFycmF5U29tZShvdGhlciwgZnVuY3Rpb24ob3RoVmFsdWUsIG90aEluZGV4KSB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlSGFzKHNlZW4sIG90aEluZGV4KSAmJlxuICAgICAgICAgICAgICAgIChhcnJWYWx1ZSA9PT0gb3RoVmFsdWUgfHwgZXF1YWxGdW5jKGFyclZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spKSkge1xuICAgICAgICAgICAgICByZXR1cm4gc2Vlbi5wdXNoKG90aEluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSkge1xuICAgICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghKFxuICAgICAgICAgIGFyclZhbHVlID09PSBvdGhWYWx1ZSB8fFxuICAgICAgICAgICAgZXF1YWxGdW5jKGFyclZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spXG4gICAgICAgICkpIHtcbiAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHN0YWNrWydkZWxldGUnXShhcnJheSk7XG4gIHN0YWNrWydkZWxldGUnXShvdGhlcik7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXF1YWxBcnJheXM7XG4iLCJ2YXIgYmFzZUlzQXJndW1lbnRzID0gcmVxdWlyZSgnLi9fYmFzZUlzQXJndW1lbnRzJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgcHJvcGVydHlJc0VudW1lcmFibGUgPSBvYmplY3RQcm90by5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGBhcmd1bWVudHNgIG9iamVjdCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcmd1bWVudHMoZnVuY3Rpb24oKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FyZ3VtZW50cyhbMSwgMiwgM10pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQXJndW1lbnRzID0gYmFzZUlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID8gYmFzZUlzQXJndW1lbnRzIDogZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpICYmXG4gICAgIXByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodmFsdWUsICdjYWxsZWUnKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaXNBcmd1bWVudHM7XG4iLCIvKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IHVuc2lnbmVkIGludGVnZXIgdmFsdWVzLiAqL1xudmFyIHJlSXNVaW50ID0gL14oPzowfFsxLTldXFxkKikkLztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGFycmF5LWxpa2UgaW5kZXguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHBhcmFtIHtudW1iZXJ9IFtsZW5ndGg9TUFYX1NBRkVfSU5URUdFUl0gVGhlIHVwcGVyIGJvdW5kcyBvZiBhIHZhbGlkIGluZGV4LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBpbmRleCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0luZGV4KHZhbHVlLCBsZW5ndGgpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGxlbmd0aCA9IGxlbmd0aCA9PSBudWxsID8gTUFYX1NBRkVfSU5URUdFUiA6IGxlbmd0aDtcblxuICByZXR1cm4gISFsZW5ndGggJiZcbiAgICAodHlwZSA9PSAnbnVtYmVyJyB8fFxuICAgICAgKHR5cGUgIT0gJ3N5bWJvbCcgJiYgcmVJc1VpbnQudGVzdCh2YWx1ZSkpKSAmJlxuICAgICAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNJbmRleDtcbiIsInZhciBiYXNlSXNUeXBlZEFycmF5ID0gcmVxdWlyZSgnLi9fYmFzZUlzVHlwZWRBcnJheScpLFxuICAgIGJhc2VVbmFyeSA9IHJlcXVpcmUoJy4vX2Jhc2VVbmFyeScpLFxuICAgIG5vZGVVdGlsID0gcmVxdWlyZSgnLi9fbm9kZVV0aWwnKTtcblxuLyogTm9kZS5qcyBoZWxwZXIgcmVmZXJlbmNlcy4gKi9cbnZhciBub2RlSXNUeXBlZEFycmF5ID0gbm9kZVV0aWwgJiYgbm9kZVV0aWwuaXNUeXBlZEFycmF5O1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSB0eXBlZCBhcnJheS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDMuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHR5cGVkIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNUeXBlZEFycmF5KG5ldyBVaW50OEFycmF5KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzVHlwZWRBcnJheShbXSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNUeXBlZEFycmF5ID0gbm9kZUlzVHlwZWRBcnJheSA/IGJhc2VVbmFyeShub2RlSXNUeXBlZEFycmF5KSA6IGJhc2VJc1R5cGVkQXJyYXk7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNUeXBlZEFycmF5O1xuIiwidmFyIGNhc3RQYXRoID0gcmVxdWlyZSgnLi9fY2FzdFBhdGgnKSxcbiAgICB0b0tleSA9IHJlcXVpcmUoJy4vX3RvS2V5Jyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZ2V0YCB3aXRob3V0IHN1cHBvcnQgZm9yIGRlZmF1bHQgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0KG9iamVjdCwgcGF0aCkge1xuICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KTtcblxuICB2YXIgaW5kZXggPSAwLFxuICAgICAgbGVuZ3RoID0gcGF0aC5sZW5ndGg7XG5cbiAgd2hpbGUgKG9iamVjdCAhPSBudWxsICYmIGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgb2JqZWN0ID0gb2JqZWN0W3RvS2V5KHBhdGhbaW5kZXgrK10pXTtcbiAgfVxuICByZXR1cm4gKGluZGV4ICYmIGluZGV4ID09IGxlbmd0aCkgPyBvYmplY3QgOiB1bmRlZmluZWQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUdldDtcbiIsInZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNLZXkgPSByZXF1aXJlKCcuL19pc0tleScpLFxuICAgIHN0cmluZ1RvUGF0aCA9IHJlcXVpcmUoJy4vX3N0cmluZ1RvUGF0aCcpLFxuICAgIHRvU3RyaW5nID0gcmVxdWlyZSgnLi90b1N0cmluZycpO1xuXG4vKipcbiAqIENhc3RzIGB2YWx1ZWAgdG8gYSBwYXRoIGFycmF5IGlmIGl0J3Mgbm90IG9uZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5IGtleXMgb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGNhc3QgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gY2FzdFBhdGgodmFsdWUsIG9iamVjdCkge1xuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgcmV0dXJuIGlzS2V5KHZhbHVlLCBvYmplY3QpID8gW3ZhbHVlXSA6IHN0cmluZ1RvUGF0aCh0b1N0cmluZyh2YWx1ZSkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNhc3RQYXRoO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjJcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIFBlcmZvcm1zIGFcbiAqIFtgU2FtZVZhbHVlWmVyb2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXNhbWV2YWx1ZXplcm8pXG4gKiBjb21wYXJpc29uIGJldHdlZW4gdHdvIHZhbHVlcyB0byBkZXRlcm1pbmUgaWYgdGhleSBhcmUgZXF1aXZhbGVudC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2EnOiAxIH07XG4gKlxuICogXy5lcShvYmplY3QsIG9iamVjdCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5lcShvYmplY3QsIG90aGVyKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5lcSgnYScsICdhJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5lcSgnYScsIE9iamVjdCgnYScpKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5lcShOYU4sIE5hTik7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGVxKHZhbHVlLCBvdGhlcikge1xuICByZXR1cm4gdmFsdWUgPT09IG90aGVyIHx8ICh2YWx1ZSAhPT0gdmFsdWUgJiYgb3RoZXIgIT09IG90aGVyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlcTtcbiIsIi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovXG52YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG5cbm1vZHVsZS5leHBvcnRzID0gZnJlZUdsb2JhbDtcbiIsIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIHJlc29sdmUgdGhlIGRlY29tcGlsZWQgc291cmNlIG9mIGZ1bmN0aW9ucy4gKi9cbnZhciBmdW5jVG9TdHJpbmcgPSBmdW5jUHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYGZ1bmNgIHRvIGl0cyBzb3VyY2UgY29kZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHNvdXJjZSBjb2RlLlxuICovXG5mdW5jdGlvbiB0b1NvdXJjZShmdW5jKSB7XG4gIGlmIChmdW5jICE9IG51bGwpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGZ1bmNUb1N0cmluZy5jYWxsKGZ1bmMpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAoZnVuYyArICcnKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG4gIHJldHVybiAnJztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0b1NvdXJjZTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSBmb3Igc3RyaWN0IGVxdWFsaXR5IGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlmIHN1aXRhYmxlIGZvciBzdHJpY3RcbiAqICBlcXVhbGl0eSBjb21wYXJpc29ucywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc1N0cmljdENvbXBhcmFibGUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09PSB2YWx1ZSAmJiAhaXNPYmplY3QodmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzU3RyaWN0Q29tcGFyYWJsZTtcbiIsIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBtYXRjaGVzUHJvcGVydHlgIGZvciBzb3VyY2UgdmFsdWVzIHN1aXRhYmxlXG4gKiBmb3Igc3RyaWN0IGVxdWFsaXR5IGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEBwYXJhbSB7Kn0gc3JjVmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgc3BlYyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gbWF0Y2hlc1N0cmljdENvbXBhcmFibGUoa2V5LCBzcmNWYWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgaWYgKG9iamVjdCA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3Rba2V5XSA9PT0gc3JjVmFsdWUgJiZcbiAgICAgIChzcmNWYWx1ZSAhPT0gdW5kZWZpbmVkIHx8IChrZXkgaW4gT2JqZWN0KG9iamVjdCkpKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZTtcbiIsInZhciBmcmVlR2xvYmFsID0gcmVxdWlyZSgnLi9fZnJlZUdsb2JhbCcpO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL1xudmFyIGZyZWVFeHBvcnRzID0gdHlwZW9mIGV4cG9ydHMgPT0gJ29iamVjdCcgJiYgZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovXG52YXIgZnJlZU1vZHVsZSA9IGZyZWVFeHBvcnRzICYmIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4vKiogRGV0ZWN0IHRoZSBwb3B1bGFyIENvbW1vbkpTIGV4dGVuc2lvbiBgbW9kdWxlLmV4cG9ydHNgLiAqL1xudmFyIG1vZHVsZUV4cG9ydHMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUuZXhwb3J0cyA9PT0gZnJlZUV4cG9ydHM7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgcHJvY2Vzc2AgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVQcm9jZXNzID0gbW9kdWxlRXhwb3J0cyAmJiBmcmVlR2xvYmFsLnByb2Nlc3M7XG5cbi8qKiBVc2VkIHRvIGFjY2VzcyBmYXN0ZXIgTm9kZS5qcyBoZWxwZXJzLiAqL1xudmFyIG5vZGVVdGlsID0gKGZ1bmN0aW9uKCkge1xuICB0cnkge1xuICAgIC8vIFVzZSBgdXRpbC50eXBlc2AgZm9yIE5vZGUuanMgMTArLlxuICAgIHZhciB0eXBlcyA9IGZyZWVNb2R1bGUgJiYgZnJlZU1vZHVsZS5yZXF1aXJlICYmIGZyZWVNb2R1bGUucmVxdWlyZSgndXRpbCcpLnR5cGVzO1xuXG4gICAgaWYgKHR5cGVzKSB7XG4gICAgICByZXR1cm4gdHlwZXM7XG4gICAgfVxuXG4gICAgLy8gTGVnYWN5IGBwcm9jZXNzLmJpbmRpbmcoJ3V0aWwnKWAgZm9yIE5vZGUuanMgPCAxMC5cbiAgICByZXR1cm4gZnJlZVByb2Nlc3MgJiYgZnJlZVByb2Nlc3MuYmluZGluZyAmJiBmcmVlUHJvY2Vzcy5iaW5kaW5nKCd1dGlsJyk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59KCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5vZGVVdGlsO1xuIiwidmFyIGFycmF5TWFwID0gcmVxdWlyZSgnLi9fYXJyYXlNYXAnKSxcbiAgICBiYXNlSXRlcmF0ZWUgPSByZXF1aXJlKCcuL19iYXNlSXRlcmF0ZWUnKSxcbiAgICBiYXNlTWFwID0gcmVxdWlyZSgnLi9fYmFzZU1hcCcpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHZhbHVlcyBieSBydW5uaW5nIGVhY2ggZWxlbWVudCBpbiBgY29sbGVjdGlvbmAgdGhydVxuICogYGl0ZXJhdGVlYC4gVGhlIGl0ZXJhdGVlIGlzIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM6XG4gKiAodmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuXG4gKlxuICogTWFueSBsb2Rhc2ggbWV0aG9kcyBhcmUgZ3VhcmRlZCB0byB3b3JrIGFzIGl0ZXJhdGVlcyBmb3IgbWV0aG9kcyBsaWtlXG4gKiBgXy5ldmVyeWAsIGBfLmZpbHRlcmAsIGBfLm1hcGAsIGBfLm1hcFZhbHVlc2AsIGBfLnJlamVjdGAsIGFuZCBgXy5zb21lYC5cbiAqXG4gKiBUaGUgZ3VhcmRlZCBtZXRob2RzIGFyZTpcbiAqIGBhcnlgLCBgY2h1bmtgLCBgY3VycnlgLCBgY3VycnlSaWdodGAsIGBkcm9wYCwgYGRyb3BSaWdodGAsIGBldmVyeWAsXG4gKiBgZmlsbGAsIGBpbnZlcnRgLCBgcGFyc2VJbnRgLCBgcmFuZG9tYCwgYHJhbmdlYCwgYHJhbmdlUmlnaHRgLCBgcmVwZWF0YCxcbiAqIGBzYW1wbGVTaXplYCwgYHNsaWNlYCwgYHNvbWVgLCBgc29ydEJ5YCwgYHNwbGl0YCwgYHRha2VgLCBgdGFrZVJpZ2h0YCxcbiAqIGB0ZW1wbGF0ZWAsIGB0cmltYCwgYHRyaW1FbmRgLCBgdHJpbVN0YXJ0YCwgYW5kIGB3b3Jkc2BcbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgQ29sbGVjdGlvblxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2l0ZXJhdGVlPV8uaWRlbnRpdHldIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBtYXBwZWQgYXJyYXkuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGZ1bmN0aW9uIHNxdWFyZShuKSB7XG4gKiAgIHJldHVybiBuICogbjtcbiAqIH1cbiAqXG4gKiBfLm1hcChbNCwgOF0sIHNxdWFyZSk7XG4gKiAvLyA9PiBbMTYsIDY0XVxuICpcbiAqIF8ubWFwKHsgJ2EnOiA0LCAnYic6IDggfSwgc3F1YXJlKTtcbiAqIC8vID0+IFsxNiwgNjRdIChpdGVyYXRpb24gb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQpXG4gKlxuICogdmFyIHVzZXJzID0gW1xuICogICB7ICd1c2VyJzogJ2Jhcm5leScgfSxcbiAqICAgeyAndXNlcic6ICdmcmVkJyB9XG4gKiBdO1xuICpcbiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICogXy5tYXAodXNlcnMsICd1c2VyJyk7XG4gKiAvLyA9PiBbJ2Jhcm5leScsICdmcmVkJ11cbiAqL1xuZnVuY3Rpb24gbWFwKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gIHZhciBmdW5jID0gaXNBcnJheShjb2xsZWN0aW9uKSA/IGFycmF5TWFwIDogYmFzZU1hcDtcbiAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbiwgYmFzZUl0ZXJhdGVlKGl0ZXJhdGVlLCAzKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwO1xuIiwidmFyIGJhc2VNYXRjaGVzID0gcmVxdWlyZSgnLi9fYmFzZU1hdGNoZXMnKSxcbiAgICBiYXNlTWF0Y2hlc1Byb3BlcnR5ID0gcmVxdWlyZSgnLi9fYmFzZU1hdGNoZXNQcm9wZXJ0eScpLFxuICAgIGlkZW50aXR5ID0gcmVxdWlyZSgnLi9pZGVudGl0eScpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBwcm9wZXJ0eSA9IHJlcXVpcmUoJy4vcHJvcGVydHknKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pdGVyYXRlZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gW3ZhbHVlPV8uaWRlbnRpdHldIFRoZSB2YWx1ZSB0byBjb252ZXJ0IHRvIGFuIGl0ZXJhdGVlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBpdGVyYXRlZS5cbiAqL1xuZnVuY3Rpb24gYmFzZUl0ZXJhdGVlKHZhbHVlKSB7XG4gIC8vIERvbid0IHN0b3JlIHRoZSBgdHlwZW9mYCByZXN1bHQgaW4gYSB2YXJpYWJsZSB0byBhdm9pZCBhIEpJVCBidWcgaW4gU2FmYXJpIDkuXG4gIC8vIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTU2MDM0IGZvciBtb3JlIGRldGFpbHMuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgIHJldHVybiBpZGVudGl0eTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGlzQXJyYXkodmFsdWUpXG4gICAgICA/IGJhc2VNYXRjaGVzUHJvcGVydHkodmFsdWVbMF0sIHZhbHVlWzFdKVxuICAgICAgOiBiYXNlTWF0Y2hlcyh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHByb3BlcnR5KHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXRlcmF0ZWU7XG4iLCJ2YXIgYmFzZUlzTWF0Y2ggPSByZXF1aXJlKCcuL19iYXNlSXNNYXRjaCcpLFxuICAgIGdldE1hdGNoRGF0YSA9IHJlcXVpcmUoJy4vX2dldE1hdGNoRGF0YScpLFxuICAgIG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlID0gcmVxdWlyZSgnLi9fbWF0Y2hlc1N0cmljdENvbXBhcmFibGUnKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5tYXRjaGVzYCB3aGljaCBkb2Vzbid0IGNsb25lIGBzb3VyY2VgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBvYmplY3Qgb2YgcHJvcGVydHkgdmFsdWVzIHRvIG1hdGNoLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgc3BlYyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZU1hdGNoZXMoc291cmNlKSB7XG4gIHZhciBtYXRjaERhdGEgPSBnZXRNYXRjaERhdGEoc291cmNlKTtcbiAgaWYgKG1hdGNoRGF0YS5sZW5ndGggPT0gMSAmJiBtYXRjaERhdGFbMF1bMl0pIHtcbiAgICByZXR1cm4gbWF0Y2hlc1N0cmljdENvbXBhcmFibGUobWF0Y2hEYXRhWzBdWzBdLCBtYXRjaERhdGFbMF1bMV0pO1xuICB9XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0ID09PSBzb3VyY2UgfHwgYmFzZUlzTWF0Y2gob2JqZWN0LCBzb3VyY2UsIG1hdGNoRGF0YSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZU1hdGNoZXM7XG4iLCJ2YXIgU3RhY2sgPSByZXF1aXJlKCcuL19TdGFjaycpLFxuICAgIGJhc2VJc0VxdWFsID0gcmVxdWlyZSgnLi9fYmFzZUlzRXF1YWwnKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxLFxuICAgIENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcgPSAyO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTWF0Y2hgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBvYmplY3Qgb2YgcHJvcGVydHkgdmFsdWVzIHRvIG1hdGNoLlxuICogQHBhcmFtIHtBcnJheX0gbWF0Y2hEYXRhIFRoZSBwcm9wZXJ0eSBuYW1lcywgdmFsdWVzLCBhbmQgY29tcGFyZSBmbGFncyB0byBtYXRjaC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBvYmplY3RgIGlzIGEgbWF0Y2gsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzTWF0Y2gob2JqZWN0LCBzb3VyY2UsIG1hdGNoRGF0YSwgY3VzdG9taXplcikge1xuICB2YXIgaW5kZXggPSBtYXRjaERhdGEubGVuZ3RoLFxuICAgICAgbGVuZ3RoID0gaW5kZXgsXG4gICAgICBub0N1c3RvbWl6ZXIgPSAhY3VzdG9taXplcjtcblxuICBpZiAob2JqZWN0ID09IG51bGwpIHtcbiAgICByZXR1cm4gIWxlbmd0aDtcbiAgfVxuICBvYmplY3QgPSBPYmplY3Qob2JqZWN0KTtcbiAgd2hpbGUgKGluZGV4LS0pIHtcbiAgICB2YXIgZGF0YSA9IG1hdGNoRGF0YVtpbmRleF07XG4gICAgaWYgKChub0N1c3RvbWl6ZXIgJiYgZGF0YVsyXSlcbiAgICAgICAgICA/IGRhdGFbMV0gIT09IG9iamVjdFtkYXRhWzBdXVxuICAgICAgICAgIDogIShkYXRhWzBdIGluIG9iamVjdClcbiAgICAgICAgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgZGF0YSA9IG1hdGNoRGF0YVtpbmRleF07XG4gICAgdmFyIGtleSA9IGRhdGFbMF0sXG4gICAgICAgIG9ialZhbHVlID0gb2JqZWN0W2tleV0sXG4gICAgICAgIHNyY1ZhbHVlID0gZGF0YVsxXTtcblxuICAgIGlmIChub0N1c3RvbWl6ZXIgJiYgZGF0YVsyXSkge1xuICAgICAgaWYgKG9ialZhbHVlID09PSB1bmRlZmluZWQgJiYgIShrZXkgaW4gb2JqZWN0KSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBzdGFjayA9IG5ldyBTdGFjaztcbiAgICAgIGlmIChjdXN0b21pemVyKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBjdXN0b21pemVyKG9ialZhbHVlLCBzcmNWYWx1ZSwga2V5LCBvYmplY3QsIHNvdXJjZSwgc3RhY2spO1xuICAgICAgfVxuICAgICAgaWYgKCEocmVzdWx0ID09PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gYmFzZUlzRXF1YWwoc3JjVmFsdWUsIG9ialZhbHVlLCBDT01QQVJFX1BBUlRJQUxfRkxBRyB8IENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcsIGN1c3RvbWl6ZXIsIHN0YWNrKVxuICAgICAgICAgICAgOiByZXN1bHRcbiAgICAgICAgICApKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzTWF0Y2g7XG4iLCIvKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUNsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gW107XG4gIHRoaXMuc2l6ZSA9IDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlQ2xlYXI7XG4iLCJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBhcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzcGxpY2UgPSBhcnJheVByb3RvLnNwbGljZTtcblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlRGVsZXRlKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIGxhc3RJbmRleCA9IGRhdGEubGVuZ3RoIC0gMTtcbiAgaWYgKGluZGV4ID09IGxhc3RJbmRleCkge1xuICAgIGRhdGEucG9wKCk7XG4gIH0gZWxzZSB7XG4gICAgc3BsaWNlLmNhbGwoZGF0YSwgaW5kZXgsIDEpO1xuICB9XG4gIC0tdGhpcy5zaXplO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVEZWxldGU7XG4iLCJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgbGlzdCBjYWNoZSB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUdldChrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICByZXR1cm4gaW5kZXggPCAwID8gdW5kZWZpbmVkIDogZGF0YVtpbmRleF1bMV07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlR2V0O1xuIiwidmFyIGFzc29jSW5kZXhPZiA9IHJlcXVpcmUoJy4vX2Fzc29jSW5kZXhPZicpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGxpc3QgY2FjaGUgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlSGFzKGtleSkge1xuICByZXR1cm4gYXNzb2NJbmRleE9mKHRoaXMuX19kYXRhX18sIGtleSkgPiAtMTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVIYXM7XG4iLCJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKlxuICogU2V0cyB0aGUgbGlzdCBjYWNoZSBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbGlzdCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgKyt0aGlzLnNpemU7XG4gICAgZGF0YS5wdXNoKFtrZXksIHZhbHVlXSk7XG4gIH0gZWxzZSB7XG4gICAgZGF0YVtpbmRleF1bMV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVTZXQ7XG4iLCJ2YXIgTGlzdENhY2hlID0gcmVxdWlyZSgnLi9fTGlzdENhY2hlJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgc3RhY2suXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqL1xuZnVuY3Rpb24gc3RhY2tDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IG5ldyBMaXN0Q2FjaGU7XG4gIHRoaXMuc2l6ZSA9IDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tDbGVhcjtcbiIsIi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIHN0YWNrLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrRGVsZXRlKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICByZXN1bHQgPSBkYXRhWydkZWxldGUnXShrZXkpO1xuXG4gIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdGFja0RlbGV0ZTtcbiIsIi8qKlxuICogR2V0cyB0aGUgc3RhY2sgdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrR2V0KGtleSkge1xuICByZXR1cm4gdGhpcy5fX2RhdGFfXy5nZXQoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdGFja0dldDtcbiIsIi8qKlxuICogQ2hlY2tzIGlmIGEgc3RhY2sgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzdGFja0hhcyhrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uaGFzKGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tIYXM7XG4iLCJ2YXIgTGlzdENhY2hlID0gcmVxdWlyZSgnLi9fTGlzdENhY2hlJyksXG4gICAgTWFwID0gcmVxdWlyZSgnLi9fTWFwJyksXG4gICAgTWFwQ2FjaGUgPSByZXF1aXJlKCcuL19NYXBDYWNoZScpO1xuXG4vKiogVXNlZCBhcyB0aGUgc2l6ZSB0byBlbmFibGUgbGFyZ2UgYXJyYXkgb3B0aW1pemF0aW9ucy4gKi9cbnZhciBMQVJHRV9BUlJBWV9TSVpFID0gMjAwO1xuXG4vKipcbiAqIFNldHMgdGhlIHN0YWNrIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIHN0YWNrIGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBzdGFja1NldChrZXksIHZhbHVlKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgaWYgKGRhdGEgaW5zdGFuY2VvZiBMaXN0Q2FjaGUpIHtcbiAgICB2YXIgcGFpcnMgPSBkYXRhLl9fZGF0YV9fO1xuICAgIGlmICghTWFwIHx8IChwYWlycy5sZW5ndGggPCBMQVJHRV9BUlJBWV9TSVpFIC0gMSkpIHtcbiAgICAgIHBhaXJzLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgICAgIHRoaXMuc2l6ZSA9ICsrZGF0YS5zaXplO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRhdGEgPSB0aGlzLl9fZGF0YV9fID0gbmV3IE1hcENhY2hlKHBhaXJzKTtcbiAgfVxuICBkYXRhLnNldChrZXksIHZhbHVlKTtcbiAgdGhpcy5zaXplID0gZGF0YS5zaXplO1xuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdGFja1NldDtcbiIsInZhciBpc0Z1bmN0aW9uID0gcmVxdWlyZSgnLi9pc0Z1bmN0aW9uJyksXG4gICAgaXNNYXNrZWQgPSByZXF1aXJlKCcuL19pc01hc2tlZCcpLFxuICAgIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpLFxuICAgIHRvU291cmNlID0gcmVxdWlyZSgnLi9fdG9Tb3VyY2UnKTtcblxuLyoqXG4gKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgXG4gKiBbc3ludGF4IGNoYXJhY3RlcnNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXBhdHRlcm5zKS5cbiAqL1xudmFyIHJlUmVnRXhwQ2hhciA9IC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGhvc3QgY29uc3RydWN0b3JzIChTYWZhcmkpLiAqL1xudmFyIHJlSXNIb3N0Q3RvciA9IC9eXFxbb2JqZWN0IC4rP0NvbnN0cnVjdG9yXFxdJC87XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGUsXG4gICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKiogVXNlZCB0byBkZXRlY3QgaWYgYSBtZXRob2QgaXMgbmF0aXZlLiAqL1xudmFyIHJlSXNOYXRpdmUgPSBSZWdFeHAoJ14nICtcbiAgZnVuY1RvU3RyaW5nLmNhbGwoaGFzT3duUHJvcGVydHkpLnJlcGxhY2UocmVSZWdFeHBDaGFyLCAnXFxcXCQmJylcbiAgLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFxcXFwoKXwgZm9yIC4rPyg/PVxcXFxcXF0pL2csICckMS4qPycpICsgJyQnXG4pO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTmF0aXZlYCB3aXRob3V0IGJhZCBzaGltIGNoZWNrcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG5hdGl2ZSBmdW5jdGlvbixcbiAqICBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc05hdGl2ZSh2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSB8fCBpc01hc2tlZCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHBhdHRlcm4gPSBpc0Z1bmN0aW9uKHZhbHVlKSA/IHJlSXNOYXRpdmUgOiByZUlzSG9zdEN0b3I7XG4gIHJldHVybiBwYXR0ZXJuLnRlc3QodG9Tb3VyY2UodmFsdWUpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNOYXRpdmU7XG4iLCJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VHZXRUYWdgIHdoaWNoIGlnbm9yZXMgYFN5bWJvbC50b1N0cmluZ1RhZ2AgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHJhdyBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBnZXRSYXdUYWcodmFsdWUpIHtcbiAgdmFyIGlzT3duID0gaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgc3ltVG9TdHJpbmdUYWcpLFxuICAgICAgdGFnID0gdmFsdWVbc3ltVG9TdHJpbmdUYWddO1xuXG4gIHRyeSB7XG4gICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdW5kZWZpbmVkO1xuICAgIHZhciB1bm1hc2tlZCA9IHRydWU7XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbiAgdmFyIHJlc3VsdCA9IG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICBpZiAodW5tYXNrZWQpIHtcbiAgICBpZiAoaXNPd24pIHtcbiAgICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHRhZztcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRSYXdUYWc7XG4iLCIvKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgbmF0aXZlT2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nIHVzaW5nIGBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvYmplY3RUb1N0cmluZztcbiIsInZhciBjb3JlSnNEYXRhID0gcmVxdWlyZSgnLi9fY29yZUpzRGF0YScpO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgbWV0aG9kcyBtYXNxdWVyYWRpbmcgYXMgbmF0aXZlLiAqL1xudmFyIG1hc2tTcmNLZXkgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciB1aWQgPSAvW14uXSskLy5leGVjKGNvcmVKc0RhdGEgJiYgY29yZUpzRGF0YS5rZXlzICYmIGNvcmVKc0RhdGEua2V5cy5JRV9QUk9UTyB8fCAnJyk7XG4gIHJldHVybiB1aWQgPyAoJ1N5bWJvbChzcmMpXzEuJyArIHVpZCkgOiAnJztcbn0oKSk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGBmdW5jYCBoYXMgaXRzIHNvdXJjZSBtYXNrZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBmdW5jYCBpcyBtYXNrZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNNYXNrZWQoZnVuYykge1xuICByZXR1cm4gISFtYXNrU3JjS2V5ICYmIChtYXNrU3JjS2V5IGluIGZ1bmMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTWFza2VkO1xuIiwidmFyIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBvdmVycmVhY2hpbmcgY29yZS1qcyBzaGltcy4gKi9cbnZhciBjb3JlSnNEYXRhID0gcm9vdFsnX19jb3JlLWpzX3NoYXJlZF9fJ107XG5cbm1vZHVsZS5leHBvcnRzID0gY29yZUpzRGF0YTtcbiIsIi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcHJvcGVydHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGdldFZhbHVlKG9iamVjdCwga2V5KSB7XG4gIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFZhbHVlO1xuIiwidmFyIEhhc2ggPSByZXF1aXJlKCcuL19IYXNoJyksXG4gICAgTGlzdENhY2hlID0gcmVxdWlyZSgnLi9fTGlzdENhY2hlJyksXG4gICAgTWFwID0gcmVxdWlyZSgnLi9fTWFwJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbWFwLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBjbGVhclxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuc2l6ZSA9IDA7XG4gIHRoaXMuX19kYXRhX18gPSB7XG4gICAgJ2hhc2gnOiBuZXcgSGFzaCxcbiAgICAnbWFwJzogbmV3IChNYXAgfHwgTGlzdENhY2hlKSxcbiAgICAnc3RyaW5nJzogbmV3IEhhc2hcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZUNsZWFyO1xuIiwidmFyIGhhc2hDbGVhciA9IHJlcXVpcmUoJy4vX2hhc2hDbGVhcicpLFxuICAgIGhhc2hEZWxldGUgPSByZXF1aXJlKCcuL19oYXNoRGVsZXRlJyksXG4gICAgaGFzaEdldCA9IHJlcXVpcmUoJy4vX2hhc2hHZXQnKSxcbiAgICBoYXNoSGFzID0gcmVxdWlyZSgnLi9faGFzaEhhcycpLFxuICAgIGhhc2hTZXQgPSByZXF1aXJlKCcuL19oYXNoU2V0Jyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhhc2ggb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBIYXNoKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGg7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYEhhc2hgLlxuSGFzaC5wcm90b3R5cGUuY2xlYXIgPSBoYXNoQ2xlYXI7XG5IYXNoLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBoYXNoRGVsZXRlO1xuSGFzaC5wcm90b3R5cGUuZ2V0ID0gaGFzaEdldDtcbkhhc2gucHJvdG90eXBlLmhhcyA9IGhhc2hIYXM7XG5IYXNoLnByb3RvdHlwZS5zZXQgPSBoYXNoU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEhhc2g7XG4iLCJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKi9cbmZ1bmN0aW9uIGhhc2hDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IG5hdGl2ZUNyZWF0ZSA/IG5hdGl2ZUNyZWF0ZShudWxsKSA6IHt9O1xuICB0aGlzLnNpemUgPSAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hDbGVhcjtcbiIsIi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGhhc2guXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7T2JqZWN0fSBoYXNoIFRoZSBoYXNoIHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNoRGVsZXRlKGtleSkge1xuICB2YXIgcmVzdWx0ID0gdGhpcy5oYXMoa2V5KSAmJiBkZWxldGUgdGhpcy5fX2RhdGFfX1trZXldO1xuICB0aGlzLnNpemUgLT0gcmVzdWx0ID8gMSA6IDA7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaERlbGV0ZTtcbiIsInZhciBuYXRpdmVDcmVhdGUgPSByZXF1aXJlKCcuL19uYXRpdmVDcmVhdGUnKTtcblxuLyoqIFVzZWQgdG8gc3RhbmQtaW4gZm9yIGB1bmRlZmluZWRgIGhhc2ggdmFsdWVzLiAqL1xudmFyIEhBU0hfVU5ERUZJTkVEID0gJ19fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18nO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIEdldHMgdGhlIGhhc2ggdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gaGFzaEdldChrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICBpZiAobmF0aXZlQ3JlYXRlKSB7XG4gICAgdmFyIHJlc3VsdCA9IGRhdGFba2V5XTtcbiAgICByZXR1cm4gcmVzdWx0ID09PSBIQVNIX1VOREVGSU5FRCA/IHVuZGVmaW5lZCA6IHJlc3VsdDtcbiAgfVxuICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpID8gZGF0YVtrZXldIDogdW5kZWZpbmVkO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hHZXQ7XG4iLCJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgaGFzaCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaEhhcyhrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICByZXR1cm4gbmF0aXZlQ3JlYXRlID8gKGRhdGFba2V5XSAhPT0gdW5kZWZpbmVkKSA6IGhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoSGFzO1xuIiwidmFyIG5hdGl2ZUNyZWF0ZSA9IHJlcXVpcmUoJy4vX25hdGl2ZUNyZWF0ZScpO1xuXG4vKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovXG52YXIgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyc7XG5cbi8qKlxuICogU2V0cyB0aGUgaGFzaCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGhhc2ggaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGhhc2hTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIHRoaXMuc2l6ZSArPSB0aGlzLmhhcyhrZXkpID8gMCA6IDE7XG4gIGRhdGFba2V5XSA9IChuYXRpdmVDcmVhdGUgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCkgPyBIQVNIX1VOREVGSU5FRCA6IHZhbHVlO1xuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoU2V0O1xuIiwidmFyIGdldE1hcERhdGEgPSByZXF1aXJlKCcuL19nZXRNYXBEYXRhJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIG1hcC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZURlbGV0ZShrZXkpIHtcbiAgdmFyIHJlc3VsdCA9IGdldE1hcERhdGEodGhpcywga2V5KVsnZGVsZXRlJ10oa2V5KTtcbiAgdGhpcy5zaXplIC09IHJlc3VsdCA/IDEgOiAwO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlRGVsZXRlO1xuIiwiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSBmb3IgdXNlIGFzIHVuaXF1ZSBvYmplY3Qga2V5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIHN1aXRhYmxlLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzS2V5YWJsZSh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuICh0eXBlID09ICdzdHJpbmcnIHx8IHR5cGUgPT0gJ251bWJlcicgfHwgdHlwZSA9PSAnc3ltYm9sJyB8fCB0eXBlID09ICdib29sZWFuJylcbiAgICA/ICh2YWx1ZSAhPT0gJ19fcHJvdG9fXycpXG4gICAgOiAodmFsdWUgPT09IG51bGwpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzS2V5YWJsZTtcbiIsInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIEdldHMgdGhlIG1hcCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVHZXQoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuZ2V0KGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVHZXQ7XG4iLCJ2YXIgZ2V0TWFwRGF0YSA9IHJlcXVpcmUoJy4vX2dldE1hcERhdGEnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYSBtYXAgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUhhcyhrZXkpIHtcbiAgcmV0dXJuIGdldE1hcERhdGEodGhpcywga2V5KS5oYXMoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZUhhcztcbiIsInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIFNldHMgdGhlIG1hcCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBtYXAgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSksXG4gICAgICBzaXplID0gZGF0YS5zaXplO1xuXG4gIGRhdGEuc2V0KGtleSwgdmFsdWUpO1xuICB0aGlzLnNpemUgKz0gZGF0YS5zaXplID09IHNpemUgPyAwIDogMTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVTZXQ7XG4iLCJ2YXIgU3RhY2sgPSByZXF1aXJlKCcuL19TdGFjaycpLFxuICAgIGVxdWFsQXJyYXlzID0gcmVxdWlyZSgnLi9fZXF1YWxBcnJheXMnKSxcbiAgICBlcXVhbEJ5VGFnID0gcmVxdWlyZSgnLi9fZXF1YWxCeVRhZycpLFxuICAgIGVxdWFsT2JqZWN0cyA9IHJlcXVpcmUoJy4vX2VxdWFsT2JqZWN0cycpLFxuICAgIGdldFRhZyA9IHJlcXVpcmUoJy4vX2dldFRhZycpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBpc0J1ZmZlciA9IHJlcXVpcmUoJy4vaXNCdWZmZXInKSxcbiAgICBpc1R5cGVkQXJyYXkgPSByZXF1aXJlKCcuL2lzVHlwZWRBcnJheScpO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciB2YWx1ZSBjb21wYXJpc29ucy4gKi9cbnZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDE7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBhcmdzVGFnID0gJ1tvYmplY3QgQXJndW1lbnRzXScsXG4gICAgYXJyYXlUYWcgPSAnW29iamVjdCBBcnJheV0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxgIGZvciBhcnJheXMgYW5kIG9iamVjdHMgd2hpY2ggcGVyZm9ybXNcbiAqIGRlZXAgY29tcGFyaXNvbnMgYW5kIHRyYWNrcyB0cmF2ZXJzZWQgb2JqZWN0cyBlbmFibGluZyBvYmplY3RzIHdpdGggY2lyY3VsYXJcbiAqIHJlZmVyZW5jZXMgdG8gYmUgY29tcGFyZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtPYmplY3R9IFtzdGFja10gVHJhY2tzIHRyYXZlcnNlZCBgb2JqZWN0YCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBvYmplY3RzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc0VxdWFsRGVlcChvYmplY3QsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7XG4gIHZhciBvYmpJc0FyciA9IGlzQXJyYXkob2JqZWN0KSxcbiAgICAgIG90aElzQXJyID0gaXNBcnJheShvdGhlciksXG4gICAgICBvYmpUYWcgPSBvYmpJc0FyciA/IGFycmF5VGFnIDogZ2V0VGFnKG9iamVjdCksXG4gICAgICBvdGhUYWcgPSBvdGhJc0FyciA/IGFycmF5VGFnIDogZ2V0VGFnKG90aGVyKTtcblxuICBvYmpUYWcgPSBvYmpUYWcgPT0gYXJnc1RhZyA/IG9iamVjdFRhZyA6IG9ialRhZztcbiAgb3RoVGFnID0gb3RoVGFnID09IGFyZ3NUYWcgPyBvYmplY3RUYWcgOiBvdGhUYWc7XG5cbiAgdmFyIG9iaklzT2JqID0gb2JqVGFnID09IG9iamVjdFRhZyxcbiAgICAgIG90aElzT2JqID0gb3RoVGFnID09IG9iamVjdFRhZyxcbiAgICAgIGlzU2FtZVRhZyA9IG9ialRhZyA9PSBvdGhUYWc7XG5cbiAgaWYgKGlzU2FtZVRhZyAmJiBpc0J1ZmZlcihvYmplY3QpKSB7XG4gICAgaWYgKCFpc0J1ZmZlcihvdGhlcikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgb2JqSXNBcnIgPSB0cnVlO1xuICAgIG9iaklzT2JqID0gZmFsc2U7XG4gIH1cbiAgaWYgKGlzU2FtZVRhZyAmJiAhb2JqSXNPYmopIHtcbiAgICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICAgIHJldHVybiAob2JqSXNBcnIgfHwgaXNUeXBlZEFycmF5KG9iamVjdCkpXG4gICAgICA/IGVxdWFsQXJyYXlzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spXG4gICAgICA6IGVxdWFsQnlUYWcob2JqZWN0LCBvdGhlciwgb2JqVGFnLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKTtcbiAgfVxuICBpZiAoIShiaXRtYXNrICYgQ09NUEFSRV9QQVJUSUFMX0ZMQUcpKSB7XG4gICAgdmFyIG9iaklzV3JhcHBlZCA9IG9iaklzT2JqICYmIGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCAnX193cmFwcGVkX18nKSxcbiAgICAgICAgb3RoSXNXcmFwcGVkID0gb3RoSXNPYmogJiYgaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwgJ19fd3JhcHBlZF9fJyk7XG5cbiAgICBpZiAob2JqSXNXcmFwcGVkIHx8IG90aElzV3JhcHBlZCkge1xuICAgICAgdmFyIG9ialVud3JhcHBlZCA9IG9iaklzV3JhcHBlZCA/IG9iamVjdC52YWx1ZSgpIDogb2JqZWN0LFxuICAgICAgICAgIG90aFVud3JhcHBlZCA9IG90aElzV3JhcHBlZCA/IG90aGVyLnZhbHVlKCkgOiBvdGhlcjtcblxuICAgICAgc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKTtcbiAgICAgIHJldHVybiBlcXVhbEZ1bmMob2JqVW53cmFwcGVkLCBvdGhVbndyYXBwZWQsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKTtcbiAgICB9XG4gIH1cbiAgaWYgKCFpc1NhbWVUYWcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKTtcbiAgcmV0dXJuIGVxdWFsT2JqZWN0cyhvYmplY3QsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNFcXVhbERlZXA7XG4iLCJ2YXIgTWFwQ2FjaGUgPSByZXF1aXJlKCcuL19NYXBDYWNoZScpLFxuICAgIHNldENhY2hlQWRkID0gcmVxdWlyZSgnLi9fc2V0Q2FjaGVBZGQnKSxcbiAgICBzZXRDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX3NldENhY2hlSGFzJyk7XG5cbi8qKlxuICpcbiAqIENyZWF0ZXMgYW4gYXJyYXkgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIHVuaXF1ZSB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW3ZhbHVlc10gVGhlIHZhbHVlcyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gU2V0Q2FjaGUodmFsdWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gdmFsdWVzID09IG51bGwgPyAwIDogdmFsdWVzLmxlbmd0aDtcblxuICB0aGlzLl9fZGF0YV9fID0gbmV3IE1hcENhY2hlO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHRoaXMuYWRkKHZhbHVlc1tpbmRleF0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBTZXRDYWNoZWAuXG5TZXRDYWNoZS5wcm90b3R5cGUuYWRkID0gU2V0Q2FjaGUucHJvdG90eXBlLnB1c2ggPSBzZXRDYWNoZUFkZDtcblNldENhY2hlLnByb3RvdHlwZS5oYXMgPSBzZXRDYWNoZUhhcztcblxubW9kdWxlLmV4cG9ydHMgPSBTZXRDYWNoZTtcbiIsIi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cbnZhciBIQVNIX1VOREVGSU5FRCA9ICdfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fJztcblxuLyoqXG4gKiBBZGRzIGB2YWx1ZWAgdG8gdGhlIGFycmF5IGNhY2hlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBhZGRcbiAqIEBtZW1iZXJPZiBTZXRDYWNoZVxuICogQGFsaWFzIHB1c2hcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNhY2hlLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIHNldENhY2hlQWRkKHZhbHVlKSB7XG4gIHRoaXMuX19kYXRhX18uc2V0KHZhbHVlLCBIQVNIX1VOREVGSU5FRCk7XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldENhY2hlQWRkO1xuIiwiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBpbiB0aGUgYXJyYXkgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIFNldENhY2hlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZWFyY2ggZm9yLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBmb3VuZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzZXRDYWNoZUhhcyh2YWx1ZSkge1xuICByZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXModmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldENhY2hlSGFzO1xuIiwiLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8uc29tZWAgZm9yIGFycmF5cyB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlXG4gKiBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBbYXJyYXldIFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBwcmVkaWNhdGUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbnkgZWxlbWVudCBwYXNzZXMgdGhlIHByZWRpY2F0ZSBjaGVjayxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGFycmF5U29tZShhcnJheSwgcHJlZGljYXRlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBpZiAocHJlZGljYXRlKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhcnJheVNvbWU7XG4iLCIvKipcbiAqIENoZWNrcyBpZiBhIGBjYWNoZWAgdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IGNhY2hlIFRoZSBjYWNoZSB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBjYWNoZUhhcyhjYWNoZSwga2V5KSB7XG4gIHJldHVybiBjYWNoZS5oYXMoa2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjYWNoZUhhcztcbiIsInZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19TeW1ib2wnKSxcbiAgICBVaW50OEFycmF5ID0gcmVxdWlyZSgnLi9fVWludDhBcnJheScpLFxuICAgIGVxID0gcmVxdWlyZSgnLi9lcScpLFxuICAgIGVxdWFsQXJyYXlzID0gcmVxdWlyZSgnLi9fZXF1YWxBcnJheXMnKSxcbiAgICBtYXBUb0FycmF5ID0gcmVxdWlyZSgnLi9fbWFwVG9BcnJheScpLFxuICAgIHNldFRvQXJyYXkgPSByZXF1aXJlKCcuL19zZXRUb0FycmF5Jyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMSxcbiAgICBDT01QQVJFX1VOT1JERVJFRF9GTEFHID0gMjtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGJvb2xUYWcgPSAnW29iamVjdCBCb29sZWFuXScsXG4gICAgZGF0ZVRhZyA9ICdbb2JqZWN0IERhdGVdJyxcbiAgICBlcnJvclRhZyA9ICdbb2JqZWN0IEVycm9yXScsXG4gICAgbWFwVGFnID0gJ1tvYmplY3QgTWFwXScsXG4gICAgbnVtYmVyVGFnID0gJ1tvYmplY3QgTnVtYmVyXScsXG4gICAgcmVnZXhwVGFnID0gJ1tvYmplY3QgUmVnRXhwXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgc3RyaW5nVGFnID0gJ1tvYmplY3QgU3RyaW5nXScsXG4gICAgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXSc7XG5cbnZhciBhcnJheUJ1ZmZlclRhZyA9ICdbb2JqZWN0IEFycmF5QnVmZmVyXScsXG4gICAgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nO1xuXG4vKiogVXNlZCB0byBjb252ZXJ0IHN5bWJvbHMgdG8gcHJpbWl0aXZlcyBhbmQgc3RyaW5ncy4gKi9cbnZhciBzeW1ib2xQcm90byA9IFN5bWJvbCA/IFN5bWJvbC5wcm90b3R5cGUgOiB1bmRlZmluZWQsXG4gICAgc3ltYm9sVmFsdWVPZiA9IHN5bWJvbFByb3RvID8gc3ltYm9sUHJvdG8udmFsdWVPZiA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsRGVlcGAgZm9yIGNvbXBhcmluZyBvYmplY3RzIG9mXG4gKiB0aGUgc2FtZSBgdG9TdHJpbmdUYWdgLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIGZ1bmN0aW9uIG9ubHkgc3VwcG9ydHMgY29tcGFyaW5nIHZhbHVlcyB3aXRoIHRhZ3Mgb2ZcbiAqIGBCb29sZWFuYCwgYERhdGVgLCBgRXJyb3JgLCBgTnVtYmVyYCwgYFJlZ0V4cGAsIG9yIGBTdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvdGhlciBUaGUgb3RoZXIgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFnIFRoZSBgdG9TdHJpbmdUYWdgIG9mIHRoZSBvYmplY3RzIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gZXF1YWxCeVRhZyhvYmplY3QsIG90aGVyLCB0YWcsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgc3dpdGNoICh0YWcpIHtcbiAgICBjYXNlIGRhdGFWaWV3VGFnOlxuICAgICAgaWYgKChvYmplY3QuYnl0ZUxlbmd0aCAhPSBvdGhlci5ieXRlTGVuZ3RoKSB8fFxuICAgICAgICAgIChvYmplY3QuYnl0ZU9mZnNldCAhPSBvdGhlci5ieXRlT2Zmc2V0KSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBvYmplY3QgPSBvYmplY3QuYnVmZmVyO1xuICAgICAgb3RoZXIgPSBvdGhlci5idWZmZXI7XG5cbiAgICBjYXNlIGFycmF5QnVmZmVyVGFnOlxuICAgICAgaWYgKChvYmplY3QuYnl0ZUxlbmd0aCAhPSBvdGhlci5ieXRlTGVuZ3RoKSB8fFxuICAgICAgICAgICFlcXVhbEZ1bmMobmV3IFVpbnQ4QXJyYXkob2JqZWN0KSwgbmV3IFVpbnQ4QXJyYXkob3RoZXIpKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcblxuICAgIGNhc2UgYm9vbFRhZzpcbiAgICBjYXNlIGRhdGVUYWc6XG4gICAgY2FzZSBudW1iZXJUYWc6XG4gICAgICAvLyBDb2VyY2UgYm9vbGVhbnMgdG8gYDFgIG9yIGAwYCBhbmQgZGF0ZXMgdG8gbWlsbGlzZWNvbmRzLlxuICAgICAgLy8gSW52YWxpZCBkYXRlcyBhcmUgY29lcmNlZCB0byBgTmFOYC5cbiAgICAgIHJldHVybiBlcSgrb2JqZWN0LCArb3RoZXIpO1xuXG4gICAgY2FzZSBlcnJvclRhZzpcbiAgICAgIHJldHVybiBvYmplY3QubmFtZSA9PSBvdGhlci5uYW1lICYmIG9iamVjdC5tZXNzYWdlID09IG90aGVyLm1lc3NhZ2U7XG5cbiAgICBjYXNlIHJlZ2V4cFRhZzpcbiAgICBjYXNlIHN0cmluZ1RhZzpcbiAgICAgIC8vIENvZXJjZSByZWdleGVzIHRvIHN0cmluZ3MgYW5kIHRyZWF0IHN0cmluZ3MsIHByaW1pdGl2ZXMgYW5kIG9iamVjdHMsXG4gICAgICAvLyBhcyBlcXVhbC4gU2VlIGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1yZWdleHAucHJvdG90eXBlLnRvc3RyaW5nXG4gICAgICAvLyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgICAgcmV0dXJuIG9iamVjdCA9PSAob3RoZXIgKyAnJyk7XG5cbiAgICBjYXNlIG1hcFRhZzpcbiAgICAgIHZhciBjb252ZXJ0ID0gbWFwVG9BcnJheTtcblxuICAgIGNhc2Ugc2V0VGFnOlxuICAgICAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRztcbiAgICAgIGNvbnZlcnQgfHwgKGNvbnZlcnQgPSBzZXRUb0FycmF5KTtcblxuICAgICAgaWYgKG9iamVjdC5zaXplICE9IG90aGVyLnNpemUgJiYgIWlzUGFydGlhbCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICAvLyBBc3N1bWUgY3ljbGljIHZhbHVlcyBhcmUgZXF1YWwuXG4gICAgICB2YXIgc3RhY2tlZCA9IHN0YWNrLmdldChvYmplY3QpO1xuICAgICAgaWYgKHN0YWNrZWQpIHtcbiAgICAgICAgcmV0dXJuIHN0YWNrZWQgPT0gb3RoZXI7XG4gICAgICB9XG4gICAgICBiaXRtYXNrIHw9IENPTVBBUkVfVU5PUkRFUkVEX0ZMQUc7XG5cbiAgICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgb2JqZWN0cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgICAgc3RhY2suc2V0KG9iamVjdCwgb3RoZXIpO1xuICAgICAgdmFyIHJlc3VsdCA9IGVxdWFsQXJyYXlzKGNvbnZlcnQob2JqZWN0KSwgY29udmVydChvdGhlciksIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spO1xuICAgICAgc3RhY2tbJ2RlbGV0ZSddKG9iamVjdCk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuXG4gICAgY2FzZSBzeW1ib2xUYWc6XG4gICAgICBpZiAoc3ltYm9sVmFsdWVPZikge1xuICAgICAgICByZXR1cm4gc3ltYm9sVmFsdWVPZi5jYWxsKG9iamVjdCkgPT0gc3ltYm9sVmFsdWVPZi5jYWxsKG90aGVyKTtcbiAgICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXF1YWxCeVRhZztcbiIsInZhciByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBVaW50OEFycmF5ID0gcm9vdC5VaW50OEFycmF5O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVpbnQ4QXJyYXk7XG4iLCIvKipcbiAqIENvbnZlcnRzIGBtYXBgIHRvIGl0cyBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBtYXAgVGhlIG1hcCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBrZXktdmFsdWUgcGFpcnMuXG4gKi9cbmZ1bmN0aW9uIG1hcFRvQXJyYXkobWFwKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobWFwLnNpemUpO1xuXG4gIG1hcC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICByZXN1bHRbKytpbmRleF0gPSBba2V5LCB2YWx1ZV07XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcFRvQXJyYXk7XG4iLCIvKipcbiAqIENvbnZlcnRzIGBzZXRgIHRvIGFuIGFycmF5IG9mIGl0cyB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzZXQgVGhlIHNldCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSB2YWx1ZXMuXG4gKi9cbmZ1bmN0aW9uIHNldFRvQXJyYXkoc2V0KSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkoc2V0LnNpemUpO1xuXG4gIHNldC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmVzdWx0WysraW5kZXhdID0gdmFsdWU7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldFRvQXJyYXk7XG4iLCJ2YXIgZ2V0QWxsS2V5cyA9IHJlcXVpcmUoJy4vX2dldEFsbEtleXMnKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3Igb2JqZWN0cyB3aXRoIHN1cHBvcnQgZm9yXG4gKiBwYXJ0aWFsIGRlZXAgY29tcGFyaXNvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYG9iamVjdGAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBlcXVhbE9iamVjdHMob2JqZWN0LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICB2YXIgaXNQYXJ0aWFsID0gYml0bWFzayAmIENPTVBBUkVfUEFSVElBTF9GTEFHLFxuICAgICAgb2JqUHJvcHMgPSBnZXRBbGxLZXlzKG9iamVjdCksXG4gICAgICBvYmpMZW5ndGggPSBvYmpQcm9wcy5sZW5ndGgsXG4gICAgICBvdGhQcm9wcyA9IGdldEFsbEtleXMob3RoZXIpLFxuICAgICAgb3RoTGVuZ3RoID0gb3RoUHJvcHMubGVuZ3RoO1xuXG4gIGlmIChvYmpMZW5ndGggIT0gb3RoTGVuZ3RoICYmICFpc1BhcnRpYWwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIGluZGV4ID0gb2JqTGVuZ3RoO1xuICB3aGlsZSAoaW5kZXgtLSkge1xuICAgIHZhciBrZXkgPSBvYmpQcm9wc1tpbmRleF07XG4gICAgaWYgKCEoaXNQYXJ0aWFsID8ga2V5IGluIG90aGVyIDogaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwga2V5KSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgLy8gQ2hlY2sgdGhhdCBjeWNsaWMgdmFsdWVzIGFyZSBlcXVhbC5cbiAgdmFyIG9ialN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KTtcbiAgdmFyIG90aFN0YWNrZWQgPSBzdGFjay5nZXQob3RoZXIpO1xuICBpZiAob2JqU3RhY2tlZCAmJiBvdGhTdGFja2VkKSB7XG4gICAgcmV0dXJuIG9ialN0YWNrZWQgPT0gb3RoZXIgJiYgb3RoU3RhY2tlZCA9PSBvYmplY3Q7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IHRydWU7XG4gIHN0YWNrLnNldChvYmplY3QsIG90aGVyKTtcbiAgc3RhY2suc2V0KG90aGVyLCBvYmplY3QpO1xuXG4gIHZhciBza2lwQ3RvciA9IGlzUGFydGlhbDtcbiAgd2hpbGUgKCsraW5kZXggPCBvYmpMZW5ndGgpIHtcbiAgICBrZXkgPSBvYmpQcm9wc1tpbmRleF07XG4gICAgdmFyIG9ialZhbHVlID0gb2JqZWN0W2tleV0sXG4gICAgICAgIG90aFZhbHVlID0gb3RoZXJba2V5XTtcblxuICAgIGlmIChjdXN0b21pemVyKSB7XG4gICAgICB2YXIgY29tcGFyZWQgPSBpc1BhcnRpYWxcbiAgICAgICAgPyBjdXN0b21pemVyKG90aFZhbHVlLCBvYmpWYWx1ZSwga2V5LCBvdGhlciwgb2JqZWN0LCBzdGFjaylcbiAgICAgICAgOiBjdXN0b21pemVyKG9ialZhbHVlLCBvdGhWYWx1ZSwga2V5LCBvYmplY3QsIG90aGVyLCBzdGFjayk7XG4gICAgfVxuICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgb2JqZWN0cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIGlmICghKGNvbXBhcmVkID09PSB1bmRlZmluZWRcbiAgICAgICAgICA/IChvYmpWYWx1ZSA9PT0gb3RoVmFsdWUgfHwgZXF1YWxGdW5jKG9ialZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spKVxuICAgICAgICAgIDogY29tcGFyZWRcbiAgICAgICAgKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgc2tpcEN0b3IgfHwgKHNraXBDdG9yID0ga2V5ID09ICdjb25zdHJ1Y3RvcicpO1xuICB9XG4gIGlmIChyZXN1bHQgJiYgIXNraXBDdG9yKSB7XG4gICAgdmFyIG9iakN0b3IgPSBvYmplY3QuY29uc3RydWN0b3IsXG4gICAgICAgIG90aEN0b3IgPSBvdGhlci5jb25zdHJ1Y3RvcjtcblxuICAgIC8vIE5vbiBgT2JqZWN0YCBvYmplY3QgaW5zdGFuY2VzIHdpdGggZGlmZmVyZW50IGNvbnN0cnVjdG9ycyBhcmUgbm90IGVxdWFsLlxuICAgIGlmIChvYmpDdG9yICE9IG90aEN0b3IgJiZcbiAgICAgICAgKCdjb25zdHJ1Y3RvcicgaW4gb2JqZWN0ICYmICdjb25zdHJ1Y3RvcicgaW4gb3RoZXIpICYmXG4gICAgICAgICEodHlwZW9mIG9iakN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBvYmpDdG9yIGluc3RhbmNlb2Ygb2JqQ3RvciAmJlxuICAgICAgICAgIHR5cGVvZiBvdGhDdG9yID09ICdmdW5jdGlvbicgJiYgb3RoQ3RvciBpbnN0YW5jZW9mIG90aEN0b3IpKSB7XG4gICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgc3RhY2tbJ2RlbGV0ZSddKG9iamVjdCk7XG4gIHN0YWNrWydkZWxldGUnXShvdGhlcik7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXF1YWxPYmplY3RzO1xuIiwidmFyIGJhc2VHZXRBbGxLZXlzID0gcmVxdWlyZSgnLi9fYmFzZUdldEFsbEtleXMnKSxcbiAgICBnZXRTeW1ib2xzID0gcmVxdWlyZSgnLi9fZ2V0U3ltYm9scycpLFxuICAgIGtleXMgPSByZXF1aXJlKCcuL2tleXMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIG93biBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzLlxuICovXG5mdW5jdGlvbiBnZXRBbGxLZXlzKG9iamVjdCkge1xuICByZXR1cm4gYmFzZUdldEFsbEtleXMob2JqZWN0LCBrZXlzLCBnZXRTeW1ib2xzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBbGxLZXlzO1xuIiwidmFyIGFycmF5UHVzaCA9IHJlcXVpcmUoJy4vX2FycmF5UHVzaCcpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0QWxsS2V5c2AgYW5kIGBnZXRBbGxLZXlzSW5gIHdoaWNoIHVzZXNcbiAqIGBrZXlzRnVuY2AgYW5kIGBzeW1ib2xzRnVuY2AgdG8gZ2V0IHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIGFuZFxuICogc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtGdW5jdGlvbn0ga2V5c0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUga2V5cyBvZiBgb2JqZWN0YC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHN5bWJvbHNGdW5jIFRoZSBmdW5jdGlvbiB0byBnZXQgdGhlIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0QWxsS2V5cyhvYmplY3QsIGtleXNGdW5jLCBzeW1ib2xzRnVuYykge1xuICB2YXIgcmVzdWx0ID0ga2V5c0Z1bmMob2JqZWN0KTtcbiAgcmV0dXJuIGlzQXJyYXkob2JqZWN0KSA/IHJlc3VsdCA6IGFycmF5UHVzaChyZXN1bHQsIHN5bWJvbHNGdW5jKG9iamVjdCkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VHZXRBbGxLZXlzO1xuIiwiLyoqXG4gKiBBcHBlbmRzIHRoZSBlbGVtZW50cyBvZiBgdmFsdWVzYCB0byBgYXJyYXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gbW9kaWZ5LlxuICogQHBhcmFtIHtBcnJheX0gdmFsdWVzIFRoZSB2YWx1ZXMgdG8gYXBwZW5kLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGBhcnJheWAuXG4gKi9cbmZ1bmN0aW9uIGFycmF5UHVzaChhcnJheSwgdmFsdWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIG9mZnNldCA9IGFycmF5Lmxlbmd0aDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGFycmF5W29mZnNldCArIGluZGV4XSA9IHZhbHVlc1tpbmRleF07XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5UHVzaDtcbiIsInZhciBhcnJheUZpbHRlciA9IHJlcXVpcmUoJy4vX2FycmF5RmlsdGVyJyksXG4gICAgc3R1YkFycmF5ID0gcmVxdWlyZSgnLi9zdHViQXJyYXknKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgcHJvcGVydHlJc0VudW1lcmFibGUgPSBvYmplY3RQcm90by5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUdldFN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdGhlIG93biBlbnVtZXJhYmxlIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2Ygc3ltYm9scy5cbiAqL1xudmFyIGdldFN5bWJvbHMgPSAhbmF0aXZlR2V0U3ltYm9scyA/IHN0dWJBcnJheSA6IGZ1bmN0aW9uKG9iamVjdCkge1xuICBpZiAob2JqZWN0ID09IG51bGwpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgb2JqZWN0ID0gT2JqZWN0KG9iamVjdCk7XG4gIHJldHVybiBhcnJheUZpbHRlcihuYXRpdmVHZXRTeW1ib2xzKG9iamVjdCksIGZ1bmN0aW9uKHN5bWJvbCkge1xuICAgIHJldHVybiBwcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKG9iamVjdCwgc3ltYm9sKTtcbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFN5bWJvbHM7XG4iLCIvKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5maWx0ZXJgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvclxuICogaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBmaWx0ZXJlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYXJyYXlGaWx0ZXIoYXJyYXksIHByZWRpY2F0ZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoLFxuICAgICAgcmVzSW5kZXggPSAwLFxuICAgICAgcmVzdWx0ID0gW107XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF07XG4gICAgaWYgKHByZWRpY2F0ZSh2YWx1ZSwgaW5kZXgsIGFycmF5KSkge1xuICAgICAgcmVzdWx0W3Jlc0luZGV4KytdID0gdmFsdWU7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlGaWx0ZXI7XG4iLCIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYSBuZXcgZW1wdHkgYXJyYXkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjEzLjBcbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBlbXB0eSBhcnJheS5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIGFycmF5cyA9IF8udGltZXMoMiwgXy5zdHViQXJyYXkpO1xuICpcbiAqIGNvbnNvbGUubG9nKGFycmF5cyk7XG4gKiAvLyA9PiBbW10sIFtdXVxuICpcbiAqIGNvbnNvbGUubG9nKGFycmF5c1swXSA9PT0gYXJyYXlzWzFdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIHN0dWJBcnJheSgpIHtcbiAgcmV0dXJuIFtdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0dWJBcnJheTtcbiIsInZhciBiYXNlVGltZXMgPSByZXF1aXJlKCcuL19iYXNlVGltZXMnKSxcbiAgICBpc0FyZ3VtZW50cyA9IHJlcXVpcmUoJy4vaXNBcmd1bWVudHMnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNCdWZmZXIgPSByZXF1aXJlKCcuL2lzQnVmZmVyJyksXG4gICAgaXNJbmRleCA9IHJlcXVpcmUoJy4vX2lzSW5kZXgnKSxcbiAgICBpc1R5cGVkQXJyYXkgPSByZXF1aXJlKCcuL2lzVHlwZWRBcnJheScpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdGhlIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgdGhlIGFycmF5LWxpa2UgYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IGluaGVyaXRlZCBTcGVjaWZ5IHJldHVybmluZyBpbmhlcml0ZWQgcHJvcGVydHkgbmFtZXMuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICovXG5mdW5jdGlvbiBhcnJheUxpa2VLZXlzKHZhbHVlLCBpbmhlcml0ZWQpIHtcbiAgdmFyIGlzQXJyID0gaXNBcnJheSh2YWx1ZSksXG4gICAgICBpc0FyZyA9ICFpc0FyciAmJiBpc0FyZ3VtZW50cyh2YWx1ZSksXG4gICAgICBpc0J1ZmYgPSAhaXNBcnIgJiYgIWlzQXJnICYmIGlzQnVmZmVyKHZhbHVlKSxcbiAgICAgIGlzVHlwZSA9ICFpc0FyciAmJiAhaXNBcmcgJiYgIWlzQnVmZiAmJiBpc1R5cGVkQXJyYXkodmFsdWUpLFxuICAgICAgc2tpcEluZGV4ZXMgPSBpc0FyciB8fCBpc0FyZyB8fCBpc0J1ZmYgfHwgaXNUeXBlLFxuICAgICAgcmVzdWx0ID0gc2tpcEluZGV4ZXMgPyBiYXNlVGltZXModmFsdWUubGVuZ3RoLCBTdHJpbmcpIDogW10sXG4gICAgICBsZW5ndGggPSByZXN1bHQubGVuZ3RoO1xuXG4gIGZvciAodmFyIGtleSBpbiB2YWx1ZSkge1xuICAgIGlmICgoaW5oZXJpdGVkIHx8IGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIGtleSkpICYmXG4gICAgICAgICEoc2tpcEluZGV4ZXMgJiYgKFxuICAgICAgICAgICAvLyBTYWZhcmkgOSBoYXMgZW51bWVyYWJsZSBgYXJndW1lbnRzLmxlbmd0aGAgaW4gc3RyaWN0IG1vZGUuXG4gICAgICAgICAgIGtleSA9PSAnbGVuZ3RoJyB8fFxuICAgICAgICAgICAvLyBOb2RlLmpzIDAuMTAgaGFzIGVudW1lcmFibGUgbm9uLWluZGV4IHByb3BlcnRpZXMgb24gYnVmZmVycy5cbiAgICAgICAgICAgKGlzQnVmZiAmJiAoa2V5ID09ICdvZmZzZXQnIHx8IGtleSA9PSAncGFyZW50JykpIHx8XG4gICAgICAgICAgIC8vIFBoYW50b21KUyAyIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIHR5cGVkIGFycmF5cy5cbiAgICAgICAgICAgKGlzVHlwZSAmJiAoa2V5ID09ICdidWZmZXInIHx8IGtleSA9PSAnYnl0ZUxlbmd0aCcgfHwga2V5ID09ICdieXRlT2Zmc2V0JykpIHx8XG4gICAgICAgICAgIC8vIFNraXAgaW5kZXggcHJvcGVydGllcy5cbiAgICAgICAgICAgaXNJbmRleChrZXksIGxlbmd0aClcbiAgICAgICAgKSkpIHtcbiAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlMaWtlS2V5cztcbiIsIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udGltZXNgIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWUgc2hvcnRoYW5kc1xuICogb3IgbWF4IGFycmF5IGxlbmd0aCBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7bnVtYmVyfSBuIFRoZSBudW1iZXIgb2YgdGltZXMgdG8gaW52b2tlIGBpdGVyYXRlZWAuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiByZXN1bHRzLlxuICovXG5mdW5jdGlvbiBiYXNlVGltZXMobiwgaXRlcmF0ZWUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICByZXN1bHQgPSBBcnJheShuKTtcblxuICB3aGlsZSAoKytpbmRleCA8IG4pIHtcbiAgICByZXN1bHRbaW5kZXhdID0gaXRlcmF0ZWUoaW5kZXgpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVRpbWVzO1xuIiwidmFyIGJhc2VHZXRUYWcgPSByZXF1aXJlKCcuL19iYXNlR2V0VGFnJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJztcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0FyZ3VtZW50c2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LFxuICovXG5mdW5jdGlvbiBiYXNlSXNBcmd1bWVudHModmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gYXJnc1RhZztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNBcmd1bWVudHM7XG4iLCIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYGZhbHNlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udGltZXMoMiwgXy5zdHViRmFsc2UpO1xuICogLy8gPT4gW2ZhbHNlLCBmYWxzZV1cbiAqL1xuZnVuY3Rpb24gc3R1YkZhbHNlKCkge1xuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R1YkZhbHNlO1xuIiwidmFyIGJhc2VHZXRUYWcgPSByZXF1aXJlKCcuL19iYXNlR2V0VGFnJyksXG4gICAgaXNMZW5ndGggPSByZXF1aXJlKCcuL2lzTGVuZ3RoJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgYm9vbFRhZyA9ICdbb2JqZWN0IEJvb2xlYW5dJyxcbiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICBmdW5jVGFnID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICBtYXBUYWcgPSAnW29iamVjdCBNYXBdJyxcbiAgICBudW1iZXJUYWcgPSAnW29iamVjdCBOdW1iZXJdJyxcbiAgICBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJyxcbiAgICByZWdleHBUYWcgPSAnW29iamVjdCBSZWdFeHBdJyxcbiAgICBzZXRUYWcgPSAnW29iamVjdCBTZXRdJyxcbiAgICBzdHJpbmdUYWcgPSAnW29iamVjdCBTdHJpbmddJyxcbiAgICB3ZWFrTWFwVGFnID0gJ1tvYmplY3QgV2Vha01hcF0nO1xuXG52YXIgYXJyYXlCdWZmZXJUYWcgPSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nLFxuICAgIGRhdGFWaWV3VGFnID0gJ1tvYmplY3QgRGF0YVZpZXddJyxcbiAgICBmbG9hdDMyVGFnID0gJ1tvYmplY3QgRmxvYXQzMkFycmF5XScsXG4gICAgZmxvYXQ2NFRhZyA9ICdbb2JqZWN0IEZsb2F0NjRBcnJheV0nLFxuICAgIGludDhUYWcgPSAnW29iamVjdCBJbnQ4QXJyYXldJyxcbiAgICBpbnQxNlRhZyA9ICdbb2JqZWN0IEludDE2QXJyYXldJyxcbiAgICBpbnQzMlRhZyA9ICdbb2JqZWN0IEludDMyQXJyYXldJyxcbiAgICB1aW50OFRhZyA9ICdbb2JqZWN0IFVpbnQ4QXJyYXldJyxcbiAgICB1aW50OENsYW1wZWRUYWcgPSAnW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0nLFxuICAgIHVpbnQxNlRhZyA9ICdbb2JqZWN0IFVpbnQxNkFycmF5XScsXG4gICAgdWludDMyVGFnID0gJ1tvYmplY3QgVWludDMyQXJyYXldJztcblxuLyoqIFVzZWQgdG8gaWRlbnRpZnkgYHRvU3RyaW5nVGFnYCB2YWx1ZXMgb2YgdHlwZWQgYXJyYXlzLiAqL1xudmFyIHR5cGVkQXJyYXlUYWdzID0ge307XG50eXBlZEFycmF5VGFnc1tmbG9hdDMyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Zsb2F0NjRUYWddID1cbnR5cGVkQXJyYXlUYWdzW2ludDhUYWddID0gdHlwZWRBcnJheVRhZ3NbaW50MTZUYWddID1cbnR5cGVkQXJyYXlUYWdzW2ludDMyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW3VpbnQ4VGFnXSA9XG50eXBlZEFycmF5VGFnc1t1aW50OENsYW1wZWRUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDE2VGFnXSA9XG50eXBlZEFycmF5VGFnc1t1aW50MzJUYWddID0gdHJ1ZTtcbnR5cGVkQXJyYXlUYWdzW2FyZ3NUYWddID0gdHlwZWRBcnJheVRhZ3NbYXJyYXlUYWddID1cbnR5cGVkQXJyYXlUYWdzW2FycmF5QnVmZmVyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Jvb2xUYWddID1cbnR5cGVkQXJyYXlUYWdzW2RhdGFWaWV3VGFnXSA9IHR5cGVkQXJyYXlUYWdzW2RhdGVUYWddID1cbnR5cGVkQXJyYXlUYWdzW2Vycm9yVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Z1bmNUYWddID1cbnR5cGVkQXJyYXlUYWdzW21hcFRhZ10gPSB0eXBlZEFycmF5VGFnc1tudW1iZXJUYWddID1cbnR5cGVkQXJyYXlUYWdzW29iamVjdFRhZ10gPSB0eXBlZEFycmF5VGFnc1tyZWdleHBUYWddID1cbnR5cGVkQXJyYXlUYWdzW3NldFRhZ10gPSB0eXBlZEFycmF5VGFnc1tzdHJpbmdUYWddID1cbnR5cGVkQXJyYXlUYWdzW3dlYWtNYXBUYWddID0gZmFsc2U7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNUeXBlZEFycmF5YCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHR5cGVkIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc1R5cGVkQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiZcbiAgICBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICEhdHlwZWRBcnJheVRhZ3NbYmFzZUdldFRhZyh2YWx1ZSldO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc1R5cGVkQXJyYXk7XG4iLCIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnVuYXJ5YCB3aXRob3V0IHN1cHBvcnQgZm9yIHN0b3JpbmcgbWV0YWRhdGEuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGNhcCBhcmd1bWVudHMgZm9yLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgY2FwcGVkIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlVW5hcnkoZnVuYykge1xuICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gZnVuYyh2YWx1ZSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVVuYXJ5O1xuIiwidmFyIGlzUHJvdG90eXBlID0gcmVxdWlyZSgnLi9faXNQcm90b3R5cGUnKSxcbiAgICBuYXRpdmVLZXlzID0gcmVxdWlyZSgnLi9fbmF0aXZlS2V5cycpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmtleXNgIHdoaWNoIGRvZXNuJ3QgdHJlYXQgc3BhcnNlIGFycmF5cyBhcyBkZW5zZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYmFzZUtleXMob2JqZWN0KSB7XG4gIGlmICghaXNQcm90b3R5cGUob2JqZWN0KSkge1xuICAgIHJldHVybiBuYXRpdmVLZXlzKG9iamVjdCk7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gT2JqZWN0KG9iamVjdCkpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkgJiYga2V5ICE9ICdjb25zdHJ1Y3RvcicpIHtcbiAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUtleXM7XG4iLCIvKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGxpa2VseSBhIHByb3RvdHlwZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBwcm90b3R5cGUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNQcm90b3R5cGUodmFsdWUpIHtcbiAgdmFyIEN0b3IgPSB2YWx1ZSAmJiB2YWx1ZS5jb25zdHJ1Y3RvcixcbiAgICAgIHByb3RvID0gKHR5cGVvZiBDdG9yID09ICdmdW5jdGlvbicgJiYgQ3Rvci5wcm90b3R5cGUpIHx8IG9iamVjdFByb3RvO1xuXG4gIHJldHVybiB2YWx1ZSA9PT0gcHJvdG87XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNQcm90b3R5cGU7XG4iLCJ2YXIgb3ZlckFyZyA9IHJlcXVpcmUoJy4vX292ZXJBcmcnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUtleXMgPSBvdmVyQXJnKE9iamVjdC5rZXlzLCBPYmplY3QpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5hdGl2ZUtleXM7XG4iLCIvKipcbiAqIENyZWF0ZXMgYSB1bmFyeSBmdW5jdGlvbiB0aGF0IGludm9rZXMgYGZ1bmNgIHdpdGggaXRzIGFyZ3VtZW50IHRyYW5zZm9ybWVkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byB3cmFwLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gdHJhbnNmb3JtIFRoZSBhcmd1bWVudCB0cmFuc2Zvcm0uXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gb3ZlckFyZyhmdW5jLCB0cmFuc2Zvcm0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBmdW5jKHRyYW5zZm9ybShhcmcpKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvdmVyQXJnO1xuIiwidmFyIERhdGFWaWV3ID0gcmVxdWlyZSgnLi9fRGF0YVZpZXcnKSxcbiAgICBNYXAgPSByZXF1aXJlKCcuL19NYXAnKSxcbiAgICBQcm9taXNlID0gcmVxdWlyZSgnLi9fUHJvbWlzZScpLFxuICAgIFNldCA9IHJlcXVpcmUoJy4vX1NldCcpLFxuICAgIFdlYWtNYXAgPSByZXF1aXJlKCcuL19XZWFrTWFwJyksXG4gICAgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICB0b1NvdXJjZSA9IHJlcXVpcmUoJy4vX3RvU291cmNlJyk7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBtYXBUYWcgPSAnW29iamVjdCBNYXBdJyxcbiAgICBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJyxcbiAgICBwcm9taXNlVGFnID0gJ1tvYmplY3QgUHJvbWlzZV0nLFxuICAgIHNldFRhZyA9ICdbb2JqZWN0IFNldF0nLFxuICAgIHdlYWtNYXBUYWcgPSAnW29iamVjdCBXZWFrTWFwXSc7XG5cbnZhciBkYXRhVmlld1RhZyA9ICdbb2JqZWN0IERhdGFWaWV3XSc7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBtYXBzLCBzZXRzLCBhbmQgd2Vha21hcHMuICovXG52YXIgZGF0YVZpZXdDdG9yU3RyaW5nID0gdG9Tb3VyY2UoRGF0YVZpZXcpLFxuICAgIG1hcEN0b3JTdHJpbmcgPSB0b1NvdXJjZShNYXApLFxuICAgIHByb21pc2VDdG9yU3RyaW5nID0gdG9Tb3VyY2UoUHJvbWlzZSksXG4gICAgc2V0Q3RvclN0cmluZyA9IHRvU291cmNlKFNldCksXG4gICAgd2Vha01hcEN0b3JTdHJpbmcgPSB0b1NvdXJjZShXZWFrTWFwKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBgdG9TdHJpbmdUYWdgIG9mIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgYHRvU3RyaW5nVGFnYC5cbiAqL1xudmFyIGdldFRhZyA9IGJhc2VHZXRUYWc7XG5cbi8vIEZhbGxiYWNrIGZvciBkYXRhIHZpZXdzLCBtYXBzLCBzZXRzLCBhbmQgd2VhayBtYXBzIGluIElFIDExIGFuZCBwcm9taXNlcyBpbiBOb2RlLmpzIDwgNi5cbmlmICgoRGF0YVZpZXcgJiYgZ2V0VGFnKG5ldyBEYXRhVmlldyhuZXcgQXJyYXlCdWZmZXIoMSkpKSAhPSBkYXRhVmlld1RhZykgfHxcbiAgICAoTWFwICYmIGdldFRhZyhuZXcgTWFwKSAhPSBtYXBUYWcpIHx8XG4gICAgKFByb21pc2UgJiYgZ2V0VGFnKFByb21pc2UucmVzb2x2ZSgpKSAhPSBwcm9taXNlVGFnKSB8fFxuICAgIChTZXQgJiYgZ2V0VGFnKG5ldyBTZXQpICE9IHNldFRhZykgfHxcbiAgICAoV2Vha01hcCAmJiBnZXRUYWcobmV3IFdlYWtNYXApICE9IHdlYWtNYXBUYWcpKSB7XG4gIGdldFRhZyA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgdmFyIHJlc3VsdCA9IGJhc2VHZXRUYWcodmFsdWUpLFxuICAgICAgICBDdG9yID0gcmVzdWx0ID09IG9iamVjdFRhZyA/IHZhbHVlLmNvbnN0cnVjdG9yIDogdW5kZWZpbmVkLFxuICAgICAgICBjdG9yU3RyaW5nID0gQ3RvciA/IHRvU291cmNlKEN0b3IpIDogJyc7XG5cbiAgICBpZiAoY3RvclN0cmluZykge1xuICAgICAgc3dpdGNoIChjdG9yU3RyaW5nKSB7XG4gICAgICAgIGNhc2UgZGF0YVZpZXdDdG9yU3RyaW5nOiByZXR1cm4gZGF0YVZpZXdUYWc7XG4gICAgICAgIGNhc2UgbWFwQ3RvclN0cmluZzogcmV0dXJuIG1hcFRhZztcbiAgICAgICAgY2FzZSBwcm9taXNlQ3RvclN0cmluZzogcmV0dXJuIHByb21pc2VUYWc7XG4gICAgICAgIGNhc2Ugc2V0Q3RvclN0cmluZzogcmV0dXJuIHNldFRhZztcbiAgICAgICAgY2FzZSB3ZWFrTWFwQ3RvclN0cmluZzogcmV0dXJuIHdlYWtNYXBUYWc7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0VGFnO1xuIiwidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBEYXRhVmlldyA9IGdldE5hdGl2ZShyb290LCAnRGF0YVZpZXcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBEYXRhVmlldztcbiIsInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKSxcbiAgICByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgUHJvbWlzZSA9IGdldE5hdGl2ZShyb290LCAnUHJvbWlzZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFByb21pc2U7XG4iLCJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIFNldCA9IGdldE5hdGl2ZShyb290LCAnU2V0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2V0O1xuIiwidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBXZWFrTWFwID0gZ2V0TmF0aXZlKHJvb3QsICdXZWFrTWFwJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gV2Vha01hcDtcbiIsInZhciBpc1N0cmljdENvbXBhcmFibGUgPSByZXF1aXJlKCcuL19pc1N0cmljdENvbXBhcmFibGUnKSxcbiAgICBrZXlzID0gcmVxdWlyZSgnLi9rZXlzJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgcHJvcGVydHkgbmFtZXMsIHZhbHVlcywgYW5kIGNvbXBhcmUgZmxhZ3Mgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbWF0Y2ggZGF0YSBvZiBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gZ2V0TWF0Y2hEYXRhKG9iamVjdCkge1xuICB2YXIgcmVzdWx0ID0ga2V5cyhvYmplY3QpLFxuICAgICAgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aDtcblxuICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICB2YXIga2V5ID0gcmVzdWx0W2xlbmd0aF0sXG4gICAgICAgIHZhbHVlID0gb2JqZWN0W2tleV07XG5cbiAgICByZXN1bHRbbGVuZ3RoXSA9IFtrZXksIHZhbHVlLCBpc1N0cmljdENvbXBhcmFibGUodmFsdWUpXTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE1hdGNoRGF0YTtcbiIsInZhciBiYXNlSXNFcXVhbCA9IHJlcXVpcmUoJy4vX2Jhc2VJc0VxdWFsJyksXG4gICAgZ2V0ID0gcmVxdWlyZSgnLi9nZXQnKSxcbiAgICBoYXNJbiA9IHJlcXVpcmUoJy4vaGFzSW4nKSxcbiAgICBpc0tleSA9IHJlcXVpcmUoJy4vX2lzS2V5JyksXG4gICAgaXNTdHJpY3RDb21wYXJhYmxlID0gcmVxdWlyZSgnLi9faXNTdHJpY3RDb21wYXJhYmxlJyksXG4gICAgbWF0Y2hlc1N0cmljdENvbXBhcmFibGUgPSByZXF1aXJlKCcuL19tYXRjaGVzU3RyaWN0Q29tcGFyYWJsZScpLFxuICAgIHRvS2V5ID0gcmVxdWlyZSgnLi9fdG9LZXknKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxLFxuICAgIENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcgPSAyO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hdGNoZXNQcm9wZXJ0eWAgd2hpY2ggZG9lc24ndCBjbG9uZSBgc3JjVmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHBhcmFtIHsqfSBzcmNWYWx1ZSBUaGUgdmFsdWUgdG8gbWF0Y2guXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBzcGVjIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlTWF0Y2hlc1Byb3BlcnR5KHBhdGgsIHNyY1ZhbHVlKSB7XG4gIGlmIChpc0tleShwYXRoKSAmJiBpc1N0cmljdENvbXBhcmFibGUoc3JjVmFsdWUpKSB7XG4gICAgcmV0dXJuIG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlKHRvS2V5KHBhdGgpLCBzcmNWYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBvYmpWYWx1ZSA9IGdldChvYmplY3QsIHBhdGgpO1xuICAgIHJldHVybiAob2JqVmFsdWUgPT09IHVuZGVmaW5lZCAmJiBvYmpWYWx1ZSA9PT0gc3JjVmFsdWUpXG4gICAgICA/IGhhc0luKG9iamVjdCwgcGF0aClcbiAgICAgIDogYmFzZUlzRXF1YWwoc3JjVmFsdWUsIG9ialZhbHVlLCBDT01QQVJFX1BBUlRJQUxfRkxBRyB8IENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VNYXRjaGVzUHJvcGVydHk7XG4iLCJ2YXIgYmFzZUdldCA9IHJlcXVpcmUoJy4vX2Jhc2VHZXQnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSB2YWx1ZSBhdCBgcGF0aGAgb2YgYG9iamVjdGAuIElmIHRoZSByZXNvbHZlZCB2YWx1ZSBpc1xuICogYHVuZGVmaW5lZGAsIHRoZSBgZGVmYXVsdFZhbHVlYCBpcyByZXR1cm5lZCBpbiBpdHMgcGxhY2UuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAzLjcuMFxuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEBwYXJhbSB7Kn0gW2RlZmF1bHRWYWx1ZV0gVGhlIHZhbHVlIHJldHVybmVkIGZvciBgdW5kZWZpbmVkYCByZXNvbHZlZCB2YWx1ZXMuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcmVzb2x2ZWQgdmFsdWUuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogW3sgJ2InOiB7ICdjJzogMyB9IH1dIH07XG4gKlxuICogXy5nZXQob2JqZWN0LCAnYVswXS5iLmMnKTtcbiAqIC8vID0+IDNcbiAqXG4gKiBfLmdldChvYmplY3QsIFsnYScsICcwJywgJ2InLCAnYyddKTtcbiAqIC8vID0+IDNcbiAqXG4gKiBfLmdldChvYmplY3QsICdhLmIuYycsICdkZWZhdWx0Jyk7XG4gKiAvLyA9PiAnZGVmYXVsdCdcbiAqL1xuZnVuY3Rpb24gZ2V0KG9iamVjdCwgcGF0aCwgZGVmYXVsdFZhbHVlKSB7XG4gIHZhciByZXN1bHQgPSBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IGJhc2VHZXQob2JqZWN0LCBwYXRoKTtcbiAgcmV0dXJuIHJlc3VsdCA9PT0gdW5kZWZpbmVkID8gZGVmYXVsdFZhbHVlIDogcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldDtcbiIsInZhciBtZW1vaXplQ2FwcGVkID0gcmVxdWlyZSgnLi9fbWVtb2l6ZUNhcHBlZCcpO1xuXG4vKiogVXNlZCB0byBtYXRjaCBwcm9wZXJ0eSBuYW1lcyB3aXRoaW4gcHJvcGVydHkgcGF0aHMuICovXG52YXIgcmVQcm9wTmFtZSA9IC9bXi5bXFxdXSt8XFxbKD86KC0/XFxkKyg/OlxcLlxcZCspPyl8KFtcIiddKSgoPzooPyFcXDIpW15cXFxcXXxcXFxcLikqPylcXDIpXFxdfCg/PSg/OlxcLnxcXFtcXF0pKD86XFwufFxcW1xcXXwkKSkvZztcblxuLyoqIFVzZWQgdG8gbWF0Y2ggYmFja3NsYXNoZXMgaW4gcHJvcGVydHkgcGF0aHMuICovXG52YXIgcmVFc2NhcGVDaGFyID0gL1xcXFwoXFxcXCk/L2c7XG5cbi8qKlxuICogQ29udmVydHMgYHN0cmluZ2AgdG8gYSBwcm9wZXJ0eSBwYXRoIGFycmF5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqL1xudmFyIHN0cmluZ1RvUGF0aCA9IG1lbW9pemVDYXBwZWQoZnVuY3Rpb24oc3RyaW5nKSB7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgaWYgKHN0cmluZy5jaGFyQ29kZUF0KDApID09PSA0NiAvKiAuICovKSB7XG4gICAgcmVzdWx0LnB1c2goJycpO1xuICB9XG4gIHN0cmluZy5yZXBsYWNlKHJlUHJvcE5hbWUsIGZ1bmN0aW9uKG1hdGNoLCBudW1iZXIsIHF1b3RlLCBzdWJTdHJpbmcpIHtcbiAgICByZXN1bHQucHVzaChxdW90ZSA/IHN1YlN0cmluZy5yZXBsYWNlKHJlRXNjYXBlQ2hhciwgJyQxJykgOiAobnVtYmVyIHx8IG1hdGNoKSk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyaW5nVG9QYXRoO1xuIiwidmFyIG1lbW9pemUgPSByZXF1aXJlKCcuL21lbW9pemUnKTtcblxuLyoqIFVzZWQgYXMgdGhlIG1heGltdW0gbWVtb2l6ZSBjYWNoZSBzaXplLiAqL1xudmFyIE1BWF9NRU1PSVpFX1NJWkUgPSA1MDA7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLm1lbW9pemVgIHdoaWNoIGNsZWFycyB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24nc1xuICogY2FjaGUgd2hlbiBpdCBleGNlZWRzIGBNQVhfTUVNT0laRV9TSVpFYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaGF2ZSBpdHMgb3V0cHV0IG1lbW9pemVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgbWVtb2l6ZWQgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG1lbW9pemVDYXBwZWQoZnVuYykge1xuICB2YXIgcmVzdWx0ID0gbWVtb2l6ZShmdW5jLCBmdW5jdGlvbihrZXkpIHtcbiAgICBpZiAoY2FjaGUuc2l6ZSA9PT0gTUFYX01FTU9JWkVfU0laRSkge1xuICAgICAgY2FjaGUuY2xlYXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleTtcbiAgfSk7XG5cbiAgdmFyIGNhY2hlID0gcmVzdWx0LmNhY2hlO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1lbW9pemVDYXBwZWQ7XG4iLCJ2YXIgTWFwQ2FjaGUgPSByZXF1aXJlKCcuL19NYXBDYWNoZScpO1xuXG4vKiogRXJyb3IgbWVzc2FnZSBjb25zdGFudHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IG1lbW9pemVzIHRoZSByZXN1bHQgb2YgYGZ1bmNgLiBJZiBgcmVzb2x2ZXJgIGlzXG4gKiBwcm92aWRlZCwgaXQgZGV0ZXJtaW5lcyB0aGUgY2FjaGUga2V5IGZvciBzdG9yaW5nIHRoZSByZXN1bHQgYmFzZWQgb24gdGhlXG4gKiBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlIG1lbW9pemVkIGZ1bmN0aW9uLiBCeSBkZWZhdWx0LCB0aGUgZmlyc3QgYXJndW1lbnRcbiAqIHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbiBpcyB1c2VkIGFzIHRoZSBtYXAgY2FjaGUga2V5LiBUaGUgYGZ1bmNgXG4gKiBpcyBpbnZva2VkIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIHRoZSBtZW1vaXplZCBmdW5jdGlvbi5cbiAqXG4gKiAqKk5vdGU6KiogVGhlIGNhY2hlIGlzIGV4cG9zZWQgYXMgdGhlIGBjYWNoZWAgcHJvcGVydHkgb24gdGhlIG1lbW9pemVkXG4gKiBmdW5jdGlvbi4gSXRzIGNyZWF0aW9uIG1heSBiZSBjdXN0b21pemVkIGJ5IHJlcGxhY2luZyB0aGUgYF8ubWVtb2l6ZS5DYWNoZWBcbiAqIGNvbnN0cnVjdG9yIHdpdGggb25lIHdob3NlIGluc3RhbmNlcyBpbXBsZW1lbnQgdGhlXG4gKiBbYE1hcGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXByb3BlcnRpZXMtb2YtdGhlLW1hcC1wcm90b3R5cGUtb2JqZWN0KVxuICogbWV0aG9kIGludGVyZmFjZSBvZiBgY2xlYXJgLCBgZGVsZXRlYCwgYGdldGAsIGBoYXNgLCBhbmQgYHNldGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBoYXZlIGl0cyBvdXRwdXQgbWVtb2l6ZWQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcmVzb2x2ZXJdIFRoZSBmdW5jdGlvbiB0byByZXNvbHZlIHRoZSBjYWNoZSBrZXkuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBtZW1vaXplZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxLCAnYic6IDIgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2MnOiAzLCAnZCc6IDQgfTtcbiAqXG4gKiB2YXIgdmFsdWVzID0gXy5tZW1vaXplKF8udmFsdWVzKTtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogdmFsdWVzKG90aGVyKTtcbiAqIC8vID0+IFszLCA0XVxuICpcbiAqIG9iamVjdC5hID0gMjtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogLy8gTW9kaWZ5IHRoZSByZXN1bHQgY2FjaGUuXG4gKiB2YWx1ZXMuY2FjaGUuc2V0KG9iamVjdCwgWydhJywgJ2InXSk7XG4gKiB2YWx1ZXMob2JqZWN0KTtcbiAqIC8vID0+IFsnYScsICdiJ11cbiAqXG4gKiAvLyBSZXBsYWNlIGBfLm1lbW9pemUuQ2FjaGVgLlxuICogXy5tZW1vaXplLkNhY2hlID0gV2Vha01hcDtcbiAqL1xuZnVuY3Rpb24gbWVtb2l6ZShmdW5jLCByZXNvbHZlcikge1xuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJyB8fCAocmVzb2x2ZXIgIT0gbnVsbCAmJiB0eXBlb2YgcmVzb2x2ZXIgIT0gJ2Z1bmN0aW9uJykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gIH1cbiAgdmFyIG1lbW9pemVkID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgIGtleSA9IHJlc29sdmVyID8gcmVzb2x2ZXIuYXBwbHkodGhpcywgYXJncykgOiBhcmdzWzBdLFxuICAgICAgICBjYWNoZSA9IG1lbW9pemVkLmNhY2hlO1xuXG4gICAgaWYgKGNhY2hlLmhhcyhrZXkpKSB7XG4gICAgICByZXR1cm4gY2FjaGUuZ2V0KGtleSk7XG4gICAgfVxuICAgIHZhciByZXN1bHQgPSBmdW5jLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIG1lbW9pemVkLmNhY2hlID0gY2FjaGUuc2V0KGtleSwgcmVzdWx0KSB8fCBjYWNoZTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICBtZW1vaXplZC5jYWNoZSA9IG5ldyAobWVtb2l6ZS5DYWNoZSB8fCBNYXBDYWNoZSk7XG4gIHJldHVybiBtZW1vaXplZDtcbn1cblxuLy8gRXhwb3NlIGBNYXBDYWNoZWAuXG5tZW1vaXplLkNhY2hlID0gTWFwQ2FjaGU7XG5cbm1vZHVsZS5leHBvcnRzID0gbWVtb2l6ZTtcbiIsInZhciBiYXNlVG9TdHJpbmcgPSByZXF1aXJlKCcuL19iYXNlVG9TdHJpbmcnKTtcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nLiBBbiBlbXB0eSBzdHJpbmcgaXMgcmV0dXJuZWQgZm9yIGBudWxsYFxuICogYW5kIGB1bmRlZmluZWRgIHZhbHVlcy4gVGhlIHNpZ24gb2YgYC0wYCBpcyBwcmVzZXJ2ZWQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgc3RyaW5nLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRvU3RyaW5nKG51bGwpO1xuICogLy8gPT4gJydcbiAqXG4gKiBfLnRvU3RyaW5nKC0wKTtcbiAqIC8vID0+ICctMCdcbiAqXG4gKiBfLnRvU3RyaW5nKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiAnMSwyLDMnXG4gKi9cbmZ1bmN0aW9uIHRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9PSBudWxsID8gJycgOiBiYXNlVG9TdHJpbmcodmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvU3RyaW5nO1xuIiwidmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX1N5bWJvbCcpLFxuICAgIGFycmF5TWFwID0gcmVxdWlyZSgnLi9fYXJyYXlNYXAnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIElORklOSVRZID0gMSAvIDA7XG5cbi8qKiBVc2VkIHRvIGNvbnZlcnQgc3ltYm9scyB0byBwcmltaXRpdmVzIGFuZCBzdHJpbmdzLiAqL1xudmFyIHN5bWJvbFByb3RvID0gU3ltYm9sID8gU3ltYm9sLnByb3RvdHlwZSA6IHVuZGVmaW5lZCxcbiAgICBzeW1ib2xUb1N0cmluZyA9IHN5bWJvbFByb3RvID8gc3ltYm9sUHJvdG8udG9TdHJpbmcgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udG9TdHJpbmdgIHdoaWNoIGRvZXNuJ3QgY29udmVydCBudWxsaXNoXG4gKiB2YWx1ZXMgdG8gZW1wdHkgc3RyaW5ncy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcHJvY2Vzcy5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gYmFzZVRvU3RyaW5nKHZhbHVlKSB7XG4gIC8vIEV4aXQgZWFybHkgZm9yIHN0cmluZ3MgdG8gYXZvaWQgYSBwZXJmb3JtYW5jZSBoaXQgaW4gc29tZSBlbnZpcm9ubWVudHMuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKGlzQXJyYXkodmFsdWUpKSB7XG4gICAgLy8gUmVjdXJzaXZlbHkgY29udmVydCB2YWx1ZXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICByZXR1cm4gYXJyYXlNYXAodmFsdWUsIGJhc2VUb1N0cmluZykgKyAnJztcbiAgfVxuICBpZiAoaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIHN5bWJvbFRvU3RyaW5nID8gc3ltYm9sVG9TdHJpbmcuY2FsbCh2YWx1ZSkgOiAnJztcbiAgfVxuICB2YXIgcmVzdWx0ID0gKHZhbHVlICsgJycpO1xuICByZXR1cm4gKHJlc3VsdCA9PSAnMCcgJiYgKDEgLyB2YWx1ZSkgPT0gLUlORklOSVRZKSA/ICctMCcgOiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVRvU3RyaW5nO1xuIiwidmFyIGJhc2VIYXNJbiA9IHJlcXVpcmUoJy4vX2Jhc2VIYXNJbicpLFxuICAgIGhhc1BhdGggPSByZXF1aXJlKCcuL19oYXNQYXRoJyk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGBwYXRoYCBpcyBhIGRpcmVjdCBvciBpbmhlcml0ZWQgcHJvcGVydHkgb2YgYG9iamVjdGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IHBhdGggVGhlIHBhdGggdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHBhdGhgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0gXy5jcmVhdGUoeyAnYSc6IF8uY3JlYXRlKHsgJ2InOiAyIH0pIH0pO1xuICpcbiAqIF8uaGFzSW4ob2JqZWN0LCAnYScpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaGFzSW4ob2JqZWN0LCAnYS5iJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5oYXNJbihvYmplY3QsIFsnYScsICdiJ10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaGFzSW4ob2JqZWN0LCAnYicpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaGFzSW4ob2JqZWN0LCBwYXRoKSB7XG4gIHJldHVybiBvYmplY3QgIT0gbnVsbCAmJiBoYXNQYXRoKG9iamVjdCwgcGF0aCwgYmFzZUhhc0luKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNJbjtcbiIsIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaGFzSW5gIHdpdGhvdXQgc3VwcG9ydCBmb3IgZGVlcCBwYXRocy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30ga2V5IFRoZSBrZXkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VIYXNJbihvYmplY3QsIGtleSkge1xuICByZXR1cm4gb2JqZWN0ICE9IG51bGwgJiYga2V5IGluIE9iamVjdChvYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VIYXNJbjtcbiIsInZhciBjYXN0UGF0aCA9IHJlcXVpcmUoJy4vX2Nhc3RQYXRoJyksXG4gICAgaXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL2lzQXJndW1lbnRzJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzSW5kZXggPSByZXF1aXJlKCcuL19pc0luZGV4JyksXG4gICAgaXNMZW5ndGggPSByZXF1aXJlKCcuL2lzTGVuZ3RoJyksXG4gICAgdG9LZXkgPSByZXF1aXJlKCcuL190b0tleScpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgcGF0aGAgZXhpc3RzIG9uIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCB0byBjaGVjay5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhc0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGNoZWNrIHByb3BlcnRpZXMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHBhdGhgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNQYXRoKG9iamVjdCwgcGF0aCwgaGFzRnVuYykge1xuICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KTtcblxuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IHBhdGgubGVuZ3RoLFxuICAgICAgcmVzdWx0ID0gZmFsc2U7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIga2V5ID0gdG9LZXkocGF0aFtpbmRleF0pO1xuICAgIGlmICghKHJlc3VsdCA9IG9iamVjdCAhPSBudWxsICYmIGhhc0Z1bmMob2JqZWN0LCBrZXkpKSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIG9iamVjdCA9IG9iamVjdFtrZXldO1xuICB9XG4gIGlmIChyZXN1bHQgfHwgKytpbmRleCAhPSBsZW5ndGgpIHtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGxlbmd0aCA9IG9iamVjdCA9PSBudWxsID8gMCA6IG9iamVjdC5sZW5ndGg7XG4gIHJldHVybiAhIWxlbmd0aCAmJiBpc0xlbmd0aChsZW5ndGgpICYmIGlzSW5kZXgoa2V5LCBsZW5ndGgpICYmXG4gICAgKGlzQXJyYXkob2JqZWN0KSB8fCBpc0FyZ3VtZW50cyhvYmplY3QpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNQYXRoO1xuIiwiLyoqXG4gKiBUaGlzIG1ldGhvZCByZXR1cm5zIHRoZSBmaXJzdCBhcmd1bWVudCBpdCByZWNlaXZlcy5cbiAqXG4gKiBAc3RhdGljXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBtZW1iZXJPZiBfXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHBhcmFtIHsqfSB2YWx1ZSBBbnkgdmFsdWUuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyBgdmFsdWVgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAqXG4gKiBjb25zb2xlLmxvZyhfLmlkZW50aXR5KG9iamVjdCkgPT09IG9iamVjdCk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGlkZW50aXR5KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpZGVudGl0eTtcbiIsInZhciBiYXNlUHJvcGVydHkgPSByZXF1aXJlKCcuL19iYXNlUHJvcGVydHknKSxcbiAgICBiYXNlUHJvcGVydHlEZWVwID0gcmVxdWlyZSgnLi9fYmFzZVByb3BlcnR5RGVlcCcpLFxuICAgIGlzS2V5ID0gcmVxdWlyZSgnLi9faXNLZXknKSxcbiAgICB0b0tleSA9IHJlcXVpcmUoJy4vX3RvS2V5Jyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgdmFsdWUgYXQgYHBhdGhgIG9mIGEgZ2l2ZW4gb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMi40LjBcbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYWNjZXNzb3IgZnVuY3Rpb24uXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3RzID0gW1xuICogICB7ICdhJzogeyAnYic6IDIgfSB9LFxuICogICB7ICdhJzogeyAnYic6IDEgfSB9XG4gKiBdO1xuICpcbiAqIF8ubWFwKG9iamVjdHMsIF8ucHJvcGVydHkoJ2EuYicpKTtcbiAqIC8vID0+IFsyLCAxXVxuICpcbiAqIF8ubWFwKF8uc29ydEJ5KG9iamVjdHMsIF8ucHJvcGVydHkoWydhJywgJ2InXSkpLCAnYS5iJyk7XG4gKiAvLyA9PiBbMSwgMl1cbiAqL1xuZnVuY3Rpb24gcHJvcGVydHkocGF0aCkge1xuICByZXR1cm4gaXNLZXkocGF0aCkgPyBiYXNlUHJvcGVydHkodG9LZXkocGF0aCkpIDogYmFzZVByb3BlcnR5RGVlcChwYXRoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwcm9wZXJ0eTtcbiIsIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ucHJvcGVydHlgIHdpdGhvdXQgc3VwcG9ydCBmb3IgZGVlcCBwYXRocy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhY2Nlc3NvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVByb3BlcnR5KGtleSkge1xuICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkIDogb2JqZWN0W2tleV07XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVByb3BlcnR5O1xuIiwidmFyIGJhc2VHZXQgPSByZXF1aXJlKCcuL19iYXNlR2V0Jyk7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlUHJvcGVydHlgIHdoaWNoIHN1cHBvcnRzIGRlZXAgcGF0aHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhY2Nlc3NvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVByb3BlcnR5RGVlcChwYXRoKSB7XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gYmFzZUdldChvYmplY3QsIHBhdGgpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VQcm9wZXJ0eURlZXA7XG4iLCJ2YXIgYmFzZUVhY2ggPSByZXF1aXJlKCcuL19iYXNlRWFjaCcpLFxuICAgIGlzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hcGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgbWFwcGVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBiYXNlTWFwKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gaXNBcnJheUxpa2UoY29sbGVjdGlvbikgPyBBcnJheShjb2xsZWN0aW9uLmxlbmd0aCkgOiBbXTtcblxuICBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgcmVzdWx0WysraW5kZXhdID0gaXRlcmF0ZWUodmFsdWUsIGtleSwgY29sbGVjdGlvbik7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VNYXA7XG4iLCJ2YXIgYmFzZUZvck93biA9IHJlcXVpcmUoJy4vX2Jhc2VGb3JPd24nKSxcbiAgICBjcmVhdGVCYXNlRWFjaCA9IHJlcXVpcmUoJy4vX2NyZWF0ZUJhc2VFYWNoJyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yRWFjaGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuXG4gKi9cbnZhciBiYXNlRWFjaCA9IGNyZWF0ZUJhc2VFYWNoKGJhc2VGb3JPd24pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VFYWNoO1xuIiwidmFyIGJhc2VGb3IgPSByZXF1aXJlKCcuL19iYXNlRm9yJyksXG4gICAga2V5cyA9IHJlcXVpcmUoJy4va2V5cycpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmZvck93bmAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VGb3JPd24ob2JqZWN0LCBpdGVyYXRlZSkge1xuICByZXR1cm4gb2JqZWN0ICYmIGJhc2VGb3Iob2JqZWN0LCBpdGVyYXRlZSwga2V5cyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUZvck93bjtcbiIsInZhciBjcmVhdGVCYXNlRm9yID0gcmVxdWlyZSgnLi9fY3JlYXRlQmFzZUZvcicpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBiYXNlRm9yT3duYCB3aGljaCBpdGVyYXRlcyBvdmVyIGBvYmplY3RgXG4gKiBwcm9wZXJ0aWVzIHJldHVybmVkIGJ5IGBrZXlzRnVuY2AgYW5kIGludm9rZXMgYGl0ZXJhdGVlYCBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAqIEl0ZXJhdGVlIGZ1bmN0aW9ucyBtYXkgZXhpdCBpdGVyYXRpb24gZWFybHkgYnkgZXhwbGljaXRseSByZXR1cm5pbmcgYGZhbHNlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBrZXlzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBrZXlzIG9mIGBvYmplY3RgLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xudmFyIGJhc2VGb3IgPSBjcmVhdGVCYXNlRm9yKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUZvcjtcbiIsIi8qKlxuICogQ3JlYXRlcyBhIGJhc2UgZnVuY3Rpb24gZm9yIG1ldGhvZHMgbGlrZSBgXy5mb3JJbmAgYW5kIGBfLmZvck93bmAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYmFzZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQmFzZUZvcihmcm9tUmlnaHQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCwgaXRlcmF0ZWUsIGtleXNGdW5jKSB7XG4gICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgIGl0ZXJhYmxlID0gT2JqZWN0KG9iamVjdCksXG4gICAgICAgIHByb3BzID0ga2V5c0Z1bmMob2JqZWN0KSxcbiAgICAgICAgbGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xuXG4gICAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgICB2YXIga2V5ID0gcHJvcHNbZnJvbVJpZ2h0ID8gbGVuZ3RoIDogKytpbmRleF07XG4gICAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVba2V5XSwga2V5LCBpdGVyYWJsZSkgPT09IGZhbHNlKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0O1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUJhc2VGb3I7XG4iLCJ2YXIgaXNBcnJheUxpa2UgPSByZXF1aXJlKCcuL2lzQXJyYXlMaWtlJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGBiYXNlRWFjaGAgb3IgYGJhc2VFYWNoUmlnaHRgIGZ1bmN0aW9uLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlYWNoRnVuYyBUaGUgZnVuY3Rpb24gdG8gaXRlcmF0ZSBvdmVyIGEgY29sbGVjdGlvbi5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYmFzZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQmFzZUVhY2goZWFjaEZ1bmMsIGZyb21SaWdodCkge1xuICByZXR1cm4gZnVuY3Rpb24oY29sbGVjdGlvbiwgaXRlcmF0ZWUpIHtcbiAgICBpZiAoY29sbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gY29sbGVjdGlvbjtcbiAgICB9XG4gICAgaWYgKCFpc0FycmF5TGlrZShjb2xsZWN0aW9uKSkge1xuICAgICAgcmV0dXJuIGVhY2hGdW5jKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKTtcbiAgICB9XG4gICAgdmFyIGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuICAgICAgICBpbmRleCA9IGZyb21SaWdodCA/IGxlbmd0aCA6IC0xLFxuICAgICAgICBpdGVyYWJsZSA9IE9iamVjdChjb2xsZWN0aW9uKTtcblxuICAgIHdoaWxlICgoZnJvbVJpZ2h0ID8gaW5kZXgtLSA6ICsraW5kZXggPCBsZW5ndGgpKSB7XG4gICAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVbaW5kZXhdLCBpbmRleCwgaXRlcmFibGUpID09PSBmYWxzZSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvbGxlY3Rpb247XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQmFzZUVhY2g7XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zLCBvcHRpb25zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcsIGZsYWdzKG9wdGlvbnMpKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucyAmJiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJpZ2ludDogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IHZhciBSZWFjdFJlZHV4Q29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBSZWFjdFJlZHV4Q29udGV4dC5kaXNwbGF5TmFtZSA9ICdSZWFjdFJlZHV4Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3RSZWR1eENvbnRleHQ7IiwiLy8gRGVmYXVsdCB0byBhIGR1bW15IFwiYmF0Y2hcIiBpbXBsZW1lbnRhdGlvbiB0aGF0IGp1c3QgcnVucyB0aGUgY2FsbGJhY2tcbmZ1bmN0aW9uIGRlZmF1bHROb29wQmF0Y2goY2FsbGJhY2spIHtcbiAgY2FsbGJhY2soKTtcbn1cblxudmFyIGJhdGNoID0gZGVmYXVsdE5vb3BCYXRjaDsgLy8gQWxsb3cgaW5qZWN0aW5nIGFub3RoZXIgYmF0Y2hpbmcgZnVuY3Rpb24gbGF0ZXJcblxuZXhwb3J0IHZhciBzZXRCYXRjaCA9IGZ1bmN0aW9uIHNldEJhdGNoKG5ld0JhdGNoKSB7XG4gIHJldHVybiBiYXRjaCA9IG5ld0JhdGNoO1xufTsgLy8gU3VwcGx5IGEgZ2V0dGVyIGp1c3QgdG8gc2tpcCBkZWFsaW5nIHdpdGggRVNNIGJpbmRpbmdzXG5cbmV4cG9ydCB2YXIgZ2V0QmF0Y2ggPSBmdW5jdGlvbiBnZXRCYXRjaCgpIHtcbiAgcmV0dXJuIGJhdGNoO1xufTsiLCJpbXBvcnQgeyBnZXRCYXRjaCB9IGZyb20gJy4vYmF0Y2gnOyAvLyBlbmNhcHN1bGF0ZXMgdGhlIHN1YnNjcmlwdGlvbiBsb2dpYyBmb3IgY29ubmVjdGluZyBhIGNvbXBvbmVudCB0byB0aGUgcmVkdXggc3RvcmUsIGFzXG4vLyB3ZWxsIGFzIG5lc3Rpbmcgc3Vic2NyaXB0aW9ucyBvZiBkZXNjZW5kYW50IGNvbXBvbmVudHMsIHNvIHRoYXQgd2UgY2FuIGVuc3VyZSB0aGVcbi8vIGFuY2VzdG9yIGNvbXBvbmVudHMgcmUtcmVuZGVyIGJlZm9yZSBkZXNjZW5kYW50c1xuXG5mdW5jdGlvbiBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKSB7XG4gIHZhciBiYXRjaCA9IGdldEJhdGNoKCk7XG4gIHZhciBmaXJzdCA9IG51bGw7XG4gIHZhciBsYXN0ID0gbnVsbDtcbiAgcmV0dXJuIHtcbiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICBmaXJzdCA9IG51bGw7XG4gICAgICBsYXN0ID0gbnVsbDtcbiAgICB9LFxuICAgIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge1xuICAgICAgYmF0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbGlzdGVuZXIgPSBmaXJzdDtcblxuICAgICAgICB3aGlsZSAobGlzdGVuZXIpIHtcbiAgICAgICAgICBsaXN0ZW5lci5jYWxsYmFjaygpO1xuICAgICAgICAgIGxpc3RlbmVyID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHZhciBsaXN0ZW5lcnMgPSBbXTtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGZpcnN0O1xuXG4gICAgICB3aGlsZSAobGlzdGVuZXIpIHtcbiAgICAgICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgICAgICBsaXN0ZW5lciA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBsaXN0ZW5lcnM7XG4gICAgfSxcbiAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjaykge1xuICAgICAgdmFyIGlzU3Vic2NyaWJlZCA9IHRydWU7XG4gICAgICB2YXIgbGlzdGVuZXIgPSBsYXN0ID0ge1xuICAgICAgICBjYWxsYmFjazogY2FsbGJhY2ssXG4gICAgICAgIG5leHQ6IG51bGwsXG4gICAgICAgIHByZXY6IGxhc3RcbiAgICAgIH07XG5cbiAgICAgIGlmIChsaXN0ZW5lci5wcmV2KSB7XG4gICAgICAgIGxpc3RlbmVyLnByZXYubmV4dCA9IGxpc3RlbmVyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZmlyc3QgPSBsaXN0ZW5lcjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgICBpZiAoIWlzU3Vic2NyaWJlZCB8fCBmaXJzdCA9PT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcblxuICAgICAgICBpZiAobGlzdGVuZXIubmV4dCkge1xuICAgICAgICAgIGxpc3RlbmVyLm5leHQucHJldiA9IGxpc3RlbmVyLnByZXY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGFzdCA9IGxpc3RlbmVyLnByZXY7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobGlzdGVuZXIucHJldikge1xuICAgICAgICAgIGxpc3RlbmVyLnByZXYubmV4dCA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZmlyc3QgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn1cblxudmFyIG51bGxMaXN0ZW5lcnMgPSB7XG4gIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge30sXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxufTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJzY3JpcHRpb24oc3RvcmUsIHBhcmVudFN1Yikge1xuICB2YXIgdW5zdWJzY3JpYmU7XG4gIHZhciBsaXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuXG4gIGZ1bmN0aW9uIGFkZE5lc3RlZFN1YihsaXN0ZW5lcikge1xuICAgIHRyeVN1YnNjcmliZSgpO1xuICAgIHJldHVybiBsaXN0ZW5lcnMuc3Vic2NyaWJlKGxpc3RlbmVyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeU5lc3RlZFN1YnMoKSB7XG4gICAgbGlzdGVuZXJzLm5vdGlmeSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlQ2hhbmdlV3JhcHBlcigpIHtcbiAgICBpZiAoc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UpIHtcbiAgICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaXNTdWJzY3JpYmVkKCkge1xuICAgIHJldHVybiBCb29sZWFuKHVuc3Vic2NyaWJlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyeVN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXVuc3Vic2NyaWJlKSB7XG4gICAgICB1bnN1YnNjcmliZSA9IHBhcmVudFN1YiA/IHBhcmVudFN1Yi5hZGROZXN0ZWRTdWIoaGFuZGxlQ2hhbmdlV3JhcHBlcikgOiBzdG9yZS5zdWJzY3JpYmUoaGFuZGxlQ2hhbmdlV3JhcHBlcik7XG4gICAgICBsaXN0ZW5lcnMgPSBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0cnlVbnN1YnNjcmliZSgpIHtcbiAgICBpZiAodW5zdWJzY3JpYmUpIHtcbiAgICAgIHVuc3Vic2NyaWJlKCk7XG4gICAgICB1bnN1YnNjcmliZSA9IHVuZGVmaW5lZDtcbiAgICAgIGxpc3RlbmVycy5jbGVhcigpO1xuICAgICAgbGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB9XG4gIH1cblxuICB2YXIgc3Vic2NyaXB0aW9uID0ge1xuICAgIGFkZE5lc3RlZFN1YjogYWRkTmVzdGVkU3ViLFxuICAgIG5vdGlmeU5lc3RlZFN1YnM6IG5vdGlmeU5lc3RlZFN1YnMsXG4gICAgaGFuZGxlQ2hhbmdlV3JhcHBlcjogaGFuZGxlQ2hhbmdlV3JhcHBlcixcbiAgICBpc1N1YnNjcmliZWQ6IGlzU3Vic2NyaWJlZCxcbiAgICB0cnlTdWJzY3JpYmU6IHRyeVN1YnNjcmliZSxcbiAgICB0cnlVbnN1YnNjcmliZTogdHJ5VW5zdWJzY3JpYmUsXG4gICAgZ2V0TGlzdGVuZXJzOiBmdW5jdGlvbiBnZXRMaXN0ZW5lcnMoKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXJzO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHN1YnNjcmlwdGlvbjtcbn0iLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JzsgLy8gUmVhY3QgY3VycmVudGx5IHRocm93cyBhIHdhcm5pbmcgd2hlbiB1c2luZyB1c2VMYXlvdXRFZmZlY3Qgb24gdGhlIHNlcnZlci5cbi8vIFRvIGdldCBhcm91bmQgaXQsIHdlIGNhbiBjb25kaXRpb25hbGx5IHVzZUVmZmVjdCBvbiB0aGUgc2VydmVyIChuby1vcCkgYW5kXG4vLyB1c2VMYXlvdXRFZmZlY3QgaW4gdGhlIGJyb3dzZXIuIFdlIG5lZWQgdXNlTGF5b3V0RWZmZWN0IHRvIGVuc3VyZSB0aGUgc3RvcmVcbi8vIHN1YnNjcmlwdGlvbiBjYWxsYmFjayBhbHdheXMgaGFzIHRoZSBzZWxlY3RvciBmcm9tIHRoZSBsYXRlc3QgcmVuZGVyIGNvbW1pdFxuLy8gYXZhaWxhYmxlLCBvdGhlcndpc2UgYSBzdG9yZSB1cGRhdGUgbWF5IGhhcHBlbiBiZXR3ZWVuIHJlbmRlciBhbmQgdGhlIGVmZmVjdCxcbi8vIHdoaWNoIG1heSBjYXVzZSBtaXNzZWQgdXBkYXRlczsgd2UgYWxzbyBtdXN0IGVuc3VyZSB0aGUgc3RvcmUgc3Vic2NyaXB0aW9uXG4vLyBpcyBjcmVhdGVkIHN5bmNocm9ub3VzbHksIG90aGVyd2lzZSBhIHN0b3JlIHVwZGF0ZSBtYXkgb2NjdXIgYmVmb3JlIHRoZVxuLy8gc3Vic2NyaXB0aW9uIGlzIGNyZWF0ZWQgYW5kIGFuIGluY29uc2lzdGVudCBzdGF0ZSBtYXkgYmUgb2JzZXJ2ZWRcblxuZXhwb3J0IHZhciB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ICE9PSAndW5kZWZpbmVkJyA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdDsiLCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vQ29udGV4dCc7XG5pbXBvcnQgeyBjcmVhdGVTdWJzY3JpcHRpb24gfSBmcm9tICcuLi91dGlscy9TdWJzY3JpcHRpb24nO1xuaW1wb3J0IHsgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCB9IGZyb20gJy4uL3V0aWxzL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QnO1xuXG5mdW5jdGlvbiBQcm92aWRlcihfcmVmKSB7XG4gIHZhciBzdG9yZSA9IF9yZWYuc3RvcmUsXG4gICAgICBjb250ZXh0ID0gX3JlZi5jb250ZXh0LFxuICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuO1xuICB2YXIgY29udGV4dFZhbHVlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IGNyZWF0ZVN1YnNjcmlwdGlvbihzdG9yZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0b3JlOiBzdG9yZSxcbiAgICAgIHN1YnNjcmlwdGlvbjogc3Vic2NyaXB0aW9uXG4gICAgfTtcbiAgfSwgW3N0b3JlXSk7XG4gIHZhciBwcmV2aW91c1N0YXRlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHN0b3JlLmdldFN0YXRlKCk7XG4gIH0sIFtzdG9yZV0pO1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gY29udGV4dFZhbHVlLnN1YnNjcmlwdGlvbjtcbiAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IHN1YnNjcmlwdGlvbi5ub3RpZnlOZXN0ZWRTdWJzO1xuICAgIHN1YnNjcmlwdGlvbi50cnlTdWJzY3JpYmUoKTtcblxuICAgIGlmIChwcmV2aW91c1N0YXRlICE9PSBzdG9yZS5nZXRTdGF0ZSgpKSB7XG4gICAgICBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3VicygpO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBzdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gbnVsbDtcbiAgICB9O1xuICB9LCBbY29udGV4dFZhbHVlLCBwcmV2aW91c1N0YXRlXSk7XG4gIHZhciBDb250ZXh0ID0gY29udGV4dCB8fCBSZWFjdFJlZHV4Q29udGV4dDtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY29udGV4dFZhbHVlXG4gIH0sIGNoaWxkcmVuKTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICAgIHN0b3JlOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgc3Vic2NyaWJlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgZGlzcGF0Y2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICBnZXRTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICAgIH0pLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnlcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvdmlkZXI7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0Jztcbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSB2YWx1ZSBvZiB0aGUgYFJlYWN0UmVkdXhDb250ZXh0YC4gVGhpcyBpcyBhIGxvdy1sZXZlbFxyXG4gKiBob29rIHRoYXQgeW91IHNob3VsZCB1c3VhbGx5IG5vdCBuZWVkIHRvIGNhbGwgZGlyZWN0bHkuXHJcbiAqXHJcbiAqIEByZXR1cm5zIHthbnl9IHRoZSB2YWx1ZSBvZiB0aGUgYFJlYWN0UmVkdXhDb250ZXh0YFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICh7IHZhbHVlIH0pID0+IHtcclxuICogICBjb25zdCB7IHN0b3JlIH0gPSB1c2VSZWR1eENvbnRleHQoKVxyXG4gKiAgIHJldHVybiA8ZGl2PntzdG9yZS5nZXRTdGF0ZSgpfTwvZGl2PlxyXG4gKiB9XHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlUmVkdXhDb250ZXh0KCkge1xuICB2YXIgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dChSZWFjdFJlZHV4Q29udGV4dCk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWNvbnRleHRWYWx1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignY291bGQgbm90IGZpbmQgcmVhY3QtcmVkdXggY29udGV4dCB2YWx1ZTsgcGxlYXNlIGVuc3VyZSB0aGUgY29tcG9uZW50IGlzIHdyYXBwZWQgaW4gYSA8UHJvdmlkZXI+Jyk7XG4gIH1cblxuICByZXR1cm4gY29udGV4dFZhbHVlO1xufSIsImltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4uL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgeyB1c2VSZWR1eENvbnRleHQgYXMgdXNlRGVmYXVsdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vdXNlUmVkdXhDb250ZXh0Jztcbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlU3RvcmVgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VTdG9yZWAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RvcmVIb29rKGNvbnRleHQpIHtcbiAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkge1xuICAgIGNvbnRleHQgPSBSZWFjdFJlZHV4Q29udGV4dDtcbiAgfVxuXG4gIHZhciB1c2VSZWR1eENvbnRleHQgPSBjb250ZXh0ID09PSBSZWFjdFJlZHV4Q29udGV4dCA/IHVzZURlZmF1bHRSZWR1eENvbnRleHQgOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCk7XG4gIH07XG4gIHJldHVybiBmdW5jdGlvbiB1c2VTdG9yZSgpIHtcbiAgICB2YXIgX3VzZVJlZHV4Q29udGV4dCA9IHVzZVJlZHV4Q29udGV4dCgpLFxuICAgICAgICBzdG9yZSA9IF91c2VSZWR1eENvbnRleHQuc3RvcmU7XG5cbiAgICByZXR1cm4gc3RvcmU7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggc3RvcmUuXHJcbiAqXHJcbiAqIEByZXR1cm5zIHthbnl9IHRoZSByZWR1eCBzdG9yZVxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IHVzZVN0b3JlIH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcbiAqXHJcbiAqIGV4cG9ydCBjb25zdCBFeGFtcGxlQ29tcG9uZW50ID0gKCkgPT4ge1xyXG4gKiAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoKVxyXG4gKiAgIHJldHVybiA8ZGl2PntzdG9yZS5nZXRTdGF0ZSgpfTwvZGl2PlxyXG4gKiB9XHJcbiAqL1xuXG5leHBvcnQgdmFyIHVzZVN0b3JlID0gLyojX19QVVJFX18qL2NyZWF0ZVN0b3JlSG9vaygpOyIsImltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcbmltcG9ydCB7IHVzZVN0b3JlIGFzIHVzZURlZmF1bHRTdG9yZSwgY3JlYXRlU3RvcmVIb29rIH0gZnJvbSAnLi91c2VTdG9yZSc7XG4vKipcclxuICogSG9vayBmYWN0b3J5LCB3aGljaCBjcmVhdGVzIGEgYHVzZURpc3BhdGNoYCBob29rIGJvdW5kIHRvIGEgZ2l2ZW4gY29udGV4dC5cclxuICpcclxuICogQHBhcmFtIHtSZWFjdC5Db250ZXh0fSBbY29udGV4dD1SZWFjdFJlZHV4Q29udGV4dF0gQ29udGV4dCBwYXNzZWQgdG8geW91ciBgPFByb3ZpZGVyPmAuXHJcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBgdXNlRGlzcGF0Y2hgIGhvb2sgYm91bmQgdG8gdGhlIHNwZWNpZmllZCBjb250ZXh0LlxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURpc3BhdGNoSG9vayhjb250ZXh0KSB7XG4gIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICBjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQ7XG4gIH1cblxuICB2YXIgdXNlU3RvcmUgPSBjb250ZXh0ID09PSBSZWFjdFJlZHV4Q29udGV4dCA/IHVzZURlZmF1bHRTdG9yZSA6IGNyZWF0ZVN0b3JlSG9vayhjb250ZXh0KTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVzZURpc3BhdGNoKCkge1xuICAgIHZhciBzdG9yZSA9IHVzZVN0b3JlKCk7XG4gICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoO1xuICB9O1xufVxuLyoqXHJcbiAqIEEgaG9vayB0byBhY2Nlc3MgdGhlIHJlZHV4IGBkaXNwYXRjaGAgZnVuY3Rpb24uXHJcbiAqXHJcbiAqIEByZXR1cm5zIHthbnl8ZnVuY3Rpb259IHJlZHV4IHN0b3JlJ3MgYGRpc3BhdGNoYCBmdW5jdGlvblxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcclxuICogaW1wb3J0IHsgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuICpcclxuICogZXhwb3J0IGNvbnN0IENvdW50ZXJDb21wb25lbnQgPSAoeyB2YWx1ZSB9KSA9PiB7XHJcbiAqICAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpXHJcbiAqICAgY29uc3QgaW5jcmVhc2VDb3VudGVyID0gdXNlQ2FsbGJhY2soKCkgPT4gZGlzcGF0Y2goeyB0eXBlOiAnaW5jcmVhc2UtY291bnRlcicgfSksIFtdKVxyXG4gKiAgIHJldHVybiAoXHJcbiAqICAgICA8ZGl2PlxyXG4gKiAgICAgICA8c3Bhbj57dmFsdWV9PC9zcGFuPlxyXG4gKiAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2luY3JlYXNlQ291bnRlcn0+SW5jcmVhc2UgY291bnRlcjwvYnV0dG9uPlxyXG4gKiAgICAgPC9kaXY+XHJcbiAqICAgKVxyXG4gKiB9XHJcbiAqL1xuXG5leHBvcnQgdmFyIHVzZURpc3BhdGNoID0gLyojX19QVVJFX18qL2NyZWF0ZURpc3BhdGNoSG9vaygpOyIsImltcG9ydCB7IHVzZVJlZHVjZXIsIHVzZVJlZiwgdXNlTWVtbywgdXNlQ29udGV4dCwgdXNlRGVidWdWYWx1ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCBhcyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi91c2VSZWR1eENvbnRleHQnO1xuaW1wb3J0IHsgY3JlYXRlU3Vic2NyaXB0aW9uIH0gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcblxudmFyIHJlZkVxdWFsaXR5ID0gZnVuY3Rpb24gcmVmRXF1YWxpdHkoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn07XG5cbmZ1bmN0aW9uIHVzZVNlbGVjdG9yV2l0aFN0b3JlQW5kU3Vic2NyaXB0aW9uKHNlbGVjdG9yLCBlcXVhbGl0eUZuLCBzdG9yZSwgY29udGV4dFN1Yikge1xuICB2YXIgX3VzZVJlZHVjZXIgPSB1c2VSZWR1Y2VyKGZ1bmN0aW9uIChzKSB7XG4gICAgcmV0dXJuIHMgKyAxO1xuICB9LCAwKSxcbiAgICAgIGZvcmNlUmVuZGVyID0gX3VzZVJlZHVjZXJbMV07XG5cbiAgdmFyIHN1YnNjcmlwdGlvbiA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBjcmVhdGVTdWJzY3JpcHRpb24oc3RvcmUsIGNvbnRleHRTdWIpO1xuICB9LCBbc3RvcmUsIGNvbnRleHRTdWJdKTtcbiAgdmFyIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IgPSB1c2VSZWYoKTtcbiAgdmFyIGxhdGVzdFNlbGVjdG9yID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTdG9yZVN0YXRlID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTZWxlY3RlZFN0YXRlID0gdXNlUmVmKCk7XG4gIHZhciBzdG9yZVN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgdmFyIHNlbGVjdGVkU3RhdGU7XG5cbiAgdHJ5IHtcbiAgICBpZiAoc2VsZWN0b3IgIT09IGxhdGVzdFNlbGVjdG9yLmN1cnJlbnQgfHwgc3RvcmVTdGF0ZSAhPT0gbGF0ZXN0U3RvcmVTdGF0ZS5jdXJyZW50IHx8IGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCkge1xuICAgICAgdmFyIG5ld1NlbGVjdGVkU3RhdGUgPSBzZWxlY3RvcihzdG9yZVN0YXRlKTsgLy8gZW5zdXJlIGxhdGVzdCBzZWxlY3RlZCBzdGF0ZSBpcyByZXVzZWQgc28gdGhhdCBhIGN1c3RvbSBlcXVhbGl0eSBmdW5jdGlvbiBjYW4gcmVzdWx0IGluIGlkZW50aWNhbCByZWZlcmVuY2VzXG5cbiAgICAgIGlmIChsYXRlc3RTZWxlY3RlZFN0YXRlLmN1cnJlbnQgPT09IHVuZGVmaW5lZCB8fCAhZXF1YWxpdHlGbihuZXdTZWxlY3RlZFN0YXRlLCBsYXRlc3RTZWxlY3RlZFN0YXRlLmN1cnJlbnQpKSB7XG4gICAgICAgIHNlbGVjdGVkU3RhdGUgPSBuZXdTZWxlY3RlZFN0YXRlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudDtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQpIHtcbiAgICAgIGVyci5tZXNzYWdlICs9IFwiXFxuVGhlIGVycm9yIG1heSBiZSBjb3JyZWxhdGVkIHdpdGggdGhpcyBwcmV2aW91cyBlcnJvcjpcXG5cIiArIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudC5zdGFjayArIFwiXFxuXFxuXCI7XG4gICAgfVxuXG4gICAgdGhyb3cgZXJyO1xuICB9XG5cbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgbGF0ZXN0U2VsZWN0b3IuY3VycmVudCA9IHNlbGVjdG9yO1xuICAgIGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCA9IHN0b3JlU3RhdGU7XG4gICAgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50ID0gc2VsZWN0ZWRTdGF0ZTtcbiAgICBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gIH0pO1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZXMoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgbmV3U3RvcmVTdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7IC8vIEF2b2lkIGNhbGxpbmcgc2VsZWN0b3IgbXVsdGlwbGUgdGltZXMgaWYgdGhlIHN0b3JlJ3Mgc3RhdGUgaGFzIG5vdCBjaGFuZ2VkXG5cbiAgICAgICAgaWYgKG5ld1N0b3JlU3RhdGUgPT09IGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBfbmV3U2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdG9yLmN1cnJlbnQobmV3U3RvcmVTdGF0ZSk7XG5cbiAgICAgICAgaWYgKGVxdWFsaXR5Rm4oX25ld1NlbGVjdGVkU3RhdGUsIGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudCkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsYXRlc3RTZWxlY3RlZFN0YXRlLmN1cnJlbnQgPSBfbmV3U2VsZWN0ZWRTdGF0ZTtcbiAgICAgICAgbGF0ZXN0U3RvcmVTdGF0ZS5jdXJyZW50ID0gbmV3U3RvcmVTdGF0ZTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAvLyB3ZSBpZ25vcmUgYWxsIGVycm9ycyBoZXJlLCBzaW5jZSB3aGVuIHRoZSBjb21wb25lbnRcbiAgICAgICAgLy8gaXMgcmUtcmVuZGVyZWQsIHRoZSBzZWxlY3RvcnMgYXJlIGNhbGxlZCBhZ2FpbiwgYW5kXG4gICAgICAgIC8vIHdpbGwgdGhyb3cgYWdhaW4sIGlmIG5laXRoZXIgcHJvcHMgbm9yIHN0b3JlIHN0YXRlXG4gICAgICAgIC8vIGNoYW5nZWRcbiAgICAgICAgbGF0ZXN0U3Vic2NyaXB0aW9uQ2FsbGJhY2tFcnJvci5jdXJyZW50ID0gZXJyO1xuICAgICAgfVxuXG4gICAgICBmb3JjZVJlbmRlcigpO1xuICAgIH1cblxuICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gY2hlY2tGb3JVcGRhdGVzO1xuICAgIHN1YnNjcmlwdGlvbi50cnlTdWJzY3JpYmUoKTtcbiAgICBjaGVja0ZvclVwZGF0ZXMoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHN1YnNjcmlwdGlvbi50cnlVbnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH0sIFtzdG9yZSwgc3Vic2NyaXB0aW9uXSk7XG4gIHJldHVybiBzZWxlY3RlZFN0YXRlO1xufVxuLyoqXHJcbiAqIEhvb2sgZmFjdG9yeSwgd2hpY2ggY3JlYXRlcyBhIGB1c2VTZWxlY3RvcmAgaG9vayBib3VuZCB0byBhIGdpdmVuIGNvbnRleHQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7UmVhY3QuQ29udGV4dH0gW2NvbnRleHQ9UmVhY3RSZWR1eENvbnRleHRdIENvbnRleHQgcGFzc2VkIHRvIHlvdXIgYDxQcm92aWRlcj5gLlxyXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgYHVzZVNlbGVjdG9yYCBob29rIGJvdW5kIHRvIHRoZSBzcGVjaWZpZWQgY29udGV4dC5cclxuICovXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlbGVjdG9ySG9vayhjb250ZXh0KSB7XG4gIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICBjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQ7XG4gIH1cblxuICB2YXIgdXNlUmVkdXhDb250ZXh0ID0gY29udGV4dCA9PT0gUmVhY3RSZWR1eENvbnRleHQgPyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpO1xuICB9O1xuICByZXR1cm4gZnVuY3Rpb24gdXNlU2VsZWN0b3Ioc2VsZWN0b3IsIGVxdWFsaXR5Rm4pIHtcbiAgICBpZiAoZXF1YWxpdHlGbiA9PT0gdm9pZCAwKSB7XG4gICAgICBlcXVhbGl0eUZuID0gcmVmRXF1YWxpdHk7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IG11c3QgcGFzcyBhIHNlbGVjdG9yIHRvIHVzZVNlbGVjdG9yXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIHNlbGVjdG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBtdXN0IHBhc3MgYSBmdW5jdGlvbiBhcyBhIHNlbGVjdG9yIHRvIHVzZVNlbGVjdG9yXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGVxdWFsaXR5Rm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IG11c3QgcGFzcyBhIGZ1bmN0aW9uIGFzIGFuIGVxdWFsaXR5IGZ1bmN0aW9uIHRvIHVzZVNlbGVjdG9yXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBfdXNlUmVkdXhDb250ZXh0ID0gdXNlUmVkdXhDb250ZXh0KCksXG4gICAgICAgIHN0b3JlID0gX3VzZVJlZHV4Q29udGV4dC5zdG9yZSxcbiAgICAgICAgY29udGV4dFN1YiA9IF91c2VSZWR1eENvbnRleHQuc3Vic2NyaXB0aW9uO1xuXG4gICAgdmFyIHNlbGVjdGVkU3RhdGUgPSB1c2VTZWxlY3RvcldpdGhTdG9yZUFuZFN1YnNjcmlwdGlvbihzZWxlY3RvciwgZXF1YWxpdHlGbiwgc3RvcmUsIGNvbnRleHRTdWIpO1xuICAgIHVzZURlYnVnVmFsdWUoc2VsZWN0ZWRTdGF0ZSk7XG4gICAgcmV0dXJuIHNlbGVjdGVkU3RhdGU7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggc3RvcmUncyBzdGF0ZS4gVGhpcyBob29rIHRha2VzIGEgc2VsZWN0b3IgZnVuY3Rpb25cclxuICogYXMgYW4gYXJndW1lbnQuIFRoZSBzZWxlY3RvciBpcyBjYWxsZWQgd2l0aCB0aGUgc3RvcmUgc3RhdGUuXHJcbiAqXHJcbiAqIFRoaXMgaG9vayB0YWtlcyBhbiBvcHRpb25hbCBlcXVhbGl0eSBjb21wYXJpc29uIGZ1bmN0aW9uIGFzIHRoZSBzZWNvbmQgcGFyYW1ldGVyXHJcbiAqIHRoYXQgYWxsb3dzIHlvdSB0byBjdXN0b21pemUgdGhlIHdheSB0aGUgc2VsZWN0ZWQgc3RhdGUgaXMgY29tcGFyZWQgdG8gZGV0ZXJtaW5lXHJcbiAqIHdoZXRoZXIgdGhlIGNvbXBvbmVudCBuZWVkcyB0byBiZSByZS1yZW5kZXJlZC5cclxuICpcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gc2VsZWN0b3IgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb249fSBlcXVhbGl0eUZuIHRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgdXNlZCB0byBkZXRlcm1pbmUgZXF1YWxpdHlcclxuICpcclxuICogQHJldHVybnMge2FueX0gdGhlIHNlbGVjdGVkIHN0YXRlXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuICogaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuICpcclxuICogZXhwb3J0IGNvbnN0IENvdW50ZXJDb21wb25lbnQgPSAoKSA9PiB7XHJcbiAqICAgY29uc3QgY291bnRlciA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLmNvdW50ZXIpXHJcbiAqICAgcmV0dXJuIDxkaXY+e2NvdW50ZXJ9PC9kaXY+XHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCB2YXIgdXNlU2VsZWN0b3IgPSAvKiNfX1BVUkVfXyovY3JlYXRlU2VsZWN0b3JIb29rKCk7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufSIsImltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7XG4gIHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzO1xuICBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59IiwiZXhwb3J0ICogZnJvbSAnLi9leHBvcnRzJztcbmltcG9ydCB7IHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIGFzIGJhdGNoIH0gZnJvbSAnLi91dGlscy9yZWFjdEJhdGNoZWRVcGRhdGVzJztcbmltcG9ydCB7IHNldEJhdGNoIH0gZnJvbSAnLi91dGlscy9iYXRjaCc7IC8vIEVuYWJsZSBiYXRjaGVkIHVwZGF0ZXMgaW4gb3VyIHN1YnNjcmlwdGlvbnMgZm9yIHVzZVxuLy8gd2l0aCBzdGFuZGFyZCBSZWFjdCByZW5kZXJlcnMgKFJlYWN0RE9NLCBSZWFjdCBOYXRpdmUpXG5cbnNldEJhdGNoKGJhdGNoKTtcbmV4cG9ydCB7IGJhdGNoIH07IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgICB9XG4gICAgdmFyIHByb3ZpZGVkID0gdHlwZW9mIG1lc3NhZ2UgPT09ICdmdW5jdGlvbicgPyBtZXNzYWdlKCkgOiBtZXNzYWdlO1xuICAgIHZhciB2YWx1ZSA9IHByb3ZpZGVkID8gXCJcIi5jb25jYXQocHJlZml4LCBcIjogXCIpLmNvbmNhdChwcm92aWRlZCkgOiBwcmVmaXg7XG4gICAgdGhyb3cgbmV3IEVycm9yKHZhbHVlKTtcbn1cblxuZXhwb3J0IHsgaW52YXJpYW50IGFzIGRlZmF1bHQgfTtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBwYXRoLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwcmVmaXgudG9Mb3dlckNhc2UoKSkgPT09IDAgJiYgJy8/IycuaW5kZXhPZihwYXRoLmNoYXJBdChwcmVmaXgubGVuZ3RoKSkgIT09IC0xO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyaXBIYXNoKHVybCkge1xuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyB1cmwgOiB1cmwuc2xpY2UoMCwgaGFzaEluZGV4KTtcbn1cblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uoc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcjJyArIHBhdGgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBfcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XG4gICAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwkJDEocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2VUYWcgJiYgYmFzZVRhZy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgaHJlZiA9IHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhyZWYgKyAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG52YXIgY29tbW9uanNHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gXCJ1bmRlZmluZWRcIiAvLyAnZ2xvYmFsIHByb3Blcidcbj8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5nbG9iYWxUaGlzIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyAvLyBCcm93c2VyXG46IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgLy8gbm9kZS5qc1xuOiB7fTtcblxuZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XG4gIHZhciBrZXkgPSBcIl9fZ2xvYmFsX3VuaXF1ZV9pZF9fXCI7XG4gIHJldHVybiBjb21tb25qc0dsb2JhbFtrZXldID0gKGNvbW1vbmpzR2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufSAvLyBJbmxpbmVkIE9iamVjdC5pcyBwb2x5ZmlsbC5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuXG5cbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9IFwiX19jcmVhdGUtcmVhY3QtY29udGV4dC1cIiArIGdldFVuaXF1ZUlkKCkgKyBcIl9fXCI7XG5cbiAgdmFyIFByb3ZpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7IC8vIE5vIGNoYW5nZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSBcImZ1bmN0aW9uXCIgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZygoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgXCJjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhIFwiICsgXCIzMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogXCIgKyBjaGFuZ2VkQml0cykgOiB2b2lkIDA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oUmVhY3QuQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQyKSB7XG4gICAgX2luaGVyaXRzTG9vc2UoQ29uc3VtZXIsIF9SZWFjdCRDb21wb25lbnQyKTtcblxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xuICAgICAgdmFyIF90aGlzMjtcblxuICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMyID0gX1JlYWN0JENvbXBvbmVudDIuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50MiwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICAgIF90aGlzMi5vYnNlcnZlZEJpdHMgPSB2b2lkIDA7XG4gICAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfTtcblxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG5cbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpczI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90bzIgPSBDb25zdW1lci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCAvLyBTdWJzY3JpYmUgdG8gYWxsIGNoYW5nZXMgYnkgZGVmYXVsdFxuICAgICAgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIC8vIFN1YnNjcmliZSB0byBhbGwgY2hhbmdlcyBieSBkZWZhdWx0XG4gICAgICA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oUmVhY3QuQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxuLy8gTUlUIExpY2Vuc2VcbnZhciBjcmVhdGVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgaGlzdG9yeUNvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlTmFtZWRDb250ZXh0KFwiUm91dGVyLUhpc3RvcnlcIik7XG5cbnZhciBjb250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgX3RoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuXG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHtcbiAgICAgIC8vIEFueSBwcmUtbW91bnQgbG9jYXRpb24gY2hhbmdlcyBoYXZlIGJlZW4gY2FwdHVyZWQgYXRcbiAgICAgIC8vIHRoaXMgcG9pbnQsIHNvIHVucmVnaXN0ZXIgdGhlIGxpc3RlbmVyLlxuICAgICAgdGhpcy51bmxpc3RlbigpO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICB0aGlzLnVubGlzdGVuID0gdGhpcy5wcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzMi5faXNNb3VudGVkKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB7XG4gICAgICB0aGlzLnVubGlzdGVuKCk7XG4gICAgICB0aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuX3BlbmRpbmdMb2NhdGlvbiA9IG51bGw7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCh0aGlzLnN0YXRlLmxvY2F0aW9uLnBhdGhuYW1lKSxcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0XG4gICAgICB9XG4gICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoaGlzdG9yeUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZTogdGhpcy5wcm9wcy5oaXN0b3J5XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgTGlmZWN5Y2xlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBMaWZlY3ljbGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXG4gKi9cblxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFByb21wdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICBpZiAoIXdoZW4gfHwgY29udGV4dC5zdGF0aWNDb250ZXh0KSByZXR1cm4gbnVsbDtcbiAgICB2YXIgbWV0aG9kID0gY29udGV4dC5oaXN0b3J5LmJsb2NrO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQuc3RhdGljQ29udGV4dDtcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG5cbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgICAgICAgIGtleTogcHJldkxvY2F0aW9uLmtleVxuICAgICAgICB9KSkpIHtcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdG86IHRvXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUkMSA9IHt9O1xudmFyIGNhY2hlTGltaXQkMSA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQkMSA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoJDEocGF0aCwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgcGF0aENhY2hlID0gY2FjaGUkMVtjYWNoZUtleV0gfHwgKGNhY2hlJDFbY2FjaGVLZXldID0ge30pO1xuICBpZiAocGF0aENhY2hlW3BhdGhdKSByZXR1cm4gcGF0aENhY2hlW3BhdGhdO1xuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgcmVzdWx0ID0ge1xuICAgIHJlZ2V4cDogcmVnZXhwLFxuICAgIGtleXM6IGtleXNcbiAgfTtcblxuICBpZiAoY2FjaGVDb3VudCQxIDwgY2FjaGVMaW1pdCQxKSB7XG4gICAgcGF0aENhY2hlW3BhdGhdID0gcmVzdWx0O1xuICAgIGNhY2hlQ291bnQkMSsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxuICovXG5cblxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7XG4gICAgICBwYXRoOiBvcHRpb25zXG4gICAgfTtcbiAgfVxuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG4gIHZhciBwYXRocyA9IFtdLmNvbmNhdChwYXRoKTtcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xuICAgIGlmICghcGF0aCAmJiBwYXRoICE9PSBcIlwiKSByZXR1cm4gbnVsbDtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgkMShwYXRoLCB7XG4gICAgICBlbmQ6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZVxuICAgIH0pLFxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxuICAgICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcbiAgICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG4gICAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogcGF0aCxcbiAgICAgIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXG4gICAgICAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICAgIGlzRXhhY3Q6IGlzRXhhY3QsXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgIH0sIHt9KVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgcGF0aCkge1xuICB2YXIgdmFsdWUgPSBjaGlsZHJlbihwcm9wcyk7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodmFsdWUgIT09IHVuZGVmaW5lZCwgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArIChcIjxSb3V0ZVwiICsgKHBhdGggPyBcIiBwYXRoPVxcXCJcIiArIHBhdGggKyBcIlxcXCJcIiA6IFwiXCIpICsgXCI+LCBidXQgeW91IFwiKSArIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiKSA6IHZvaWQgMDtcbiAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxuXG52YXIgUm91dGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JDEpIHtcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBtYXRjaCA9IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggPyBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XG5cbiAgICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pKSB7XG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IHByb3BzXG4gICAgICB9LCBwcm9wcy5tYXRjaCA/IGNoaWxkcmVuID8gdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IGNoaWxkcmVuIDogY29tcG9uZW50ID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBudWxsKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpIDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxuXG52YXIgU3RhdGljUm91dGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wcyRjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMkY29udGV4dDtcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgICB9LFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaGlzdG9yeTogaGlzdG9yeSxcbiAgICAgIHN0YXRpY0NvbnRleHQ6IGNvbnRleHRcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFN0YXRpY1JvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTdGF0aWNSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKVxuICB9O1xuXG4gIFN0YXRpY1JvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxTdGF0aWNSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBTdGF0aWNSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTd2l0Y2gucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG5cbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goX3RoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiAvKiNfX1BVUkVfXyovUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XG4gICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgfSkpIDogY29udGV4dC5tYXRjaDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWF0Y2ggPyAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGVsZW1lbnQsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBjb21wdXRlZE1hdGNoOiBtYXRjaFxuICAgICAgfSkgOiBudWxsO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3dpdGNoLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXG4gKi9cblxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb25lbnQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcblxuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFwiICsgZGlzcGxheU5hbWUgKyBcIiAvPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCBjb250ZXh0LCB7XG4gICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBDLnByb3BUeXBlcyA9IHtcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG52YXIgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5mdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlSGlzdG9yeSgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGhpc3RvcnlDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5sb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIHVzZVBhcmFtcygpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoLnBhcmFtcyA6IHt9O1xufVxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHBhdGgpIDogbWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsJDEgPSB3aW5kb3c7XG4gICAgdmFyIGtleSA9IFwiX19yZWFjdF9yb3V0ZXJfYnVpbGRfX1wiO1xuICAgIHZhciBidWlsZE5hbWVzID0ge1xuICAgICAgY2pzOiBcIkNvbW1vbkpTXCIsXG4gICAgICBlc206IFwiRVMgbW9kdWxlc1wiLFxuICAgICAgdW1kOiBcIlVNRFwiXG4gICAgfTtcblxuICAgIGlmIChnbG9iYWwkMVtrZXldICYmIGdsb2JhbCQxW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWwkMVtrZXldXTtcbiAgICAgIHZhciBzZWNvbmRhcnlCdWlsZE5hbWUgPSBidWlsZE5hbWVzW1wiZXNtXCJdOyAvLyBUT0RPOiBBZGQgbGluayB0byBhcnRpY2xlIHRoYXQgZXhwbGFpbnMgaW4gZGV0YWlsIGhvdyB0byBhdm9pZFxuICAgICAgLy8gbG9hZGluZyAyIGRpZmZlcmVudCBidWlsZHMuXG5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgbG9hZGluZyB0aGUgXCIgKyBzZWNvbmRhcnlCdWlsZE5hbWUgKyBcIiBidWlsZCBvZiBSZWFjdCBSb3V0ZXIgXCIgKyAoXCJvbiBhIHBhZ2UgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcgdGhlIFwiICsgaW5pdGlhbEJ1aWxkTmFtZSArIFwiIFwiKSArIFwiYnVpbGQsIHNvIHRoaW5ncyB3b24ndCB3b3JrIHJpZ2h0LlwiKTtcbiAgICB9XG5cbiAgICBnbG9iYWwkMVtrZXldID0gXCJlc21cIjtcbiAgfVxufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBoaXN0b3J5Q29udGV4dCBhcyBfX0hpc3RvcnlDb250ZXh0LCBjb250ZXh0IGFzIF9fUm91dGVyQ29udGV4dCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci5qcy5tYXBcbiIsImltcG9ydCB7IFJvdXRlciwgX19Sb3V0ZXJDb250ZXh0LCBtYXRjaFBhdGggfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHVzZUhpc3RvcnksIHVzZUxvY2F0aW9uLCB1c2VQYXJhbXMsIHVzZVJvdXRlTWF0Y2gsIHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGNyZWF0ZVBhdGggfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCB1c2VzIEhUTUw1IGhpc3RvcnkuXG4gKi9cblxudmFyIEJyb3dzZXJSb3V0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoQnJvd3NlclJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQnJvd3NlclJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlQnJvd3Nlckhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBCcm93c2VyUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyXG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuXG52YXIgSGFzaFJvdXRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBIYXNoUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIYXNoSGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEhhc2hSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cblxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgcHJvcHMpO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTGlua0FuY2hvci5kaXNwbGF5TmFtZSA9IFwiTGlua0FuY2hvclwiO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cblxuXG52YXIgTGluayA9IGZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYyLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYyJGNvbXBvbmVudCA9IF9yZWYyLmNvbXBvbmVudCxcbiAgICAgIGNvbXBvbmVudCA9IF9yZWYyJGNvbXBvbmVudCA9PT0gdm9pZCAwID8gTGlua0FuY2hvciA6IF9yZWYyJGNvbXBvbmVudCxcbiAgICAgIHJlcGxhY2UgPSBfcmVmMi5yZXBsYWNlLFxuICAgICAgdG8gPSBfcmVmMi50byxcbiAgICAgIGlubmVyUmVmID0gX3JlZjIuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImNvbXBvbmVudFwiLCBcInJlcGxhY2VcIiwgXCJ0b1wiLCBcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoX19Sb3V0ZXJDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQuaGlzdG9yeTtcbiAgICB2YXIgbG9jYXRpb24gPSBub3JtYWxpemVUb0xvY2F0aW9uKHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjb250ZXh0LmxvY2F0aW9uKSwgY29udGV4dC5sb2NhdGlvbik7XG4gICAgdmFyIGhyZWYgPSBsb2NhdGlvbiA/IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbikgOiBcIlwiO1xuXG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhyZWY6IGhyZWYsXG4gICAgICBuYXZpZ2F0ZTogZnVuY3Rpb24gbmF2aWdhdGUoKSB7XG4gICAgICAgIHZhciBsb2NhdGlvbiA9IHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjb250ZXh0LmxvY2F0aW9uKTtcbiAgICAgICAgdmFyIGlzRHVwbGljYXRlTmF2aWdhdGlvbiA9IGNyZWF0ZVBhdGgoY29udGV4dC5sb2NhdGlvbikgPT09IGNyZWF0ZVBhdGgobm9ybWFsaXplVG9Mb2NhdGlvbihsb2NhdGlvbikpO1xuICAgICAgICB2YXIgbWV0aG9kID0gcmVwbGFjZSB8fCBpc0R1cGxpY2F0ZU5hdmlnYXRpb24gPyBoaXN0b3J5LnJlcGxhY2UgOiBoaXN0b3J5LnB1c2g7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9XG4gICAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgICBpZiAoZm9yd2FyZFJlZlNoaW0gIT09IGZvcndhcmRSZWYpIHtcbiAgICAgIHByb3BzLnJlZiA9IGZvcndhcmRlZFJlZiB8fCBpbm5lclJlZjtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHMuaW5uZXJSZWYgPSBpbm5lclJlZjtcbiAgICB9XG5cbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzZW5zaXRpdmVcIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChfX1JvdXRlckNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxOYXZMaW5rPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBjdXJyZW50TG9jYXRpb24gPSBsb2NhdGlvblByb3AgfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IG5vcm1hbGl6ZVRvTG9jYXRpb24ocmVzb2x2ZVRvTG9jYXRpb24odG8sIGN1cnJlbnRMb2NhdGlvbiksIGN1cnJlbnRMb2NhdGlvbik7XG4gICAgdmFyIHBhdGggPSB0b0xvY2F0aW9uLnBhdGhuYW1lOyAvLyBSZWdleCB0YWtlbiBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHAvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDIwMlxuXG4gICAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgICB2YXIgbWF0Y2ggPSBlc2NhcGVkUGF0aCA/IG1hdGNoUGF0aChjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUsIHtcbiAgICAgIHBhdGg6IGVzY2FwZWRQYXRoLFxuICAgICAgZXhhY3Q6IGV4YWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmUsXG4gICAgICBzdHJpY3Q6IHN0cmljdFxuICAgIH0pIDogbnVsbDtcbiAgICB2YXIgaXNBY3RpdmUgPSAhIShpc0FjdGl2ZVByb3AgPyBpc0FjdGl2ZVByb3AobWF0Y2gsIGN1cnJlbnRMb2NhdGlvbikgOiBtYXRjaCk7XG4gICAgdmFyIGNsYXNzTmFtZSA9IHR5cGVvZiBjbGFzc05hbWVQcm9wID09PSBcImZ1bmN0aW9uXCIgPyBjbGFzc05hbWVQcm9wKGlzQWN0aXZlKSA6IGNsYXNzTmFtZVByb3A7XG4gICAgdmFyIHN0eWxlID0gdHlwZW9mIHN0eWxlUHJvcCA9PT0gXCJmdW5jdGlvblwiID8gc3R5bGVQcm9wKGlzQWN0aXZlKSA6IHN0eWxlUHJvcDtcblxuICAgIGlmIChpc0FjdGl2ZSkge1xuICAgICAgY2xhc3NOYW1lID0gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lLCBhY3RpdmVDbGFzc05hbWUpO1xuICAgICAgc3R5bGUgPSBfZXh0ZW5kcyh7fSwgc3R5bGUsIGFjdGl2ZVN0eWxlKTtcbiAgICB9XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTmF2TGluay5kaXNwbGF5TmFtZSA9IFwiTmF2TGlua1wiO1xuICB2YXIgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcInBhZ2VcIiwgXCJzdGVwXCIsIFwibG9jYXRpb25cIiwgXCJkYXRlXCIsIFwidGltZVwiLCBcInRydWVcIiwgXCJmYWxzZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSksXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSlcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBBYm91dCgpIHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGgxIGRhdGEtdGVzdGlkPVwicGFnZS10aXRsZVwiPkFib3V0PC9oMT5cbiAgICAgIDxwPlRoaXMgaXMgYW4gZXhhbXBsZSBhcHBsaWNhdGlvbi48L3A+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFib3V0O1xuIiwiaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMic7XG5cbi8qKlxuICogQWRhcHRlZCBmcm9tIFJlYWN0OiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9tYXN0ZXIvcGFja2FnZXMvc2hhcmVkL2Zvcm1hdFByb2RFcnJvck1lc3NhZ2UuanNcbiAqXG4gKiBEbyBub3QgcmVxdWlyZSB0aGlzIG1vZHVsZSBkaXJlY3RseSEgVXNlIG5vcm1hbCB0aHJvdyBlcnJvciBjYWxscy4gVGhlc2UgbWVzc2FnZXMgd2lsbCBiZSByZXBsYWNlZCB3aXRoIGVycm9yIGNvZGVzXG4gKiBkdXJpbmcgYnVpbGQuXG4gKiBAcGFyYW0ge251bWJlcn0gY29kZVxuICovXG5mdW5jdGlvbiBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKGNvZGUpIHtcbiAgcmV0dXJuIFwiTWluaWZpZWQgUmVkdXggZXJyb3IgI1wiICsgY29kZSArIFwiOyB2aXNpdCBodHRwczovL3JlZHV4LmpzLm9yZy9FcnJvcnM/Y29kZT1cIiArIGNvZGUgKyBcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciBcIiArICd1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzLiAnO1xufVxuXG4vLyBJbmxpbmVkIHZlcnNpb24gb2YgdGhlIGBzeW1ib2wtb2JzZXJ2YWJsZWAgcG9seWZpbGxcbnZhciAkJG9ic2VydmFibGUgPSAoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wub2JzZXJ2YWJsZSB8fCAnQEBvYnNlcnZhYmxlJztcbn0pKCk7XG5cbi8qKlxuICogVGhlc2UgYXJlIHByaXZhdGUgYWN0aW9uIHR5cGVzIHJlc2VydmVkIGJ5IFJlZHV4LlxuICogRm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHlvdSBtdXN0IHJldHVybiB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIElmIHRoZSBjdXJyZW50IHN0YXRlIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLlxuICogRG8gbm90IHJlZmVyZW5jZSB0aGVzZSBhY3Rpb24gdHlwZXMgZGlyZWN0bHkgaW4geW91ciBjb2RlLlxuICovXG52YXIgcmFuZG9tU3RyaW5nID0gZnVuY3Rpb24gcmFuZG9tU3RyaW5nKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDcpLnNwbGl0KCcnKS5qb2luKCcuJyk7XG59O1xuXG52YXIgQWN0aW9uVHlwZXMgPSB7XG4gIElOSVQ6IFwiQEByZWR1eC9JTklUXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUkVQTEFDRTogXCJAQHJlZHV4L1JFUExBQ0VcIiArIHJhbmRvbVN0cmluZygpLFxuICBQUk9CRV9VTktOT1dOX0FDVElPTjogZnVuY3Rpb24gUFJPQkVfVU5LTk9XTl9BQ1RJT04oKSB7XG4gICAgcmV0dXJuIFwiQEByZWR1eC9QUk9CRV9VTktOT1dOX0FDVElPTlwiICsgcmFuZG9tU3RyaW5nKCk7XG4gIH1cbn07XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgYXJndW1lbnQgYXBwZWFycyB0byBiZSBhIHBsYWluIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICB2YXIgcHJvdG8gPSBvYmo7XG5cbiAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikgPT09IHByb3RvO1xufVxuXG4vLyBJbmxpbmVkIC8gc2hvcnRlbmVkIHZlcnNpb24gb2YgYGtpbmRPZmAgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9raW5kLW9mXG5mdW5jdGlvbiBtaW5pS2luZE9mKHZhbCkge1xuICBpZiAodmFsID09PSB2b2lkIDApIHJldHVybiAndW5kZWZpbmVkJztcbiAgaWYgKHZhbCA9PT0gbnVsbCkgcmV0dXJuICdudWxsJztcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgY2FzZSAnbnVtYmVyJzpcbiAgICBjYXNlICdzeW1ib2wnOlxuICAgIGNhc2UgJ2Z1bmN0aW9uJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICB9XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSByZXR1cm4gJ2FycmF5JztcbiAgaWYgKGlzRGF0ZSh2YWwpKSByZXR1cm4gJ2RhdGUnO1xuICBpZiAoaXNFcnJvcih2YWwpKSByZXR1cm4gJ2Vycm9yJztcbiAgdmFyIGNvbnN0cnVjdG9yTmFtZSA9IGN0b3JOYW1lKHZhbCk7XG5cbiAgc3dpdGNoIChjb25zdHJ1Y3Rvck5hbWUpIHtcbiAgICBjYXNlICdTeW1ib2wnOlxuICAgIGNhc2UgJ1Byb21pc2UnOlxuICAgIGNhc2UgJ1dlYWtNYXAnOlxuICAgIGNhc2UgJ1dlYWtTZXQnOlxuICAgIGNhc2UgJ01hcCc6XG4gICAgY2FzZSAnU2V0JzpcbiAgICAgIHJldHVybiBjb25zdHJ1Y3Rvck5hbWU7XG4gIH0gLy8gb3RoZXJcblxuXG4gIHJldHVybiB0eXBlLnNsaWNlKDgsIC0xKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xccy9nLCAnJyk7XG59XG5cbmZ1bmN0aW9uIGN0b3JOYW1lKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbC5jb25zdHJ1Y3RvciA9PT0gJ2Z1bmN0aW9uJyA/IHZhbC5jb25zdHJ1Y3Rvci5uYW1lIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNFcnJvcih2YWwpIHtcbiAgcmV0dXJuIHZhbCBpbnN0YW5jZW9mIEVycm9yIHx8IHR5cGVvZiB2YWwubWVzc2FnZSA9PT0gJ3N0cmluZycgJiYgdmFsLmNvbnN0cnVjdG9yICYmIHR5cGVvZiB2YWwuY29uc3RydWN0b3Iuc3RhY2tUcmFjZUxpbWl0ID09PSAnbnVtYmVyJztcbn1cblxuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICBpZiAodmFsIGluc3RhbmNlb2YgRGF0ZSkgcmV0dXJuIHRydWU7XG4gIHJldHVybiB0eXBlb2YgdmFsLnRvRGF0ZVN0cmluZyA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgdmFsLmdldERhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHZhbC5zZXREYXRlID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBraW5kT2YodmFsKSB7XG4gIHZhciB0eXBlT2ZWYWwgPSB0eXBlb2YgdmFsO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdHlwZU9mVmFsID0gbWluaUtpbmRPZih2YWwpO1xuICB9XG5cbiAgcmV0dXJuIHR5cGVPZlZhbDtcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICpcbiAqICoqV2UgcmVjb21tZW5kIHVzaW5nIHRoZSBgY29uZmlndXJlU3RvcmVgIG1ldGhvZFxuICogb2YgdGhlIGBAcmVkdXhqcy90b29sa2l0YCBwYWNrYWdlKiosIHdoaWNoIHJlcGxhY2VzIGBjcmVhdGVTdG9yZWAuXG4gKlxuICogUmVkdXggVG9vbGtpdCBpcyBvdXIgcmVjb21tZW5kZWQgYXBwcm9hY2ggZm9yIHdyaXRpbmcgUmVkdXggbG9naWMgdG9kYXksXG4gKiBpbmNsdWRpbmcgc3RvcmUgc2V0dXAsIHJlZHVjZXJzLCBkYXRhIGZldGNoaW5nLCBhbmQgbW9yZS5cbiAqXG4gKiAqKkZvciBtb3JlIGRldGFpbHMsIHBsZWFzZSByZWFkIHRoaXMgUmVkdXggZG9jcyBwYWdlOioqXG4gKiAqKmh0dHBzOi8vcmVkdXguanMub3JnL2ludHJvZHVjdGlvbi93aHktcnRrLWlzLXJlZHV4LXRvZGF5KipcbiAqXG4gKiBgY29uZmlndXJlU3RvcmVgIGZyb20gUmVkdXggVG9vbGtpdCBpcyBhbiBpbXByb3ZlZCB2ZXJzaW9uIG9mIGBjcmVhdGVTdG9yZWAgdGhhdFxuICogc2ltcGxpZmllcyBzZXR1cCBhbmQgaGVscHMgYXZvaWQgY29tbW9uIGJ1Z3MuXG4gKlxuICogWW91IHNob3VsZCBub3QgYmUgdXNpbmcgdGhlIGByZWR1eGAgY29yZSBwYWNrYWdlIGJ5IGl0c2VsZiB0b2RheSwgZXhjZXB0IGZvciBsZWFybmluZyBwdXJwb3Nlcy5cbiAqIFRoZSBgY3JlYXRlU3RvcmVgIG1ldGhvZCBmcm9tIHRoZSBjb3JlIGByZWR1eGAgcGFja2FnZSB3aWxsIG5vdCBiZSByZW1vdmVkLCBidXQgd2UgZW5jb3VyYWdlXG4gKiBhbGwgdXNlcnMgdG8gbWlncmF0ZSB0byB1c2luZyBSZWR1eCBUb29sa2l0IGZvciBhbGwgUmVkdXggY29kZS5cbiAqXG4gKiBJZiB5b3Ugd2FudCB0byB1c2UgYGNyZWF0ZVN0b3JlYCB3aXRob3V0IHRoaXMgdmlzdWFsIGRlcHJlY2F0aW9uIHdhcm5pbmcsIHVzZVxuICogdGhlIGBsZWdhY3lfY3JlYXRlU3RvcmVgIGltcG9ydCBpbnN0ZWFkOlxuICpcbiAqIGBpbXBvcnQgeyBsZWdhY3lfY3JlYXRlU3RvcmUgYXMgY3JlYXRlU3RvcmV9IGZyb20gJ3JlZHV4J2BcbiAqXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFyZ3VtZW50c1szXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDApIDogJ0l0IGxvb2tzIGxpa2UgeW91IGFyZSBwYXNzaW5nIHNldmVyYWwgc3RvcmUgZW5oYW5jZXJzIHRvICcgKyAnY3JlYXRlU3RvcmUoKS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkLiBJbnN0ZWFkLCBjb21wb3NlIHRoZW0gJyArICd0b2dldGhlciB0byBhIHNpbmdsZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL3R1dG9yaWFscy9mdW5kYW1lbnRhbHMvcGFydC00LXN0b3JlI2NyZWF0aW5nLWEtc3RvcmUtd2l0aC1lbmhhbmNlcnMgZm9yIGFuIGV4YW1wbGUuJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbmhhbmNlciA9IHByZWxvYWRlZFN0YXRlO1xuICAgIHByZWxvYWRlZFN0YXRlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxKSA6IFwiRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YoZW5oYW5jZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBlbmhhbmNlcihjcmVhdGVTdG9yZSkocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMikgOiBcIkV4cGVjdGVkIHRoZSByb290IHJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihyZWR1Y2VyKSArIFwiJ1wiKTtcbiAgfVxuXG4gIHZhciBjdXJyZW50UmVkdWNlciA9IHJlZHVjZXI7XG4gIHZhciBjdXJyZW50U3RhdGUgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgdmFyIGN1cnJlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIG5leHRMaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzO1xuICB2YXIgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAvKipcbiAgICogVGhpcyBtYWtlcyBhIHNoYWxsb3cgY29weSBvZiBjdXJyZW50TGlzdGVuZXJzIHNvIHdlIGNhbiB1c2VcbiAgICogbmV4dExpc3RlbmVycyBhcyBhIHRlbXBvcmFyeSBsaXN0IHdoaWxlIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBUaGlzIHByZXZlbnRzIGFueSBidWdzIGFyb3VuZCBjb25zdW1lcnMgY2FsbGluZ1xuICAgKiBzdWJzY3JpYmUvdW5zdWJzY3JpYmUgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc3BhdGNoLlxuICAgKi9cblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG5cblxuICBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMykgOiAnWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgY2hhbmdlIGxpc3RlbmVyLiBJdCB3aWxsIGJlIGNhbGxlZCBhbnkgdGltZSBhbiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCxcbiAgICogYW5kIHNvbWUgcGFydCBvZiB0aGUgc3RhdGUgdHJlZSBtYXkgcG90ZW50aWFsbHkgaGF2ZSBjaGFuZ2VkLiBZb3UgbWF5IHRoZW5cbiAgICogY2FsbCBgZ2V0U3RhdGUoKWAgdG8gcmVhZCB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGluc2lkZSB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIFlvdSBtYXkgY2FsbCBgZGlzcGF0Y2goKWAgZnJvbSBhIGNoYW5nZSBsaXN0ZW5lciwgd2l0aCB0aGUgZm9sbG93aW5nXG4gICAqIGNhdmVhdHM6XG4gICAqXG4gICAqIDEuIFRoZSBzdWJzY3JpcHRpb25zIGFyZSBzbmFwc2hvdHRlZCBqdXN0IGJlZm9yZSBldmVyeSBgZGlzcGF0Y2goKWAgY2FsbC5cbiAgICogSWYgeW91IHN1YnNjcmliZSBvciB1bnN1YnNjcmliZSB3aGlsZSB0aGUgbGlzdGVuZXJzIGFyZSBiZWluZyBpbnZva2VkLCB0aGlzXG4gICAqIHdpbGwgbm90IGhhdmUgYW55IGVmZmVjdCBvbiB0aGUgYGRpc3BhdGNoKClgIHRoYXQgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgKiBIb3dldmVyLCB0aGUgbmV4dCBgZGlzcGF0Y2goKWAgY2FsbCwgd2hldGhlciBuZXN0ZWQgb3Igbm90LCB3aWxsIHVzZSBhIG1vcmVcbiAgICogcmVjZW50IHNuYXBzaG90IG9mIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAgICpcbiAgICogMi4gVGhlIGxpc3RlbmVyIHNob3VsZCBub3QgZXhwZWN0IHRvIHNlZSBhbGwgc3RhdGUgY2hhbmdlcywgYXMgdGhlIHN0YXRlXG4gICAqIG1pZ2h0IGhhdmUgYmVlbiB1cGRhdGVkIG11bHRpcGxlIHRpbWVzIGR1cmluZyBhIG5lc3RlZCBgZGlzcGF0Y2goKWAgYmVmb3JlXG4gICAqIHRoZSBsaXN0ZW5lciBpcyBjYWxsZWQuIEl0IGlzLCBob3dldmVyLCBndWFyYW50ZWVkIHRoYXQgYWxsIHN1YnNjcmliZXJzXG4gICAqIHJlZ2lzdGVyZWQgYmVmb3JlIHRoZSBgZGlzcGF0Y2goKWAgc3RhcnRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBsYXRlc3RcbiAgICogc3RhdGUgYnkgdGhlIHRpbWUgaXQgZXhpdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIEEgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBldmVyeSBkaXNwYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRvIHJlbW92ZSB0aGlzIGNoYW5nZSBsaXN0ZW5lci5cbiAgICovXG5cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg0KSA6IFwiRXhwZWN0ZWQgdGhlIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YobGlzdGVuZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg1KSA6ICdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLnN1YnNjcmliZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdJZiB5b3Ugd291bGQgbGlrZSB0byBiZSBub3RpZmllZCBhZnRlciB0aGUgc3RvcmUgaGFzIGJlZW4gdXBkYXRlZCwgc3Vic2NyaWJlIGZyb20gYSAnICsgJ2NvbXBvbmVudCBhbmQgaW52b2tlIHN0b3JlLmdldFN0YXRlKCkgaW4gdGhlIGNhbGxiYWNrIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IHN0YXRlLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGkvc3RvcmUjc3Vic2NyaWJlbGlzdGVuZXIgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgbmV4dExpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICBpZiAoIWlzU3Vic2NyaWJlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDYpIDogJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjdXJyZW50TGlzdGVuZXJzID0gbnVsbDtcbiAgICB9O1xuICB9XG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGFuIGFjdGlvbi4gSXQgaXMgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBzdGF0ZSBjaGFuZ2UuXG4gICAqXG4gICAqIFRoZSBgcmVkdWNlcmAgZnVuY3Rpb24sIHVzZWQgdG8gY3JlYXRlIHRoZSBzdG9yZSwgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICogY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgZ2l2ZW4gYGFjdGlvbmAuIEl0cyByZXR1cm4gdmFsdWUgd2lsbFxuICAgKiBiZSBjb25zaWRlcmVkIHRoZSAqKm5leHQqKiBzdGF0ZSBvZiB0aGUgdHJlZSwgYW5kIHRoZSBjaGFuZ2UgbGlzdGVuZXJzXG4gICAqIHdpbGwgYmUgbm90aWZpZWQuXG4gICAqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9ubHkgc3VwcG9ydHMgcGxhaW4gb2JqZWN0IGFjdGlvbnMuIElmIHlvdSB3YW50IHRvXG4gICAqIGRpc3BhdGNoIGEgUHJvbWlzZSwgYW4gT2JzZXJ2YWJsZSwgYSB0aHVuaywgb3Igc29tZXRoaW5nIGVsc2UsIHlvdSBuZWVkIHRvXG4gICAqIHdyYXAgeW91ciBzdG9yZSBjcmVhdGluZyBmdW5jdGlvbiBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIG1pZGRsZXdhcmUuIEZvclxuICAgKiBleGFtcGxlLCBzZWUgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UuIEV2ZW4gdGhlXG4gICAqIG1pZGRsZXdhcmUgd2lsbCBldmVudHVhbGx5IGRpc3BhdGNoIHBsYWluIG9iamVjdCBhY3Rpb25zIHVzaW5nIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIEEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGluZyDigJx3aGF0IGNoYW5nZWTigJ0uIEl0IGlzXG4gICAqIGEgZ29vZCBpZGVhIHRvIGtlZXAgYWN0aW9ucyBzZXJpYWxpemFibGUgc28geW91IGNhbiByZWNvcmQgYW5kIHJlcGxheSB1c2VyXG4gICAqIHNlc3Npb25zLCBvciB1c2UgdGhlIHRpbWUgdHJhdmVsbGluZyBgcmVkdXgtZGV2dG9vbHNgLiBBbiBhY3Rpb24gbXVzdCBoYXZlXG4gICAqIGEgYHR5cGVgIHByb3BlcnR5IHdoaWNoIG1heSBub3QgYmUgYHVuZGVmaW5lZGAuIEl0IGlzIGEgZ29vZCBpZGVhIHRvIHVzZVxuICAgKiBzdHJpbmcgY29uc3RhbnRzIGZvciBhY3Rpb24gdHlwZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IEZvciBjb252ZW5pZW5jZSwgdGhlIHNhbWUgYWN0aW9uIG9iamVjdCB5b3UgZGlzcGF0Y2hlZC5cbiAgICpcbiAgICogTm90ZSB0aGF0LCBpZiB5b3UgdXNlIGEgY3VzdG9tIG1pZGRsZXdhcmUsIGl0IG1heSB3cmFwIGBkaXNwYXRjaCgpYCB0b1xuICAgKiByZXR1cm4gc29tZXRoaW5nIGVsc2UgKGZvciBleGFtcGxlLCBhIFByb21pc2UgeW91IGNhbiBhd2FpdCkuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KGFjdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDcpIDogXCJBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gSW5zdGVhZCwgdGhlIGFjdHVhbCB0eXBlIHdhczogJ1wiICsga2luZE9mKGFjdGlvbikgKyBcIicuIFlvdSBtYXkgbmVlZCB0byBhZGQgbWlkZGxld2FyZSB0byB5b3VyIHN0b3JlIHNldHVwIHRvIGhhbmRsZSBkaXNwYXRjaGluZyBvdGhlciB2YWx1ZXMsIHN1Y2ggYXMgJ3JlZHV4LXRodW5rJyB0byBoYW5kbGUgZGlzcGF0Y2hpbmcgZnVuY3Rpb25zLiBTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTQtc3RvcmUjbWlkZGxld2FyZSBhbmQgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTYtYXN5bmMtbG9naWMjdXNpbmctdGhlLXJlZHV4LXRodW5rLW1pZGRsZXdhcmUgZm9yIGV4YW1wbGVzLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoOCkgOiAnQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiBZb3UgbWF5IGhhdmUgbWlzc3BlbGxlZCBhbiBhY3Rpb24gdHlwZSBzdHJpbmcgY29uc3RhbnQuJyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDkpIDogJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWN0aW9uO1xuICB9XG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gcmVwbGFjZVJlZHVjZXIobmV4dFJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIG5leHRSZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMCkgOiBcIkV4cGVjdGVkIHRoZSBuZXh0UmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLiBJbnN0ZWFkLCByZWNlaXZlZDogJ1wiICsga2luZE9mKG5leHRSZWR1Y2VyKSk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjsgLy8gVGhpcyBhY3Rpb24gaGFzIGEgc2ltaWxpYXIgZWZmZWN0IHRvIEFjdGlvblR5cGVzLklOSVQuXG4gICAgLy8gQW55IHJlZHVjZXJzIHRoYXQgZXhpc3RlZCBpbiBib3RoIHRoZSBuZXcgYW5kIG9sZCByb290UmVkdWNlclxuICAgIC8vIHdpbGwgcmVjZWl2ZSB0aGUgcHJldmlvdXMgc3RhdGUuIFRoaXMgZWZmZWN0aXZlbHkgcG9wdWxhdGVzXG4gICAgLy8gdGhlIG5ldyBzdGF0ZSB0cmVlIHdpdGggYW55IHJlbGV2YW50IGRhdGEgZnJvbSB0aGUgb2xkIG9uZS5cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0VcbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDExKSA6IFwiRXhwZWN0ZWQgdGhlIG9ic2VydmVyIHRvIGJlIGFuIG9iamVjdC4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihvYnNlcnZlcikgKyBcIidcIik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSwgX3JlZlskJG9ic2VydmFibGVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSwgX3JlZjtcbiAgfSAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cblxuXG4gIGRpc3BhdGNoKHtcbiAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gIH0pO1xuICByZXR1cm4gX3JlZjIgPSB7XG4gICAgZGlzcGF0Y2g6IGRpc3BhdGNoLFxuICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgIGdldFN0YXRlOiBnZXRTdGF0ZSxcbiAgICByZXBsYWNlUmVkdWNlcjogcmVwbGFjZVJlZHVjZXJcbiAgfSwgX3JlZjJbJCRvYnNlcnZhYmxlXSA9IG9ic2VydmFibGUsIF9yZWYyO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgUmVkdXggc3RvcmUgdGhhdCBob2xkcyB0aGUgc3RhdGUgdHJlZS5cbiAqXG4gKiAqKldlIHJlY29tbWVuZCB1c2luZyBgY29uZmlndXJlU3RvcmVgIGZyb20gdGhlXG4gKiBgQHJlZHV4anMvdG9vbGtpdGAgcGFja2FnZSoqLCB3aGljaCByZXBsYWNlcyBgY3JlYXRlU3RvcmVgOlxuICogKipodHRwczovL3JlZHV4LmpzLm9yZy9pbnRyb2R1Y3Rpb24vd2h5LXJ0ay1pcy1yZWR1eC10b2RheSoqXG4gKlxuICogVGhlIG9ubHkgd2F5IHRvIGNoYW5nZSB0aGUgZGF0YSBpbiB0aGUgc3RvcmUgaXMgdG8gY2FsbCBgZGlzcGF0Y2goKWAgb24gaXQuXG4gKlxuICogVGhlcmUgc2hvdWxkIG9ubHkgYmUgYSBzaW5nbGUgc3RvcmUgaW4geW91ciBhcHAuIFRvIHNwZWNpZnkgaG93IGRpZmZlcmVudFxuICogcGFydHMgb2YgdGhlIHN0YXRlIHRyZWUgcmVzcG9uZCB0byBhY3Rpb25zLCB5b3UgbWF5IGNvbWJpbmUgc2V2ZXJhbCByZWR1Y2Vyc1xuICogaW50byBhIHNpbmdsZSByZWR1Y2VyIGZ1bmN0aW9uIGJ5IHVzaW5nIGBjb21iaW5lUmVkdWNlcnNgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlZHVjZXIgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG5leHQgc3RhdGUgdHJlZSwgZ2l2ZW5cbiAqIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBhY3Rpb24gdG8gaGFuZGxlLlxuICpcbiAqIEBwYXJhbSB7YW55fSBbcHJlbG9hZGVkU3RhdGVdIFRoZSBpbml0aWFsIHN0YXRlLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gaHlkcmF0ZSB0aGUgc3RhdGUgZnJvbSB0aGUgc2VydmVyIGluIHVuaXZlcnNhbCBhcHBzLCBvciB0byByZXN0b3JlIGFcbiAqIHByZXZpb3VzbHkgc2VyaWFsaXplZCB1c2VyIHNlc3Npb24uXG4gKiBJZiB5b3UgdXNlIGBjb21iaW5lUmVkdWNlcnNgIHRvIHByb2R1Y2UgdGhlIHJvb3QgcmVkdWNlciBmdW5jdGlvbiwgdGhpcyBtdXN0IGJlXG4gKiBhbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZSBhcyBgY29tYmluZVJlZHVjZXJzYCBrZXlzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtlbmhhbmNlcl0gVGhlIHN0b3JlIGVuaGFuY2VyLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gZW5oYW5jZSB0aGUgc3RvcmUgd2l0aCB0aGlyZC1wYXJ0eSBjYXBhYmlsaXRpZXMgc3VjaCBhcyBtaWRkbGV3YXJlLFxuICogdGltZSB0cmF2ZWwsIHBlcnNpc3RlbmNlLCBldGMuIFRoZSBvbmx5IHN0b3JlIGVuaGFuY2VyIHRoYXQgc2hpcHMgd2l0aCBSZWR1eFxuICogaXMgYGFwcGx5TWlkZGxld2FyZSgpYC5cbiAqXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgUmVkdXggc3RvcmUgdGhhdCBsZXRzIHlvdSByZWFkIHRoZSBzdGF0ZSwgZGlzcGF0Y2ggYWN0aW9uc1xuICogYW5kIHN1YnNjcmliZSB0byBjaGFuZ2VzLlxuICovXG5cbnZhciBsZWdhY3lfY3JlYXRlU3RvcmUgPSBjcmVhdGVTdG9yZTtcblxuLyoqXG4gKiBQcmludHMgYSB3YXJuaW5nIGluIHRoZSBjb25zb2xlIGlmIGl0IGV4aXN0cy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZSBUaGUgd2FybmluZyBtZXNzYWdlLlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIHdhcm5pbmcobWVzc2FnZSkge1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGNvbnNvbGUuZXJyb3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICB9XG4gIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuXG5cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IGlmIHlvdSBlbmFibGVcbiAgICAvLyBcImJyZWFrIG9uIGFsbCBleGNlcHRpb25zXCIgaW4geW91ciBjb25zb2xlLFxuICAgIC8vIGl0IHdvdWxkIHBhdXNlIHRoZSBleGVjdXRpb24gYXQgdGhpcyBsaW5lLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfSBjYXRjaCAoZSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuXG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiBcIlRoZSBcIiArIGFyZ3VtZW50TmFtZSArIFwiIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXFxcIlwiICsga2luZE9mKGlucHV0U3RhdGUpICsgXCJcXFwiLiBFeHBlY3RlZCBhcmd1bWVudCB0byBiZSBhbiBvYmplY3Qgd2l0aCB0aGUgZm9sbG93aW5nIFwiICsgKFwia2V5czogXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCJcIik7XG4gIH1cblxuICB2YXIgdW5leHBlY3RlZEtleXMgPSBPYmplY3Qua2V5cyhpbnB1dFN0YXRlKS5maWx0ZXIoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhcmVkdWNlcnMuaGFzT3duUHJvcGVydHkoa2V5KSAmJiAhdW5leHBlY3RlZEtleUNhY2hlW2tleV07XG4gIH0pO1xuICB1bmV4cGVjdGVkS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XSA9IHRydWU7XG4gIH0pO1xuICBpZiAoYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5SRVBMQUNFKSByZXR1cm47XG5cbiAgaWYgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gXCJVbmV4cGVjdGVkIFwiICsgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDEgPyAna2V5cycgOiAna2V5JykgKyBcIiBcIiArIChcIlxcXCJcIiArIHVuZXhwZWN0ZWRLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiIGZvdW5kIGluIFwiICsgYXJndW1lbnROYW1lICsgXCIuIFwiKSArIFwiRXhwZWN0ZWQgdG8gZmluZCBvbmUgb2YgdGhlIGtub3duIHJlZHVjZXIga2V5cyBpbnN0ZWFkOiBcIiArIChcIlxcXCJcIiArIHJlZHVjZXJLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiLiBVbmV4cGVjdGVkIGtleXMgd2lsbCBiZSBpZ25vcmVkLlwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRSZWR1Y2VyU2hhcGUocmVkdWNlcnMpIHtcbiAgT2JqZWN0LmtleXMocmVkdWNlcnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciByZWR1Y2VyID0gcmVkdWNlcnNba2V5XTtcbiAgICB2YXIgaW5pdGlhbFN0YXRlID0gcmVkdWNlcih1bmRlZmluZWQsIHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLklOSVRcbiAgICB9KTtcblxuICAgIGlmICh0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTIpIDogXCJUaGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiBcIiArIFwiSWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGUgcmVkdWNlciBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IFwiICsgXCJleHBsaWNpdGx5IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IFwiICsgXCJub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBzZXQgYSB2YWx1ZSBmb3IgdGhpcyByZWR1Y2VyLCBcIiArIFwieW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUFJPQkVfVU5LTk9XTl9BQ1RJT04oKVxuICAgIH0pID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTMpIDogXCJUaGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgd2hlbiBwcm9iZWQgd2l0aCBhIHJhbmRvbSB0eXBlLiBcIiArIChcIkRvbid0IHRyeSB0byBoYW5kbGUgJ1wiICsgQWN0aW9uVHlwZXMuSU5JVCArIFwiJyBvciBvdGhlciBhY3Rpb25zIGluIFxcXCJyZWR1eC8qXFxcIiBcIikgKyBcIm5hbWVzcGFjZS4gVGhleSBhcmUgY29uc2lkZXJlZCBwcml2YXRlLiBJbnN0ZWFkLCB5b3UgbXVzdCByZXR1cm4gdGhlIFwiICsgXCJjdXJyZW50IHN0YXRlIGZvciBhbnkgdW5rbm93biBhY3Rpb25zLCB1bmxlc3MgaXQgaXMgdW5kZWZpbmVkLCBcIiArIFwiaW4gd2hpY2ggY2FzZSB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUsIHJlZ2FyZGxlc3Mgb2YgdGhlIFwiICsgXCJhY3Rpb24gdHlwZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IG5vdCBiZSB1bmRlZmluZWQsIGJ1dCBjYW4gYmUgbnVsbC5cIik7XG4gICAgfVxuICB9KTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgZGlmZmVyZW50IHJlZHVjZXIgZnVuY3Rpb25zLCBpbnRvIGEgc2luZ2xlXG4gKiByZWR1Y2VyIGZ1bmN0aW9uLiBJdCB3aWxsIGNhbGwgZXZlcnkgY2hpbGQgcmVkdWNlciwgYW5kIGdhdGhlciB0aGVpciByZXN1bHRzXG4gKiBpbnRvIGEgc2luZ2xlIHN0YXRlIG9iamVjdCwgd2hvc2Uga2V5cyBjb3JyZXNwb25kIHRvIHRoZSBrZXlzIG9mIHRoZSBwYXNzZWRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSByZWR1Y2VycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGNvcnJlc3BvbmQgdG8gZGlmZmVyZW50XG4gKiByZWR1Y2VyIGZ1bmN0aW9ucyB0aGF0IG5lZWQgdG8gYmUgY29tYmluZWQgaW50byBvbmUuIE9uZSBoYW5keSB3YXkgdG8gb2J0YWluXG4gKiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhcyByZWR1Y2Vyc2Agc3ludGF4LiBUaGUgcmVkdWNlcnMgbWF5IG5ldmVyIHJldHVyblxuICogdW5kZWZpbmVkIGZvciBhbnkgYWN0aW9uLiBJbnN0ZWFkLCB0aGV5IHNob3VsZCByZXR1cm4gdGhlaXIgaW5pdGlhbCBzdGF0ZVxuICogaWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGVtIHdhcyB1bmRlZmluZWQsIGFuZCB0aGUgY3VycmVudCBzdGF0ZSBmb3IgYW55XG4gKiB1bnJlY29nbml6ZWQgYWN0aW9uLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSByZWR1Y2VyIGZ1bmN0aW9uIHRoYXQgaW52b2tlcyBldmVyeSByZWR1Y2VyIGluc2lkZSB0aGVcbiAqIHBhc3NlZCBvYmplY3QsIGFuZCBidWlsZHMgYSBzdGF0ZSBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNvbWJpbmVSZWR1Y2VycyhyZWR1Y2Vycykge1xuICB2YXIgcmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XG4gIHZhciBmaW5hbFJlZHVjZXJzID0ge307XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWR1Y2VyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSByZWR1Y2VyS2V5c1tpXTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICBpZiAodHlwZW9mIHJlZHVjZXJzW2tleV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHdhcm5pbmcoXCJObyByZWR1Y2VyIHByb3ZpZGVkIGZvciBrZXkgXFxcIlwiICsga2V5ICsgXCJcXFwiXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZmluYWxSZWR1Y2Vyc1trZXldID0gcmVkdWNlcnNba2V5XTtcbiAgICB9XG4gIH1cblxuICB2YXIgZmluYWxSZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKGZpbmFsUmVkdWNlcnMpOyAvLyBUaGlzIGlzIHVzZWQgdG8gbWFrZSBzdXJlIHdlIGRvbid0IHdhcm4gYWJvdXQgdGhlIHNhbWVcbiAgLy8ga2V5cyBtdWx0aXBsZSB0aW1lcy5cblxuICB2YXIgdW5leHBlY3RlZEtleUNhY2hlO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlID0ge307XG4gIH1cblxuICB2YXIgc2hhcGVBc3NlcnRpb25FcnJvcjtcblxuICB0cnkge1xuICAgIGFzc2VydFJlZHVjZXJTaGFwZShmaW5hbFJlZHVjZXJzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHNoYXBlQXNzZXJ0aW9uRXJyb3IgPSBlO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbWJpbmF0aW9uKHN0YXRlLCBhY3Rpb24pIHtcbiAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkge1xuICAgICAgc3RhdGUgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoc2hhcGVBc3NlcnRpb25FcnJvcikge1xuICAgICAgdGhyb3cgc2hhcGVBc3NlcnRpb25FcnJvcjtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIHdhcm5pbmdNZXNzYWdlID0gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShzdGF0ZSwgZmluYWxSZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpO1xuXG4gICAgICBpZiAod2FybmluZ01lc3NhZ2UpIHtcbiAgICAgICAgd2FybmluZyh3YXJuaW5nTWVzc2FnZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGhhc0NoYW5nZWQgPSBmYWxzZTtcbiAgICB2YXIgbmV4dFN0YXRlID0ge307XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfa2V5ID0gZmluYWxSZWR1Y2VyS2V5c1tfaV07XG4gICAgICB2YXIgcmVkdWNlciA9IGZpbmFsUmVkdWNlcnNbX2tleV07XG4gICAgICB2YXIgcHJldmlvdXNTdGF0ZUZvcktleSA9IHN0YXRlW19rZXldO1xuICAgICAgdmFyIG5leHRTdGF0ZUZvcktleSA9IHJlZHVjZXIocHJldmlvdXNTdGF0ZUZvcktleSwgYWN0aW9uKTtcblxuICAgICAgaWYgKHR5cGVvZiBuZXh0U3RhdGVGb3JLZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciBhY3Rpb25UeXBlID0gYWN0aW9uICYmIGFjdGlvbi50eXBlO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxNCkgOiBcIldoZW4gY2FsbGVkIHdpdGggYW4gYWN0aW9uIG9mIHR5cGUgXCIgKyAoYWN0aW9uVHlwZSA/IFwiXFxcIlwiICsgU3RyaW5nKGFjdGlvblR5cGUpICsgXCJcXFwiXCIgOiAnKHVua25vd24gdHlwZSknKSArIFwiLCB0aGUgc2xpY2UgcmVkdWNlciBmb3Iga2V5IFxcXCJcIiArIF9rZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkLiBcIiArIFwiVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiBcIiArIFwiSWYgeW91IHdhbnQgdGhpcyByZWR1Y2VyIHRvIGhvbGQgbm8gdmFsdWUsIHlvdSBjYW4gcmV0dXJuIG51bGwgaW5zdGVhZCBvZiB1bmRlZmluZWQuXCIpO1xuICAgICAgfVxuXG4gICAgICBuZXh0U3RhdGVbX2tleV0gPSBuZXh0U3RhdGVGb3JLZXk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBuZXh0U3RhdGVGb3JLZXkgIT09IHByZXZpb3VzU3RhdGVGb3JLZXk7XG4gICAgfVxuXG4gICAgaGFzQ2hhbmdlZCA9IGhhc0NoYW5nZWQgfHwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGggIT09IE9iamVjdC5rZXlzKHN0YXRlKS5sZW5ndGg7XG4gICAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXh0U3RhdGUgOiBzdGF0ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYW4gYWN0aW9uIGNyZWF0b3IgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGRpc3BhdGNoIHdyYXBwZWQgZnVuY3Rpb24gaW4gcmV0dXJuLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fSBhY3Rpb25DcmVhdG9ycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb25cbiAqIGNyZWF0b3IgZnVuY3Rpb25zLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpbiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhc2BcbiAqIHN5bnRheC4gWW91IG1heSBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZGlzcGF0Y2ggVGhlIGBkaXNwYXRjaGAgZnVuY3Rpb24gYXZhaWxhYmxlIG9uIHlvdXIgUmVkdXhcbiAqIHN0b3JlLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbnxPYmplY3R9IFRoZSBvYmplY3QgbWltaWNraW5nIHRoZSBvcmlnaW5hbCBvYmplY3QsIGJ1dCB3aXRoXG4gKiBldmVyeSBhY3Rpb24gY3JlYXRvciB3cmFwcGVkIGludG8gdGhlIGBkaXNwYXRjaGAgY2FsbC4gSWYgeW91IHBhc3NlZCBhXG4gKiBmdW5jdGlvbiBhcyBgYWN0aW9uQ3JlYXRvcnNgLCB0aGUgcmV0dXJuIHZhbHVlIHdpbGwgYWxzbyBiZSBhIHNpbmdsZVxuICogZnVuY3Rpb24uXG4gKi9cblxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTYpIDogXCJiaW5kQWN0aW9uQ3JlYXRvcnMgZXhwZWN0ZWQgYW4gb2JqZWN0IG9yIGEgZnVuY3Rpb24sIGJ1dCBpbnN0ZWFkIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YoYWN0aW9uQ3JlYXRvcnMpICsgXCInLiBcIiArIFwiRGlkIHlvdSB3cml0ZSBcXFwiaW1wb3J0IEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiIGluc3RlYWQgb2YgXFxcImltcG9ydCAqIGFzIEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiP1wiKTtcbiAgfVxuXG4gIHZhciBib3VuZEFjdGlvbkNyZWF0b3JzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIGFjdGlvbkNyZWF0b3JzKSB7XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBib3VuZEFjdGlvbkNyZWF0b3JzW2tleV0gPSBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJvdW5kQWN0aW9uQ3JlYXRvcnM7XG59XG5cbi8qKlxuICogQ29tcG9zZXMgc2luZ2xlLWFyZ3VtZW50IGZ1bmN0aW9ucyBmcm9tIHJpZ2h0IHRvIGxlZnQuIFRoZSByaWdodG1vc3RcbiAqIGZ1bmN0aW9uIGNhbiB0YWtlIG11bHRpcGxlIGFyZ3VtZW50cyBhcyBpdCBwcm92aWRlcyB0aGUgc2lnbmF0dXJlIGZvclxuICogdGhlIHJlc3VsdGluZyBjb21wb3NpdGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gZnVuY3MgVGhlIGZ1bmN0aW9ucyB0byBjb21wb3NlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIG9idGFpbmVkIGJ5IGNvbXBvc2luZyB0aGUgYXJndW1lbnQgZnVuY3Rpb25zXG4gKiBmcm9tIHJpZ2h0IHRvIGxlZnQuIEZvciBleGFtcGxlLCBjb21wb3NlKGYsIGcsIGgpIGlzIGlkZW50aWNhbCB0byBkb2luZ1xuICogKC4uLmFyZ3MpID0+IGYoZyhoKC4uLmFyZ3MpKSkuXG4gKi9cbmZ1bmN0aW9uIGNvbXBvc2UoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBmdW5jc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgICAgcmV0dXJuIGFyZztcbiAgICB9O1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBmdW5jc1swXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jcy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGEoYi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzdG9yZSBlbmhhbmNlciB0aGF0IGFwcGxpZXMgbWlkZGxld2FyZSB0byB0aGUgZGlzcGF0Y2ggbWV0aG9kXG4gKiBvZiB0aGUgUmVkdXggc3RvcmUuIFRoaXMgaXMgaGFuZHkgZm9yIGEgdmFyaWV0eSBvZiB0YXNrcywgc3VjaCBhcyBleHByZXNzaW5nXG4gKiBhc3luY2hyb25vdXMgYWN0aW9ucyBpbiBhIGNvbmNpc2UgbWFubmVyLCBvciBsb2dnaW5nIGV2ZXJ5IGFjdGlvbiBwYXlsb2FkLlxuICpcbiAqIFNlZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UgYXMgYW4gZXhhbXBsZSBvZiB0aGUgUmVkdXggbWlkZGxld2FyZS5cbiAqXG4gKiBCZWNhdXNlIG1pZGRsZXdhcmUgaXMgcG90ZW50aWFsbHkgYXN5bmNocm9ub3VzLCB0aGlzIHNob3VsZCBiZSB0aGUgZmlyc3RcbiAqIHN0b3JlIGVuaGFuY2VyIGluIHRoZSBjb21wb3NpdGlvbiBjaGFpbi5cbiAqXG4gKiBOb3RlIHRoYXQgZWFjaCBtaWRkbGV3YXJlIHdpbGwgYmUgZ2l2ZW4gdGhlIGBkaXNwYXRjaGAgYW5kIGBnZXRTdGF0ZWAgZnVuY3Rpb25zXG4gKiBhcyBuYW1lZCBhcmd1bWVudHMuXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gbWlkZGxld2FyZXMgVGhlIG1pZGRsZXdhcmUgY2hhaW4gdG8gYmUgYXBwbGllZC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBzdG9yZSBlbmhhbmNlciBhcHBseWluZyB0aGUgbWlkZGxld2FyZS5cbiAqL1xuXG5mdW5jdGlvbiBhcHBseU1pZGRsZXdhcmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBtaWRkbGV3YXJlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBtaWRkbGV3YXJlc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoY3JlYXRlU3RvcmUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuXG4gICAgICB2YXIgX2Rpc3BhdGNoID0gZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDE1KSA6ICdEaXNwYXRjaGluZyB3aGlsZSBjb25zdHJ1Y3RpbmcgeW91ciBtaWRkbGV3YXJlIGlzIG5vdCBhbGxvd2VkLiAnICsgJ090aGVyIG1pZGRsZXdhcmUgd291bGQgbm90IGJlIGFwcGxpZWQgdG8gdGhpcyBkaXNwYXRjaC4nKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBtaWRkbGV3YXJlQVBJID0ge1xuICAgICAgICBnZXRTdGF0ZTogc3RvcmUuZ2V0U3RhdGUsXG4gICAgICAgIGRpc3BhdGNoOiBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgICByZXR1cm4gX2Rpc3BhdGNoLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBjaGFpbiA9IG1pZGRsZXdhcmVzLm1hcChmdW5jdGlvbiAobWlkZGxld2FyZSkge1xuICAgICAgICByZXR1cm4gbWlkZGxld2FyZShtaWRkbGV3YXJlQVBJKTtcbiAgICAgIH0pO1xuICAgICAgX2Rpc3BhdGNoID0gY29tcG9zZS5hcHBseSh2b2lkIDAsIGNoYWluKShzdG9yZS5kaXNwYXRjaCk7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzdG9yZSksIHt9LCB7XG4gICAgICAgIGRpc3BhdGNoOiBfZGlzcGF0Y2hcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG59XG5cbi8qXG4gKiBUaGlzIGlzIGEgZHVtbXkgZnVuY3Rpb24gdG8gY2hlY2sgaWYgdGhlIGZ1bmN0aW9uIG5hbWUgaGFzIGJlZW4gYWx0ZXJlZCBieSBtaW5pZmljYXRpb24uXG4gKiBJZiB0aGUgZnVuY3Rpb24gaGFzIGJlZW4gbWluaWZpZWQgYW5kIE5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsIHdhcm4gdGhlIHVzZXIuXG4gKi9cblxuZnVuY3Rpb24gaXNDcnVzaGVkKCkge31cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIGlzQ3J1c2hlZC5uYW1lID09PSAnc3RyaW5nJyAmJiBpc0NydXNoZWQubmFtZSAhPT0gJ2lzQ3J1c2hlZCcpIHtcbiAgd2FybmluZygnWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIi4gJyArICdUaGlzIG1lYW5zIHRoYXQgeW91IGFyZSBydW5uaW5nIGEgc2xvd2VyIGRldmVsb3BtZW50IGJ1aWxkIG9mIFJlZHV4LiAnICsgJ1lvdSBjYW4gdXNlIGxvb3NlLWVudmlmeSAoaHR0cHM6Ly9naXRodWIuY29tL3plcnRvc2gvbG9vc2UtZW52aWZ5KSBmb3IgYnJvd3NlcmlmeSAnICsgJ29yIHNldHRpbmcgbW9kZSB0byBwcm9kdWN0aW9uIGluIHdlYnBhY2sgKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvY29uY2VwdHMvbW9kZS8pICcgKyAndG8gZW5zdXJlIHlvdSBoYXZlIHRoZSBjb3JyZWN0IGNvZGUgZm9yIHlvdXIgcHJvZHVjdGlvbiBidWlsZC4nKTtcbn1cblxuZXhwb3J0IHsgQWN0aW9uVHlwZXMgYXMgX19ET19OT1RfVVNFX19BY3Rpb25UeXBlcywgYXBwbHlNaWRkbGV3YXJlLCBiaW5kQWN0aW9uQ3JlYXRvcnMsIGNvbWJpbmVSZWR1Y2VycywgY29tcG9zZSwgY3JlYXRlU3RvcmUsIGxlZ2FjeV9jcmVhdGVTdG9yZSB9O1xuIiwiaW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICdyZWR1eCc7XG5cbmNvbnN0IGl0ZW1zID0gWyfQn9C+0LfQsNCy0YLRgNCw0LrQsNGC0YwnLCAn0KHRhdC+0LTQuNGC0Ywg0LIg0LzQsNCz0LDQt9C40L0nLCAn0J/QvtC60L7RgNC80LjRgtGMINC60L7RgtCwJ107XG5cbmNvbnN0IERFRkFVTFRfU1RBVEUgPSB7IGl0ZW1zLCBkb25lOiB7fSwgdGV4dDogJycgfTtcblxuLy8gYWN0aW9uc1xuZXhwb3J0IGNvbnN0IGFkZEl0ZW0gPSAodGV4dCkgPT4gKHsgdHlwZTogJ0FERF9JVEVNJywgdGV4dCB9KTtcbmV4cG9ydCBjb25zdCBzZXRUZXh0ID0gKHRleHQpID0+ICh7IHR5cGU6ICdTRVRfVEVYVCcsIHRleHQgfSk7XG5leHBvcnQgY29uc3Qgc2V0RG9uZSA9IChpbmRleCwgZG9uZSkgPT4gKHsgdHlwZTogJ1NFVF9ET05FJywgaW5kZXgsIGRvbmUgfSk7XG5cbi8vIHJlZHVjZXJcbmNvbnN0IHJvb3RSZWR1Y2VyID0gKHN0YXRlID0gREVGQVVMVF9TVEFURSwgYWN0aW9uKSA9PiB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlICdBRERfSVRFTSc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgdGV4dDogJycsXG4gICAgICAgIGl0ZW1zOiBbLi4uc3RhdGUuaXRlbXMsIGFjdGlvbi50ZXh0XSxcbiAgICAgIH07XG4gICAgY2FzZSAnU0VUX1RFWFQnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIHRleHQ6IGFjdGlvbi50ZXh0LFxuICAgICAgfTtcbiAgICBjYXNlICdTRVRfRE9ORSc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgZG9uZToge1xuICAgICAgICAgIC4uLnN0YXRlLmRvbmUsXG4gICAgICAgICAgW2FjdGlvbi5pbmRleF06IGFjdGlvbi5kb25lLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59O1xuXG4vLyBlcGljc1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdFN0b3JlKCkge1xuICBjb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKHJvb3RSZWR1Y2VyKTtcblxuICByZXR1cm4gc3RvcmU7XG59XG4iLCJjb25zdCByYW5kb21VVUlEID0gdHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgY3J5cHRvLnJhbmRvbVVVSUQgJiYgY3J5cHRvLnJhbmRvbVVVSUQuYmluZChjcnlwdG8pO1xuZXhwb3J0IGRlZmF1bHQge1xuICByYW5kb21VVUlEXG59OyIsIi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuIEluIHRoZSBicm93c2VyIHdlIHRoZXJlZm9yZVxuLy8gcmVxdWlyZSB0aGUgY3J5cHRvIEFQSSBhbmQgZG8gbm90IHN1cHBvcnQgYnVpbHQtaW4gZmFsbGJhY2sgdG8gbG93ZXIgcXVhbGl0eSByYW5kb20gbnVtYmVyXG4vLyBnZW5lcmF0b3JzIChsaWtlIE1hdGgucmFuZG9tKCkpLlxubGV0IGdldFJhbmRvbVZhbHVlcztcbmNvbnN0IHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm5nKCkge1xuICAvLyBsYXp5IGxvYWQgc28gdGhhdCBlbnZpcm9ubWVudHMgdGhhdCBuZWVkIHRvIHBvbHlmaWxsIGhhdmUgYSBjaGFuY2UgdG8gZG8gc29cbiAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAvLyBnZXRSYW5kb21WYWx1ZXMgbmVlZHMgdG8gYmUgaW52b2tlZCBpbiBhIGNvbnRleHQgd2hlcmUgXCJ0aGlzXCIgaXMgYSBDcnlwdG8gaW1wbGVtZW50YXRpb24uXG4gICAgZ2V0UmFuZG9tVmFsdWVzID0gdHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQoY3J5cHRvKTtcblxuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59IiwiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWFxuICovXG5cbmNvbnN0IGJ5dGVUb0hleCA9IFtdO1xuXG5mb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gIGJ5dGVUb0hleC5wdXNoKChpICsgMHgxMDApLnRvU3RyaW5nKDE2KS5zbGljZSgxKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1bnNhZmVTdHJpbmdpZnkoYXJyLCBvZmZzZXQgPSAwKSB7XG4gIC8vIE5vdGU6IEJlIGNhcmVmdWwgZWRpdGluZyB0aGlzIGNvZGUhICBJdCdzIGJlZW4gdHVuZWQgZm9yIHBlcmZvcm1hbmNlXG4gIC8vIGFuZCB3b3JrcyBpbiB3YXlzIHlvdSBtYXkgbm90IGV4cGVjdC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZC9wdWxsLzQzNFxuICByZXR1cm4gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnkoYXJyLCBvZmZzZXQgPSAwKSB7XG4gIGNvbnN0IHV1aWQgPSB1bnNhZmVTdHJpbmdpZnkoYXJyLCBvZmZzZXQpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICByZXR1cm4gdXVpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyIsImltcG9ydCBuYXRpdmUgZnJvbSAnLi9uYXRpdmUuanMnO1xuaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgeyB1bnNhZmVTdHJpbmdpZnkgfSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIGlmIChuYXRpdmUucmFuZG9tVVVJRCAmJiAhYnVmICYmICFvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5hdGl2ZS5yYW5kb21VVUlEKCk7XG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgY29uc3Qgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7IC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcblxuICBybmRzWzZdID0gcm5kc1s2XSAmIDB4MGYgfCAweDQwO1xuICBybmRzWzhdID0gcm5kc1s4XSAmIDB4M2YgfCAweDgwOyAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcblxuICBpZiAoYnVmKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHJuZHNbaV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1ZjtcbiAgfVxuXG4gIHJldHVybiB1bnNhZmVTdHJpbmdpZnkocm5kcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHY0OyIsImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZURpc3BhdGNoLCB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IHY0IH0gZnJvbSAndXVpZCc7XG5pbXBvcnQgeyBzZXREb25lIH0gZnJvbSAnLi4vc3RvcmUnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vaW5kZXgubW9kdWxlLmNzcyc7XG5cbmZ1bmN0aW9uIFRvZG9JdGVtKHByb3BzKSB7XG4gIGNvbnN0IHsgaW5kZXggfSA9IHByb3BzO1xuXG4gIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgY29uc3QgdGV4dCA9IHVzZVNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUuaXRlbXNbaW5kZXhdKTtcbiAgY29uc3QgZG9uZSA9IHVzZVNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUuZG9uZVtpbmRleF0pO1xuXG4gIGNvbnN0IG9uQ2hhbmdlID0gdXNlQ2FsbGJhY2soKCkgPT4gZGlzcGF0Y2goc2V0RG9uZShpbmRleCwgIWRvbmUpKSwgW2luZGV4LCBkb25lLCBkaXNwYXRjaF0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBkYXRhLXRlc3RpZD17djQoKX0gY2xhc3NOYW1lPXtzdHlsZXMuaXRlbX0+XG4gICAgICA8ZGl2IGRhdGEtdGVzdGlkPVwibGlzdC1pdGVtXCIgY2xhc3NOYW1lPXtkb25lID8gJ2RvbmUnIDogJyd9PlxuICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2hlY2tlZD17ZG9uZX0gb25DaGFuZ2U9e29uQ2hhbmdlfSAvPlxuICAgICAgICB7dGV4dH1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuZXhwb3J0IGRlZmF1bHQgVG9kb0l0ZW07XG4iLCIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCBkZWZhdWx0IHtcIml0ZW1cIjpcIkVQazNFWEVSVDV4eU1fQjh6ZjBQXCJ9OyIsImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbG9kYXNoLCB7IHNldCB9IGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBhZGRJdGVtLCBzZXRUZXh0IH0gZnJvbSAnLi4vc3RvcmUnO1xuaW1wb3J0IFRvZG9JdGVtIGZyb20gJy4vVG9kb0l0ZW0nO1xuXG5mdW5jdGlvbiBUb2RvTGlzdCgpIHtcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuXG4gIGNvbnN0IGl0ZW1zID0gdXNlU2VsZWN0b3IoKHN0YXRlKSA9PiBzdGF0ZS5pdGVtcyk7XG4gIGNvbnN0IHRleHQgPSB1c2VTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLnRleHQpO1xuXG4gIGNvbnN0IG9uQ2hhbmdlID0gdXNlQ2FsbGJhY2soKHsgdGFyZ2V0IH0pID0+IHtcbiAgICBkaXNwYXRjaChzZXRUZXh0KHRhcmdldC52YWx1ZSkpO1xuICB9LCBbZGlzcGF0Y2hdKTtcblxuICBjb25zdCBvbkNsaWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGRpc3BhdGNoKGFkZEl0ZW0odGV4dCkpO1xuICB9LCBbZGlzcGF0Y2gsIHRleHRdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8aW5wdXQgZGF0YS10ZXN0aWQ9XCJpbnB1dC1hZGRcIiB2YWx1ZT17dGV4dH0gb25DaGFuZ2U9e29uQ2hhbmdlfSAvPlxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBkYXRhLXRlc3RpZD1cImJ1dHRvbi1hZGRcIiBkaXNhYmxlZD17IXRleHR9IG9uQ2xpY2s9e29uQ2xpY2t9PtCU0L7QsdCw0LLQuNGC0Yw8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBkYXRhLXRlc3RpZD1cImxpc3RcIiBjbGFzc05hbWU9XCJsaXN0XCI+XG4gICAgICAgIHtsb2Rhc2gubWFwKGl0ZW1zLCAodGV4dCwgaSkgPT4gPFRvZG9JdGVtIGtleT17aX0gaW5kZXg9e2l9IC8+KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUb2RvTGlzdDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVG9kb0xpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Ub2RvTGlzdCc7XG5cbmZ1bmN0aW9uIEhvbWUoKSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxoMSBkYXRhLXRlc3RpZD1cInBhZ2UtdGl0bGVcIj5Ib21lPC9oMT5cbiAgICAgIDxwPlRoaXMgaXMgdGhlIGxpc3QuPC9wPlxuICAgICAgPFRvZG9MaXN0IC8+XG4gICAgPC8+XG4gICk7XG59XG5leHBvcnQgZGVmYXVsdCBIb21lO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN3aXRjaCwgUm91dGUsIExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW1wb3J0IEFib3V0IGZyb20gJy4vcGFnZXMvQWJvdXQnO1xuaW1wb3J0IEhvbWUgZnJvbSAnLi9wYWdlcy9Ib21lJztcblxuZnVuY3Rpb24gQXBwbGljYXRpb24oKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxuYXY+XG4gICAgICAgIDxMaW5rIGRhdGEtdGVzdGlkPVwibGluay1ob21lXCIgdG89XCIvXCI+SG9tZTwvTGluaz5cbiAgICAgICAgPExpbmsgdG89XCIvYWJvdXRcIj5BYm91dDwvTGluaz5cbiAgICAgIDwvbmF2PlxuICAgICAgPFN3aXRjaD5cbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvYWJvdXRcIj5cbiAgICAgICAgICA8QWJvdXQgLz5cbiAgICAgICAgPC9Sb3V0ZT5cbiAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCI+XG4gICAgICAgICAgPEhvbWUgLz5cbiAgICAgICAgPC9Sb3V0ZT5cbiAgICAgIDwvU3dpdGNoPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBBcHBsaWNhdGlvbjtcbiIsImltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IEFwcGxpY2F0aW9uIGZyb20gJy4vQXBwbGljYXRpb24nO1xuXG5pbXBvcnQgJy4vaW5kZXguY3NzJztcbmltcG9ydCB7IGluaXRTdG9yZSB9IGZyb20gJy4vc3RvcmUnO1xuXG5jb25zdCBzdG9yZSA9IGluaXRTdG9yZSgpO1xuXG5SZWFjdERPTS5yZW5kZXIoXG4gIDxCcm93c2VyUm91dGVyPlxuICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxuICAgICAgPEFwcGxpY2F0aW9uIC8+XG4gICAgPC9Qcm92aWRlcj5cbiAgPC9Ccm93c2VyUm91dGVyPixcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSxcbik7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjJcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj02MDEwMyxwPTYwMTA2O2V4cG9ydHMuRnJhZ21lbnQ9NjAxMDc7ZXhwb3J0cy5TdHJpY3RNb2RlPTYwMTA4O2V4cG9ydHMuUHJvZmlsZXI9NjAxMTQ7dmFyIHE9NjAxMDkscj02MDExMCx0PTYwMTEyO2V4cG9ydHMuU3VzcGVuc2U9NjAxMTM7dmFyIHU9NjAxMTUsdj02MDExNjtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciB3PVN5bWJvbC5mb3I7bj13KFwicmVhY3QuZWxlbWVudFwiKTtwPXcoXCJyZWFjdC5wb3J0YWxcIik7ZXhwb3J0cy5GcmFnbWVudD13KFwicmVhY3QuZnJhZ21lbnRcIik7ZXhwb3J0cy5TdHJpY3RNb2RlPXcoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTtleHBvcnRzLlByb2ZpbGVyPXcoXCJyZWFjdC5wcm9maWxlclwiKTtxPXcoXCJyZWFjdC5wcm92aWRlclwiKTtyPXcoXCJyZWFjdC5jb250ZXh0XCIpO3Q9dyhcInJlYWN0LmZvcndhcmRfcmVmXCIpO2V4cG9ydHMuU3VzcGVuc2U9dyhcInJlYWN0LnN1c3BlbnNlXCIpO3U9dyhcInJlYWN0Lm1lbW9cIik7dj13KFwicmVhY3QubGF6eVwiKX12YXIgeD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiB5KGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT14JiZhW3hdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24geihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBBPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxCPXt9O2Z1bmN0aW9uIEMoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX1DLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0MucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcih6KDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtDLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEQoKXt9RC5wcm90b3R5cGU9Qy5wcm90b3R5cGU7ZnVuY3Rpb24gRShhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfXZhciBGPUUucHJvdG90eXBlPW5ldyBEO0YuY29uc3RydWN0b3I9RTtsKEYsQy5wcm90b3R5cGUpO0YuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEc9e2N1cnJlbnQ6bnVsbH0sSD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEk9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIEooYSxiLGMpe3ZhciBlLGQ9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSC5jYWxsKGIsZSkmJiFJLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWRbZV0mJihkW2VdPWdbZV0pO3JldHVybnskJHR5cGVvZjpuLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpkLF9vd25lcjpHLmN1cnJlbnR9fVxuZnVuY3Rpb24gSyhhLGIpe3JldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTChhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bn1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE09L1xcLysvZztmdW5jdGlvbiBOKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gTyhhLGIsYyxlLGQpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBuOmNhc2UgcDpoPSEwfX1pZihoKXJldHVybiBoPWEsZD1kKGgpLGE9XCJcIj09PWU/XCIuXCIrTihoLDApOmUsQXJyYXkuaXNBcnJheShkKT8oYz1cIlwiLG51bGwhPWEmJihjPWEucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSxPKGQsYixjLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9ZCYmKEwoZCkmJihkPUsoZCxjKyghZC5rZXl8fGgmJmgua2V5PT09ZC5rZXk/XCJcIjooXCJcIitkLmtleSkucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGQpKSwxO2g9MDtlPVwiXCI9PT1lP1wiLlwiOmUrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGc9XG4wO2c8YS5sZW5ndGg7ZysrKXtrPWFbZ107dmFyIGY9ZStOKGssZyk7aCs9TyhrLGIsYyxmLGQpfWVsc2UgaWYoZj15KGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1lK04oayxnKyspLGgrPU8oayxiLGMsZixkKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9XCJcIithLEVycm9yKHooMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO3JldHVybiBofWZ1bmN0aW9uIFAoYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W10sZD0wO08oYSxlLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGMsYSxkKyspfSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBRKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7YS5fc3RhdHVzPTA7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQ7dGhyb3cgYS5fcmVzdWx0O312YXIgUj17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBTKCl7dmFyIGE9Ui5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKHooMzIxKSk7cmV0dXJuIGF9dmFyIFQ9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6UixSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7dHJhbnNpdGlvbjowfSxSZWFjdEN1cnJlbnRPd25lcjpHLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07XG5leHBvcnRzLkNoaWxkcmVuPXttYXA6UCxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtQKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYyl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UChhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTChhKSl0aHJvdyBFcnJvcih6KDE0MykpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9QztleHBvcnRzLlB1cmVDb21wb25lbnQ9RTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVQ7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoeigyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilILmNhbGwoYixmKSYmIUkuaGFzT3duUHJvcGVydHkoZikmJihlW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO2Zvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6ayxwcm9wczplLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6cixfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnEsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PUo7ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnQscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PUw7XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYsX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpRfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnUsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMlwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYj1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSxjPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIiksZD1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksZT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksZj1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksZz1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksaD1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxrPVN5bWJvbC5mb3IoXCJyZWFjdC5zZXJ2ZXJfY29udGV4dFwiKSxsPVN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKSxtPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSxuPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLHA9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIikscT1TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKSx0PVN5bWJvbC5mb3IoXCJyZWFjdC5vZmZzY3JlZW5cIiksdTt1PVN5bWJvbC5mb3IoXCJyZWFjdC5tb2R1bGUucmVmZXJlbmNlXCIpO1xuZnVuY3Rpb24gdihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgcj1hLiQkdHlwZW9mO3N3aXRjaChyKXtjYXNlIGI6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgZDpjYXNlIGY6Y2FzZSBlOmNhc2UgbTpjYXNlIG46cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIGg6Y2FzZSBsOmNhc2UgcTpjYXNlIHA6Y2FzZSBnOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHJ9fWNhc2UgYzpyZXR1cm4gcn19fWV4cG9ydHMuQ29udGV4dENvbnN1bWVyPWg7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9ZztleHBvcnRzLkVsZW1lbnQ9YjtleHBvcnRzLkZvcndhcmRSZWY9bDtleHBvcnRzLkZyYWdtZW50PWQ7ZXhwb3J0cy5MYXp5PXE7ZXhwb3J0cy5NZW1vPXA7ZXhwb3J0cy5Qb3J0YWw9YztleHBvcnRzLlByb2ZpbGVyPWY7ZXhwb3J0cy5TdHJpY3RNb2RlPWU7ZXhwb3J0cy5TdXNwZW5zZT1tO1xuZXhwb3J0cy5TdXNwZW5zZUxpc3Q9bjtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1mdW5jdGlvbigpe3JldHVybiExfTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09aH07ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWd9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ifTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWx9O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWR9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09cX07ZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1wfTtcbmV4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1jfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1mfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWV9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PW19O2V4cG9ydHMuaXNTdXNwZW5zZUxpc3Q9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1ufTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1kfHxhPT09Znx8YT09PWV8fGE9PT1tfHxhPT09bnx8YT09PXR8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PXB8fGEuJCR0eXBlb2Y9PT1nfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWx8fGEuJCR0eXBlb2Y9PT11fHx2b2lkIDAhPT1hLmdldE1vZHVsZUlkKT8hMDohMX07ZXhwb3J0cy50eXBlT2Y9djtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZnJlZUdsb2JhbCIsImZyZWVTZWxmIiwic2VsZiIsIk9iamVjdCIsInJvb3QiLCJGdW5jdGlvbiIsImlzQXJyYXkiLCJBcnJheSIsImJhc2VJc05hdGl2ZSIsImdldFZhbHVlIiwib2JqZWN0Iiwia2V5IiwidmFsdWUiLCJ1bmRlZmluZWQiLCJTeW1ib2wiLCJnZXRSYXdUYWciLCJvYmplY3RUb1N0cmluZyIsInN5bVRvU3RyaW5nVGFnIiwidG9TdHJpbmdUYWciLCJsaXN0Q2FjaGVDbGVhciIsImxpc3RDYWNoZURlbGV0ZSIsImxpc3RDYWNoZUdldCIsImxpc3RDYWNoZUhhcyIsImxpc3RDYWNoZVNldCIsIkxpc3RDYWNoZSIsImVudHJpZXMiLCJpbmRleCIsImxlbmd0aCIsInRoaXMiLCJjbGVhciIsImVudHJ5Iiwic2V0IiwicHJvdG90eXBlIiwiZ2V0IiwiaGFzIiwiZXEiLCJhcnJheSIsIm5hdGl2ZUNyZWF0ZSIsImdldE5hdGl2ZSIsImlzS2V5YWJsZSIsIm1hcCIsImRhdGEiLCJfX2RhdGFfXyIsImlzU3ltYm9sIiwicmVzdWx0IiwiTWFwIiwidHlwZSIsIm1hcENhY2hlQ2xlYXIiLCJtYXBDYWNoZURlbGV0ZSIsIm1hcENhY2hlR2V0IiwibWFwQ2FjaGVIYXMiLCJtYXBDYWNoZVNldCIsIk1hcENhY2hlIiwiYXJyYXlMaWtlS2V5cyIsImJhc2VLZXlzIiwiaXNBcnJheUxpa2UiLCJpc0Z1bmN0aW9uIiwiaXNMZW5ndGgiLCJyZUlzRGVlcFByb3AiLCJyZUlzUGxhaW5Qcm9wIiwidGVzdCIsImJhc2VHZXRUYWciLCJpc09iamVjdExpa2UiLCJzdHViRmFsc2UiLCJmcmVlRXhwb3J0cyIsIm5vZGVUeXBlIiwiZnJlZU1vZHVsZSIsIkJ1ZmZlciIsImlzQnVmZmVyIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJpIiwiZnJvbUNoYXJDb2RlIiwibiIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImtleXMiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwicyIsImFyZ3VtZW50cyIsImNhbGwiLCJyZWFjdElzIiwiUkVBQ1RfU1RBVElDUyIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29udGV4dFR5cGUiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsIktOT1dOX1NUQVRJQ1MiLCJuYW1lIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwiY29uY2F0IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJkZXNjcmlwdG9yIiwiZSIsIml0ZXJhdGVlIiwic3RhY2tDbGVhciIsInN0YWNrRGVsZXRlIiwic3RhY2tHZXQiLCJzdGFja0hhcyIsInN0YWNrU2V0IiwiU3RhY2siLCJzaXplIiwiaXNPYmplY3QiLCJ0YWciLCJiYXNlSXNFcXVhbERlZXAiLCJiYXNlSXNFcXVhbCIsIm90aGVyIiwiYml0bWFzayIsImN1c3RvbWl6ZXIiLCJzdGFjayIsIlNldENhY2hlIiwiYXJyYXlTb21lIiwiY2FjaGVIYXMiLCJlcXVhbEZ1bmMiLCJpc1BhcnRpYWwiLCJhcnJMZW5ndGgiLCJvdGhMZW5ndGgiLCJhcnJTdGFja2VkIiwib3RoU3RhY2tlZCIsInNlZW4iLCJhcnJWYWx1ZSIsIm90aFZhbHVlIiwiY29tcGFyZWQiLCJvdGhJbmRleCIsInB1c2giLCJiYXNlSXNBcmd1bWVudHMiLCJvYmplY3RQcm90byIsImlzQXJndW1lbnRzIiwicmVJc1VpbnQiLCJiYXNlSXNUeXBlZEFycmF5IiwiYmFzZVVuYXJ5Iiwibm9kZVV0aWwiLCJub2RlSXNUeXBlZEFycmF5IiwiaXNUeXBlZEFycmF5IiwiY2FzdFBhdGgiLCJ0b0tleSIsInBhdGgiLCJpc0tleSIsInN0cmluZ1RvUGF0aCIsInRvU3RyaW5nIiwiZiIsImciLCJoIiwiayIsInBlcmZvcm1hbmNlIiwibm93IiwibCIsInVuc3RhYmxlX25vdyIsInAiLCJEYXRlIiwicSIsIndpbmRvdyIsIk1lc3NhZ2VDaGFubmVsIiwidCIsInUiLCJ3IiwiYSIsImIiLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsIngiLCJ5IiwieiIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiQSIsIkIiLCJDIiwiRCIsIkUiLCJNYXRoIiwiZmxvb3IiLCJGIiwiRyIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsIkgiLCJjIiwiZCIsIkkiLCJKIiwiSyIsInBvcCIsIm0iLCJ2IiwiciIsInNvcnRJbmRleCIsImlkIiwiTCIsIk0iLCJOIiwiTyIsIlAiLCJRIiwiUiIsIlMiLCJUIiwiY2FsbGJhY2siLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsIlUiLCJWIiwicHJpb3JpdHlMZXZlbCIsIlciLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiYXBwbHkiLCJmdW5jVG9TdHJpbmciLCJmdW5jIiwic3JjVmFsdWUiLCJmcmVlUHJvY2VzcyIsInByb2Nlc3MiLCJyZXF1aXJlIiwidHlwZXMiLCJiaW5kaW5nIiwiYXJyYXlNYXAiLCJiYXNlSXRlcmF0ZWUiLCJiYXNlTWFwIiwiY29sbGVjdGlvbiIsImJhc2VNYXRjaGVzIiwiYmFzZU1hdGNoZXNQcm9wZXJ0eSIsImlkZW50aXR5IiwicHJvcGVydHkiLCJiYXNlSXNNYXRjaCIsImdldE1hdGNoRGF0YSIsIm1hdGNoZXNTdHJpY3RDb21wYXJhYmxlIiwibWF0Y2hEYXRhIiwibm9DdXN0b21pemVyIiwib2JqVmFsdWUiLCJDT01QQVJFX1BBUlRJQUxfRkxBRyIsImFzc29jSW5kZXhPZiIsInNwbGljZSIsInBhaXJzIiwiTEFSR0VfQVJSQVlfU0laRSIsImlzTWFza2VkIiwidG9Tb3VyY2UiLCJyZUlzSG9zdEN0b3IiLCJmdW5jUHJvdG8iLCJyZUlzTmF0aXZlIiwiUmVnRXhwIiwicmVwbGFjZSIsIm5hdGl2ZU9iamVjdFRvU3RyaW5nIiwiaXNPd24iLCJ1bm1hc2tlZCIsInVpZCIsImNvcmVKc0RhdGEiLCJtYXNrU3JjS2V5IiwiZXhlYyIsIklFX1BST1RPIiwiSGFzaCIsImhhc2hDbGVhciIsImhhc2hEZWxldGUiLCJoYXNoR2V0IiwiaGFzaEhhcyIsImhhc2hTZXQiLCJnZXRNYXBEYXRhIiwiZXF1YWxBcnJheXMiLCJlcXVhbEJ5VGFnIiwiZXF1YWxPYmplY3RzIiwiZ2V0VGFnIiwiYXJnc1RhZyIsImFycmF5VGFnIiwib2JqZWN0VGFnIiwib2JqSXNBcnIiLCJvdGhJc0FyciIsIm9ialRhZyIsIm90aFRhZyIsIm9iaklzT2JqIiwib3RoSXNPYmoiLCJpc1NhbWVUYWciLCJvYmpJc1dyYXBwZWQiLCJvdGhJc1dyYXBwZWQiLCJvYmpVbndyYXBwZWQiLCJvdGhVbndyYXBwZWQiLCJzZXRDYWNoZUFkZCIsInNldENhY2hlSGFzIiwidmFsdWVzIiwiYWRkIiwicHJlZGljYXRlIiwiY2FjaGUiLCJVaW50OEFycmF5IiwibWFwVG9BcnJheSIsInNldFRvQXJyYXkiLCJzeW1ib2xQcm90byIsInN5bWJvbFZhbHVlT2YiLCJ2YWx1ZU9mIiwiYnl0ZUxlbmd0aCIsImJ5dGVPZmZzZXQiLCJidWZmZXIiLCJtZXNzYWdlIiwiY29udmVydCIsInN0YWNrZWQiLCJnZXRBbGxLZXlzIiwib2JqUHJvcHMiLCJvYmpMZW5ndGgiLCJvYmpTdGFja2VkIiwic2tpcEN0b3IiLCJvYmpDdG9yIiwiY29uc3RydWN0b3IiLCJvdGhDdG9yIiwiYmFzZUdldEFsbEtleXMiLCJnZXRTeW1ib2xzIiwiYXJyYXlQdXNoIiwia2V5c0Z1bmMiLCJzeW1ib2xzRnVuYyIsIm9mZnNldCIsImFycmF5RmlsdGVyIiwic3R1YkFycmF5IiwibmF0aXZlR2V0U3ltYm9scyIsInN5bWJvbCIsInJlc0luZGV4IiwiYmFzZVRpbWVzIiwiaXNJbmRleCIsImluaGVyaXRlZCIsImlzQXJyIiwiaXNBcmciLCJpc0J1ZmYiLCJpc1R5cGUiLCJza2lwSW5kZXhlcyIsInR5cGVkQXJyYXlUYWdzIiwiaXNQcm90b3R5cGUiLCJuYXRpdmVLZXlzIiwiQ3RvciIsIm92ZXJBcmciLCJ0cmFuc2Zvcm0iLCJhcmciLCJEYXRhVmlldyIsIlByb21pc2UiLCJTZXQiLCJXZWFrTWFwIiwibWFwVGFnIiwicHJvbWlzZVRhZyIsInNldFRhZyIsIndlYWtNYXBUYWciLCJkYXRhVmlld1RhZyIsImRhdGFWaWV3Q3RvclN0cmluZyIsIm1hcEN0b3JTdHJpbmciLCJwcm9taXNlQ3RvclN0cmluZyIsInNldEN0b3JTdHJpbmciLCJ3ZWFrTWFwQ3RvclN0cmluZyIsIkFycmF5QnVmZmVyIiwicmVzb2x2ZSIsImN0b3JTdHJpbmciLCJpc1N0cmljdENvbXBhcmFibGUiLCJoYXNJbiIsImJhc2VHZXQiLCJkZWZhdWx0VmFsdWUiLCJtZW1vaXplQ2FwcGVkIiwicmVQcm9wTmFtZSIsInJlRXNjYXBlQ2hhciIsInN0cmluZyIsImNoYXJDb2RlQXQiLCJtYXRjaCIsIm51bWJlciIsInF1b3RlIiwic3ViU3RyaW5nIiwibWVtb2l6ZSIsInJlc29sdmVyIiwibWVtb2l6ZWQiLCJhcmdzIiwiQ2FjaGUiLCJiYXNlVG9TdHJpbmciLCJzeW1ib2xUb1N0cmluZyIsImJhc2VIYXNJbiIsImhhc1BhdGgiLCJoYXNGdW5jIiwiYmFzZVByb3BlcnR5IiwiYmFzZVByb3BlcnR5RGVlcCIsImJhc2VFYWNoIiwiYmFzZUZvck93biIsImNyZWF0ZUJhc2VFYWNoIiwiYmFzZUZvciIsImNyZWF0ZUJhc2VGb3IiLCJmcm9tUmlnaHQiLCJpdGVyYWJsZSIsInByb3BzIiwiZWFjaEZ1bmMiLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwib3B0aW9ucyIsImdyb3VwcyIsInByZWZpeCIsImRlbGltaXRlciIsIm9wdGlvbmFsIiwicmVwZWF0IiwicGFydGlhbCIsImFzdGVyaXNrIiwicGF0dGVybiIsImF0dGFjaEtleXMiLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiZmxhZ3MiLCJhcnJheVRvUmVnZXhwIiwidG9rZW5zVG9SZWdFeHAiLCJwYXJzZSIsInN0cmluZ1RvUmVnZXhwIiwiY29tcGlsZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJQQVRIX1JFR0VYUCIsInJlcyIsInRva2VucyIsImRlZmF1bHREZWxpbWl0ZXIiLCJlc2NhcGVkIiwic2xpY2UiLCJuZXh0IiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsInN1YnN0ciIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIm9iaiIsIm9wdHMiLCJlbmNvZGUiLCJwcmV0dHkiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ0b2tlbiIsInNlZ21lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiaiIsInJlIiwic2Vuc2l0aXZlIiwic3RyaWN0IiwiZW5kIiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsImFyciIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsIkVycm9yIiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImJpZ2ludCIsImJvb2wiLCJhbnkiLCJhcnJheU9mIiwiZWxlbWVudCIsImVsZW1lbnRUeXBlIiwiaW5zdGFuY2VPZiIsIm5vZGUiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYmF0Y2giLCJnZXRCYXRjaCIsIm51bGxMaXN0ZW5lcnMiLCJub3RpZnkiLCJzdG9yZSIsInBhcmVudFN1YiIsInVuc3Vic2NyaWJlIiwibGlzdGVuZXJzIiwiaGFuZGxlQ2hhbmdlV3JhcHBlciIsInN1YnNjcmlwdGlvbiIsIm9uU3RhdGVDaGFuZ2UiLCJ0cnlTdWJzY3JpYmUiLCJhZGROZXN0ZWRTdWIiLCJzdWJzY3JpYmUiLCJmaXJzdCIsImxhc3QiLCJsaXN0ZW5lciIsImlzU3Vic2NyaWJlZCIsInByZXYiLCJjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24iLCJub3RpZnlOZXN0ZWRTdWJzIiwiQm9vbGVhbiIsInRyeVVuc3Vic2NyaWJlIiwiZ2V0TGlzdGVuZXJzIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidXNlTGF5b3V0RWZmZWN0IiwidXNlRWZmZWN0IiwiX3JlZiIsImNvbnRleHQiLCJjaGlsZHJlbiIsImNvbnRleHRWYWx1ZSIsInVzZU1lbW8iLCJwcmV2aW91c1N0YXRlIiwiZ2V0U3RhdGUiLCJDb250ZXh0IiwiUHJvdmlkZXIiLCJiaW5kIiwidXNlQ29udGV4dCIsImNyZWF0ZVN0b3JlSG9vayIsInVzZVJlZHV4Q29udGV4dCIsImNyZWF0ZURpc3BhdGNoSG9vayIsInVzZVN0b3JlIiwiZGlzcGF0Y2giLCJ1c2VEaXNwYXRjaCIsInJlZkVxdWFsaXR5IiwiY3JlYXRlU2VsZWN0b3JIb29rIiwic2VsZWN0b3IiLCJlcXVhbGl0eUZuIiwiX3VzZVJlZHV4Q29udGV4dCIsInNlbGVjdGVkU3RhdGUiLCJjb250ZXh0U3ViIiwiZm9yY2VSZW5kZXIiLCJ1c2VSZWR1Y2VyIiwibGF0ZXN0U3Vic2NyaXB0aW9uQ2FsbGJhY2tFcnJvciIsInVzZVJlZiIsImxhdGVzdFNlbGVjdG9yIiwibGF0ZXN0U3RvcmVTdGF0ZSIsImxhdGVzdFNlbGVjdGVkU3RhdGUiLCJzdG9yZVN0YXRlIiwiY3VycmVudCIsIm5ld1NlbGVjdGVkU3RhdGUiLCJjaGVja0ZvclVwZGF0ZXMiLCJuZXdTdG9yZVN0YXRlIiwiX25ld1NlbGVjdGVkU3RhdGUiLCJ1c2VTZWxlY3RvcldpdGhTdG9yZUFuZFN1YnNjcmlwdGlvbiIsInVzZURlYnVnVmFsdWUiLCJuZXdCYXRjaCIsInVzZVNlbGVjdG9yIiwiX3NldFByb3RvdHlwZU9mIiwibyIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJjaGFyQXQiLCJzcGxpY2VPbmUiLCJsaXN0IiwiY29uZGl0aW9uIiwiYWRkTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsInRvTG93ZXJDYXNlIiwiaW5kZXhPZiIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsInNlYXJjaCIsImhhc2giLCJzdGF0ZSIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJoYXNUcmFpbGluZ1NsYXNoIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsImNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIiwicHJvbXB0Iiwic2V0UHJvbXB0IiwibmV4dFByb21wdCIsImNvbmZpcm1UcmFuc2l0aW9uVG8iLCJhY3Rpb24iLCJnZXRVc2VyQ29uZmlybWF0aW9uIiwiYXBwZW5kTGlzdGVuZXIiLCJmbiIsImlzQWN0aXZlIiwiZmlsdGVyIiwiaXRlbSIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJfa2V5IiwiY2FuVXNlRE9NIiwiZ2V0Q29uZmlybWF0aW9uIiwiY29uZmlybSIsIlBvcFN0YXRlRXZlbnQiLCJIYXNoQ2hhbmdlRXZlbnQiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwiY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJ1YSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwicmFuZG9tIiwidHJhbnNpdGlvbk1hbmFnZXIiLCJzZXRTdGF0ZSIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiZXZlbnQiLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiaGFuZGxlUG9wIiwiaGFuZGxlSGFzaENoYW5nZSIsImZvcmNlTmV4dFBvcCIsIm9rIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzQmxvY2tlZCIsImhyZWYiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiTUFYX1NJR05FRF8zMV9CSVRfSU5UIiwiY29tbW9uanNHbG9iYWwiLCJnbG9iYWxUaGlzIiwiY3JlYXRlRXZlbnRFbWl0dGVyIiwiaGFuZGxlcnMiLCJvbiIsImhhbmRsZXIiLCJvZmYiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiY3JlYXRlQ29udGV4dCIsImNhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX1Byb3ZpZGVyJGNoaWxkQ29udGV4IiwiX0NvbnN1bWVyJGNvbnRleHRUeXBlIiwiY29udGV4dFByb3AiLCJfUmVhY3QkQ29tcG9uZW50IiwiX3RoaXMiLCJlbWl0dGVyIiwiX3Byb3RvIiwiZ2V0Q2hpbGRDb250ZXh0IiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIm5leHRQcm9wcyIsIm9sZFZhbHVlIiwiQ29uc3VtZXIiLCJfUmVhY3QkQ29tcG9uZW50MiIsIl90aGlzMiIsIl9sZW4yIiwiX2tleTIiLCJvYnNlcnZlZEJpdHMiLCJvblVwZGF0ZSIsIl9wcm90bzIiLCJjb21wb25lbnREaWRNb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiY3JlYXRlTmFtZWRDb250ZXh0IiwiaGlzdG9yeUNvbnRleHQiLCJSb3V0ZXIiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwidXJsIiwicGFyYW1zIiwiaXNFeGFjdCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwicmVkdWNlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgkMSIsIm1lbW8iLCJSb3V0ZSIsImNvbnRleHQkMSIsImNvbXB1dGVkTWF0Y2giLCJfdGhpcyRwcm9wcyIsImlzRW1wdHlDaGlsZHJlbiIsIlN3aXRjaCIsImNoaWxkIiwiQnJvd3NlclJvdXRlciIsInJlc29sdmVUb0xvY2F0aW9uIiwibm9ybWFsaXplVG9Mb2NhdGlvbiIsImZvcndhcmRSZWZTaGltIiwiZm9yd2FyZFJlZiIsIkxpbmtBbmNob3IiLCJmb3J3YXJkZWRSZWYiLCJpbm5lclJlZiIsIm5hdmlnYXRlIiwiX29uQ2xpY2siLCJvbkNsaWNrIiwicmVzdCIsImV4IiwicHJldmVudERlZmF1bHQiLCJkZWZhdWx0UHJldmVudGVkIiwiYnV0dG9uIiwibWV0YUtleSIsImFsdEtleSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImlzTW9kaWZpZWRFdmVudCIsInJlZiIsIkxpbmsiLCJfcmVmMiIsIl9yZWYyJGNvbXBvbmVudCIsImlzRHVwbGljYXRlTmF2aWdhdGlvbiIsImZvcndhcmRSZWZTaGltJDEiLCJmb3J3YXJkUmVmJDEiLCJfcmVmJGFyaWFDdXJyZW50IiwiYXJpYUN1cnJlbnQiLCJfcmVmJGFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZVN0eWxlIiwiY2xhc3NOYW1lUHJvcCIsImNsYXNzTmFtZSIsImlzQWN0aXZlUHJvcCIsImxvY2F0aW9uUHJvcCIsInN0eWxlUHJvcCIsInN0eWxlIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJmb3JtYXRQcm9kRXJyb3JNZXNzYWdlIiwiY29kZSIsIiQkb2JzZXJ2YWJsZSIsIm9ic2VydmFibGUiLCJyYW5kb21TdHJpbmciLCJzdWJzdHJpbmciLCJBY3Rpb25UeXBlcyIsIklOSVQiLCJSRVBMQUNFIiwiUFJPQkVfVU5LTk9XTl9BQ1RJT04iLCJpc1BsYWluT2JqZWN0IiwicHJvdG8iLCJERUZBVUxUX1NUQVRFIiwiaXRlbXMiLCJkb25lIiwidGV4dCIsInJhbmRvbVVVSUQiLCJjcnlwdG8iLCJnZXRSYW5kb21WYWx1ZXMiLCJybmRzOCIsInJuZyIsImJ5dGVUb0hleCIsImJ1ZiIsInJuZHMiLCJ1bnNhZmVTdHJpbmdpZnkiLCJvbkNoYW5nZSIsInVzZUNhbGxiYWNrIiwic2V0RG9uZSIsInY0IiwiY2hlY2tlZCIsInNldFRleHQiLCJhZGRJdGVtIiwiZGlzYWJsZWQiLCJjcmVhdGVTdG9yZSIsInJlZHVjZXIiLCJwcmVsb2FkZWRTdGF0ZSIsImVuaGFuY2VyIiwiY3VycmVudFJlZHVjZXIiLCJjdXJyZW50U3RhdGUiLCJjdXJyZW50TGlzdGVuZXJzIiwibmV4dExpc3RlbmVycyIsImlzRGlzcGF0Y2hpbmciLCJlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzIiwicmVwbGFjZVJlZHVjZXIiLCJuZXh0UmVkdWNlciIsIm91dGVyU3Vic2NyaWJlIiwib2JzZXJ2ZXIiLCJvYnNlcnZlU3RhdGUiLCJSZWFjdERPTSIsImdldEVsZW1lbnRCeUlkIiwiYWEiLCJiYSIsImNhIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwia2EiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJyZW1vdmVFbXB0eVN0cmluZyIsIm9hIiwicGEiLCJxYSIsIm1hIiwiaXNOYU4iLCJuYSIsImxhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ4bGlua0hyZWYiLCJyYSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwic2EiLCJ0YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJmb3IiLCJNYSIsIkthIiwiaXRlcmF0b3IiLCJMYSIsIk5hIiwidHJpbSIsIk9hIiwiUGEiLCJwcmVwYXJlU3RhY2tUcmFjZSIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJRYSIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJDaGlsZHJlbiIsImRiIiwiZmIiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwYiIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInFiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJyYiIsInNiIiwidGIiLCJzZXRQcm9wZXJ0eSIsInViIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmIiLCJ3YiIsImlzIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCIkYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiYWMiLCJjYyIsInNpYmxpbmciLCJiYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJvYyIsInBjIiwicWMiLCJyYyIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsInRhcmdldENvbnRhaW5lcnMiLCJzYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsInRjIiwidmMiLCJ3YyIsImxhbmVQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJ4YyIsInljIiwic2hpZnQiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwiUmMiLCJVYyIsInBlbmRpbmdMYW5lcyIsImV4cGlyZWRMYW5lcyIsInN1c3BlbmRlZExhbmVzIiwicGluZ2VkTGFuZXMiLCJWYyIsImVudGFuZ2xlZExhbmVzIiwiZW50YW5nbGVtZW50cyIsIldjIiwiWGMiLCJZYyIsIlpjIiwiJGMiLCJldmVudFRpbWVzIiwiY2x6MzIiLCJiZCIsImNkIiwibG9nIiwiTE4yIiwiZGQiLCJlZCIsImZkIiwiZ2QiLCJoZCIsInVjIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsIm9kIiwia2V5Q29kZSIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiY3VycmVudFRhcmdldCIsImlzRGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiaXNQZXJzaXN0ZW50Iiwid2QiLCJ4ZCIsInlkIiwic2QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJJZCIsImNsaXBib2FyZERhdGEiLCJKZCIsIkxkIiwiTWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiTmQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlFkIiwibG9jYWxlIiwid2hpY2giLCJSZCIsIlRkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiVmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiWGQiLCJZZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInRlbCIsInRpbWUiLCJ3ZWVrIiwibWUiLCJuZSIsIm9lIiwicGUiLCJxZSIsInNlIiwidGUiLCJ1ZSIsInZlIiwid2UiLCJ4ZSIsInllIiwiemUiLCJvbmlucHV0IiwiQWUiLCJkZXRhY2hFdmVudCIsIkJlIiwiQ2UiLCJhdHRhY2hFdmVudCIsIkRlIiwiRWUiLCJGZSIsIkhlIiwiSWUiLCJKZSIsIktlIiwiTGUiLCJuZXh0U2libGluZyIsIk1lIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIk5lIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50V2luZG93IiwiT2UiLCJjb250ZW50RWRpdGFibGUiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJWZSIsIldlIiwiWGUiLCJZZSIsIlplIiwiWWIiLCJpbnN0YW5jZSIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJwYXNzaXZlIiwiTmIiLCJlZiIsImZmIiwicGFyZW50V2luZG93IiwiZ2YiLCJoZiIsImplIiwiY2hhciIsImtlIiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJwcmV2aW91c1NpYmxpbmciLCJ0ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiQ2YiLCJEZiIsIkVmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwiX2N1cnJlbnRWYWx1ZSIsInNnIiwiY2hpbGRMYW5lcyIsInRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJ1ZyIsInZnIiwicmVzcG9uZGVycyIsIndnIiwieGciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImZpcnN0QmFzZVVwZGF0ZSIsImxhc3RCYXNlVXBkYXRlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ5ZyIsInpnIiwiZXZlbnRUaW1lIiwibGFuZSIsInBheWxvYWQiLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJDb21wb25lbnQiLCJyZWZzIiwiR2ciLCJLZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFscyIsImVucXVldWVTZXRTdGF0ZSIsIkhnIiwiSWciLCJKZyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJMZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiTWciLCJ1cGRhdGVyIiwiTmciLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiUGciLCJRZyIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJSZyIsIlNnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIlRnIiwiVWciLCJtb2RlIiwiVmciLCJpbXBsZW1lbnRhdGlvbiIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsImloIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiamgiLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwicGVuZGluZ1Byb3BzIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInVoIiwiX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnkiLCJ2aCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJ3aCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJiYXNlUXVldWUiLCJxdWV1ZSIsIkloIiwiSmgiLCJLaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJMaCIsIk1oIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwibXV0YWJsZVJlYWRMYW5lcyIsIk5oIiwidXNlU3RhdGUiLCJnZXRTbmFwc2hvdCIsInNldFNuYXBzaG90IiwiT2giLCJQaCIsIlFoIiwiUmgiLCJkZXN0cm95IiwiZGVwcyIsIlNoIiwiVGgiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwicmVhZENvbnRleHQiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlT3BhcXVlSWRlbnRpZmllciIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsInVmIiwiZWkiLCJSZWFjdEN1cnJlbnRPd25lciIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJiYXNlTGFuZXMiLCJuaSIsIm9pIiwicGkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJxaSIsInJpIiwicGVuZGluZ0NvbnRleHQiLCJCaSIsIkRpIiwiRWkiLCJzaSIsInJldHJ5TGFuZSIsInRpIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsInVpIiwidW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsInRhaWwiLCJ0YWlsTW9kZSIsIkFpIiwiRmkiLCJHaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbmNsaWNrIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJIaSIsIklpIiwiSmkiLCJLaSIsIkxpIiwiTWkiLCJOaSIsIk9pIiwiUGkiLCJRaSIsIlJpIiwiU2kiLCJjb21wb25lbnREaWRDYXRjaCIsIlRpIiwiY29tcG9uZW50U3RhY2siLCJVaSIsIldlYWtTZXQiLCJWaSIsIldpIiwiWGkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIllpIiwiWmkiLCIkaSIsImZvY3VzIiwiYWoiLCJkaXNwbGF5IiwiYmoiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsImNqIiwiZGoiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJpaiIsImpqIiwia2oiLCJsaiIsInRoZW4iLCJtaiIsIm5qIiwiY2VpbCIsIm9qIiwicGoiLCJYIiwiWSIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIkluZmluaXR5Iiwid2oiLCJjayIsIloiLCJ4aiIsInlqIiwiemoiLCJBaiIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsIlNjIiwiS2oiLCJMaiIsIk1qIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiY2FsbGJhY2tQcmlvcml0eSIsIlRjIiwiTmoiLCJPaiIsIlBqIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZExhbmVzIiwiVWoiLCJ0aW1lb3V0SGFuZGxlIiwiV2oiLCJYaiIsInBpbmdDYWNoZSIsIllqIiwiWmoiLCJ2YSIsImFrIiwiYmsiLCJkayIsInJhbmdlQ291bnQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZWsiLCJtaW4iLCJleHRlbmQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsIm9uQ29tbWl0RmliZXJSb290IiwiZmsiLCJnayIsImlrIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImprIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImtrIiwibGsiLCJtayIsIm5rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwidWsiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIlZqIiwidmsiLCJFdmVudHMiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwiUHJvZmlsZXIiLCJTdXNwZW5zZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkxhenkiLCJQb3J0YWwiLCJTdXNwZW5zZUxpc3QiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1N1c3BlbnNlTGlzdCIsImlzVmFsaWRFbGVtZW50VHlwZSIsImdldE1vZHVsZUlkIiwidHlwZU9mIl0sInNvdXJjZVJvb3QiOiIifQ==